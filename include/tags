!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
$	tags	/^Ogre::DotSceneLoader::DotSceneLoader	DotSceneLoader.h	\/^        DotSceneLoader() : mSceneMgr(0) {}$\/;"	f	class:Ogre::DotSceneLoader	access:public	signature:()$/;"	v	typeref:class:__anon1
$	tags	/^Ogre::DotSceneLoader::~DotSceneLoader	DotSceneLoader.h	\/^        virtual ~DotSceneLoader() {}$\/;"	f	class:Ogre::DotSceneLoader	access:public	signature:()$/;"	v	typeref:class:__anon2
A	tinyxml/docs/tab_r.gif	/^H∞†¡ÉÚKÅ"ÉRHúH±¢≈ã3j‹»±£«è CäI≤§…ì(S™\\È≈Åu&@Ä ¡≤¶Õõ8sÍ‹…≥ßOˇñ(¬±ÄD–£Hì*] ¥©”ßP£JùJµ™’´X≥j› µ´◊ØS84± âh”™]À∂≠€∑p„ ùK∑Æ›ªxÛÍ›À∑ØﬂøÄ”} ‚DÃf(^Ã∏±„«ê#KûLπ≤ÂÀò3kﬁÃπ≥Áœ†CãmπCƒHúXÕ∫µÎ◊∞cÀûMª∂Ì€∏sÎﬁÕª∑Ôﬂ¿ÉN˜√Jî ¡ÆπÛÁ–£KüNΩ∫ıÎÿ≥kﬂŒΩª˜Ô‡√ãOæ<v1ë+_.≥Ω˚˜„ÀüOøæ˝˚¯ÛÎﬂœøøˇˇ/;"	v
A	tinyxml/utf8test.gif	/^4+´SÇh¿jÄÅBXp]éEkØáòfï6›ø],@âúHÖ”JBy¿≈Ù"–B∞aàª[hQ¿BŸ[8(çá¥∏/;"	v
ANIM_DANCE	GraphicCharacter.h	/^		ANIM_DANCE,$/;"	e	enum:GraphicCharacter::AnimID
ANIM_DRAW_SWORDS	GraphicCharacter.h	/^		ANIM_DRAW_SWORDS,$/;"	e	enum:GraphicCharacter::AnimID
ANIM_FADE_SPEED	GraphicCharacter.h	28;"	d
ANIM_HANDS_CLOSED	GraphicCharacter.h	/^		ANIM_HANDS_CLOSED,$/;"	e	enum:GraphicCharacter::AnimID
ANIM_HANDS_RELAXED	GraphicCharacter.h	/^		ANIM_HANDS_RELAXED,$/;"	e	enum:GraphicCharacter::AnimID
ANIM_IDLE_BASE	GraphicCharacter.h	/^		ANIM_IDLE_BASE,$/;"	e	enum:GraphicCharacter::AnimID
ANIM_IDLE_TOP	GraphicCharacter.h	/^		ANIM_IDLE_TOP,$/;"	e	enum:GraphicCharacter::AnimID
ANIM_JUMP_END	GraphicCharacter.h	/^		ANIM_JUMP_END,$/;"	e	enum:GraphicCharacter::AnimID
ANIM_JUMP_LOOP	GraphicCharacter.h	/^		ANIM_JUMP_LOOP,$/;"	e	enum:GraphicCharacter::AnimID
ANIM_JUMP_START	GraphicCharacter.h	/^		ANIM_JUMP_START,$/;"	e	enum:GraphicCharacter::AnimID
ANIM_NONE	GraphicCharacter.h	/^		ANIM_NONE$/;"	e	enum:GraphicCharacter::AnimID
ANIM_RUN_BASE	GraphicCharacter.h	/^		ANIM_RUN_BASE,$/;"	e	enum:GraphicCharacter::AnimID
ANIM_RUN_TOP	GraphicCharacter.h	/^		ANIM_RUN_TOP,$/;"	e	enum:GraphicCharacter::AnimID
ANIM_SLICE_HORIZONTAL	GraphicCharacter.h	/^		ANIM_SLICE_HORIZONTAL,$/;"	e	enum:GraphicCharacter::AnimID
ANIM_SLICE_VERTICAL	GraphicCharacter.h	/^		ANIM_SLICE_VERTICAL,$/;"	e	enum:GraphicCharacter::AnimID
Accept	tinyxml/docs/classTiXmlNode-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#acc0f88b7462c6cb73809d410a4f5bb86">Accept<\/a>(TiXmlVisitor *visitor) const =0<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [pure virtual]<\/code><\/td><\/tr>$/;"	p	file:	signature:(TiXmlVisitor *visitor) const
Accept	tinyxml/tinyxml.cpp	/^bool TiXmlComment::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlComment	signature:( TiXmlVisitor* visitor ) const
Accept	tinyxml/tinyxml.cpp	/^bool TiXmlDeclaration::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlDeclaration	signature:( TiXmlVisitor* visitor ) const
Accept	tinyxml/tinyxml.cpp	/^bool TiXmlDocument::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlDocument	signature:( TiXmlVisitor* visitor ) const
Accept	tinyxml/tinyxml.cpp	/^bool TiXmlElement::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlElement	signature:( TiXmlVisitor* visitor ) const
Accept	tinyxml/tinyxml.cpp	/^bool TiXmlText::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlText	signature:( TiXmlVisitor* visitor ) const
Accept	tinyxml/tinyxml.cpp	/^bool TiXmlUnknown::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlUnknown	signature:( TiXmlVisitor* visitor ) const
Accept	tinyxml/tinyxml.h	/^	virtual bool Accept( TiXmlVisitor* content ) const;$/;"	p	class:TiXmlDocument	access:public	signature:( TiXmlVisitor* content ) const
Accept	tinyxml/tinyxml.h	/^	virtual bool Accept( TiXmlVisitor* content ) const;$/;"	p	class:TiXmlText	access:public	signature:( TiXmlVisitor* content ) const
Accept	tinyxml/tinyxml.h	/^	virtual bool Accept( TiXmlVisitor* content ) const;$/;"	p	class:TiXmlUnknown	access:public	signature:( TiXmlVisitor* content ) const
Accept	tinyxml/tinyxml.h	/^	virtual bool Accept( TiXmlVisitor* visitor ) const = 0;$/;"	p	class:TiXmlNode	access:public	signature:( TiXmlVisitor* visitor ) const
Accept	tinyxml/tinyxml.h	/^	virtual bool Accept( TiXmlVisitor* visitor ) const;$/;"	p	class:TiXmlComment	access:public	signature:( TiXmlVisitor* visitor ) const
Accept	tinyxml/tinyxml.h	/^	virtual bool Accept( TiXmlVisitor* visitor ) const;$/;"	p	class:TiXmlDeclaration	access:public	signature:( TiXmlVisitor* visitor ) const
Accept	tinyxml/tinyxml.h	/^	virtual bool Accept( TiXmlVisitor* visitor ) const;$/;"	p	class:TiXmlElement	access:public	signature:( TiXmlVisitor* visitor ) const
Add	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00909"><\/a>00909     <span class="keywordtype">void<\/span> Add( <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* attribute );$/;"	p	class:TiXmlVisitor::TiXmlAttributeSet	file:	access:public	signature:( <a class=” href=” title=”>TiXmlAttribute</a>* attribute )
Add	tinyxml/tinyxml.cpp	/^void TiXmlAttributeSet::Add( TiXmlAttribute* addMe )$/;"	f	class:TiXmlAttributeSet	signature:( TiXmlAttribute* addMe )
Add	tinyxml/tinyxml.h	/^	void Add( TiXmlAttribute* attribute );$/;"	p	class:TiXmlAttributeSet	access:public	signature:( TiXmlAttribute* attribute )
AnimID	GraphicCharacter.h	/^	enum AnimID$/;"	g	class:GraphicCharacter	access:private
Attribute	tinyxml/tinyxml.cpp	/^const char* TiXmlElement::Attribute( const char* name ) const$/;"	f	class:TiXmlElement	signature:( const char* name ) const
Attribute	tinyxml/tinyxml.cpp	/^const char* TiXmlElement::Attribute( const char* name, double* d ) const$/;"	f	class:TiXmlElement	signature:( const char* name, double* d ) const
Attribute	tinyxml/tinyxml.cpp	/^const char* TiXmlElement::Attribute( const char* name, int* i ) const$/;"	f	class:TiXmlElement	signature:( const char* name, int* i ) const
Attribute	tinyxml/tinyxml.cpp	/^const std::string* TiXmlElement::Attribute( const std::string& name ) const$/;"	f	class:TiXmlElement	signature:( const std::string& name ) const
Attribute	tinyxml/tinyxml.cpp	/^const std::string* TiXmlElement::Attribute( const std::string& name, double* d ) const$/;"	f	class:TiXmlElement	signature:( const std::string& name, double* d ) const
Attribute	tinyxml/tinyxml.cpp	/^const std::string* TiXmlElement::Attribute( const std::string& name, int* i ) const$/;"	f	class:TiXmlElement	signature:( const std::string& name, int* i ) const
Attribute	tinyxml/tinyxml.h	/^	const char* Attribute( const char* name ) const;$/;"	p	class:TiXmlElement	access:public	signature:( const char* name ) const
Attribute	tinyxml/tinyxml.h	/^	const char* Attribute( const char* name, double* d ) const;$/;"	p	class:TiXmlElement	access:public	signature:( const char* name, double* d ) const
Attribute	tinyxml/tinyxml.h	/^	const char* Attribute( const char* name, int* i ) const;$/;"	p	class:TiXmlElement	access:public	signature:( const char* name, int* i ) const
Attribute	tinyxml/tinyxml.h	/^	const std::string* Attribute( const std::string& name ) const;$/;"	p	class:TiXmlElement	access:public	signature:( const std::string& name ) const
Attribute	tinyxml/tinyxml.h	/^	const std::string* Attribute( const std::string& name, double* d ) const;$/;"	p	class:TiXmlElement	access:public	signature:( const std::string& name, double* d ) const
Attribute	tinyxml/tinyxml.h	/^	const std::string* Attribute( const std::string& name, int* i ) const;$/;"	p	class:TiXmlElement	access:public	signature:( const std::string& name, int* i ) const
B	tinyxml/docs/classTiXmlUnknown.png	/^/;"	v
BT_KINEMATIC_CHARACTER_CONTROLLER_H	btKinematicCharacterController.h	18;"	d
Blank	tinyxml/tinyxml.h	/^	bool Blank() const;	\/\/ returns true if all white space and new lines$/;"	p	class:TiXmlText	access:protected	signature:() const
Blank	tinyxml/tinyxmlparser.cpp	/^bool TiXmlText::Blank() const$/;"	f	class:TiXmlText	signature:() const
CAM_HEIGHT	GraphicCharacter.h	25;"	d
CDATA	tinyxml/tinyxml.h	/^	bool CDATA() const				{ return cdata; }$/;"	f	class:TiXmlText	access:public	signature:() const
CHARACTER_CONTROLLER_H	DynamicCharacterController.h	2;"	d
CHAR_HEIGHT	GraphicCharacter.h	24;"	d
CStr	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01768"><\/a><a class="code" href="classTiXmlPrinter.html#a859eede9597d3e0355b77757be48735e">01768<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* <a class="code" href="classTiXmlPrinter.html#a859eede9597d3e0355b77757be48735e" title="Return the result.">CStr<\/a>()                              { <span class="keywordflow">return<\/span> buffer.c_str(); }$/;"	f	class:TiXmlVisitor::TiXmlPrinter	access:public	signature:()
CStr	tinyxml/tinyxml.h	/^	const char* CStr()								{ return buffer.c_str(); }$/;"	f	class:TiXmlPrinter	access:public	signature:()
Character	Character.h	/^	Character( SceneManager * pSceneMgr, OgreBulletDynamics::DynamicsWorld * pWorld, CharacterState * pCharacterState );$/;"	p	class:Character	access:public	signature:( SceneManager * pSceneMgr, OgreBulletDynamics::DynamicsWorld * pWorld, CharacterState * pCharacterState )
Character	Character.h	/^class Character$/;"	c
Character	Character.h~	/^	Character( SceneManager * pSceneMgr, OgreBulletDynamics::DynamicsWorld * pWorld, CharacterState * pCharacterState );$/;"	p	class:Character	file:	access:public	signature:( SceneManager * pSceneMgr, OgreBulletDynamics::DynamicsWorld * pWorld, CharacterState * pCharacterState )
Character	Character.h~	/^class Character$/;"	c	file:
Character::Character	Character.h	/^	Character( SceneManager * pSceneMgr, OgreBulletDynamics::DynamicsWorld * pWorld, CharacterState * pCharacterState );$/;"	p	class:Character	access:public	signature:( SceneManager * pSceneMgr, OgreBulletDynamics::DynamicsWorld * pWorld, CharacterState * pCharacterState )
Character::Character	Character.h~	/^	Character( SceneManager * pSceneMgr, OgreBulletDynamics::DynamicsWorld * pWorld, CharacterState * pCharacterState );$/;"	p	class:Character	file:	access:public	signature:( SceneManager * pSceneMgr, OgreBulletDynamics::DynamicsWorld * pWorld, CharacterState * pCharacterState )
Character::createGraphicCharacter	Character.h	/^	void createGraphicCharacter();			\/\/ ππΩ®Õº–Œ—ßΩ«…´$/;"	p	class:Character	access:public	signature:()
Character::createGraphicCharacter	Character.h~	/^	void createGraphicCharacter();			\/\/ ππΩ®Õº–Œ—ßΩ«…´$/;"	p	class:Character	file:	access:public	signature:()
Character::createKinematicCharacter	Character.h	/^	void createKinematicCharacter();		\/\/ ππΩ®‘À∂Ø—ßΩ«…´$/;"	p	class:Character	access:public	signature:()
Character::createKinematicCharacter	Character.h~	/^	void createKinematicCharacter();		\/\/ ππΩ®‘À∂Ø—ßΩ«…´$/;"	p	class:Character	file:	access:public	signature:()
Character::getGraphicCharacter	Character.h	/^	GraphicCharacter	* getGraphicCharacter()		{ return mGraphicCharacter;	  }	\/\/ ªÒ»°Õº–Œ—ßΩ«…´$/;"	f	class:Character	access:public	signature:()
Character::getGraphicCharacter	Character.h~	/^	GraphicCharacter	* getGraphicCharacter()		{ return mGraphicCharacter;	  }	\/\/ ªÒ»°Õº–Œ—ßΩ«…´$/;"	f	class:Character	access:public	signature:()
Character::getKinematicCharacter	Character.h	/^	KinematicCharacter	* getKinematicCharacter()	{ return mKinematicCharacter; } \/\/ ªÒ»°‘À∂Ø—ßΩ«…´$/;"	f	class:Character	access:public	signature:()
Character::getKinematicCharacter	Character.h~	/^	KinematicCharacter	* getKinematicCharacter()	{ return mKinematicCharacter; } \/\/ ªÒ»°‘À∂Ø—ßΩ«…´$/;"	f	class:Character	access:public	signature:()
Character::mCharacterState	Character.h	/^	CharacterState					  * mCharacterState;	 \/\/ º«¬º ‰»Î◊¥Ã¨$/;"	m	class:Character	access:private
Character::mCharacterState	Character.h~	/^	CharacterState					  * mCharacterState;	 \/\/ º«¬º ‰»Î◊¥Ã¨$/;"	m	class:Character	file:	access:private
Character::mGraphicCharacter	Character.h	/^	GraphicCharacter				  * mGraphicCharacter;   \/\/ Õº–Œ—ßΩ«…´$/;"	m	class:Character	access:private
Character::mGraphicCharacter	Character.h~	/^	GraphicCharacter				  * mGraphicCharacter;   \/\/ Õº–Œ—ßΩ«…´$/;"	m	class:Character	file:	access:private
Character::mKinematicCharacter	Character.h	/^	KinematicCharacter				  * mKinematicCharacter; \/\/ ‘À∂Ø—ßΩ«…´$/;"	m	class:Character	access:private
Character::mKinematicCharacter	Character.h~	/^	KinematicCharacter				  * mKinematicCharacter; \/\/ ‘À∂Ø—ßΩ«…´$/;"	m	class:Character	file:	access:private
Character::mSceneMgr	Character.h	/^    Ogre::SceneManager				  * mSceneMgr;			 \/\/ Ogre≥°æ∞øÿ÷∆∆˜$/;"	m	class:Character	access:private
Character::mSceneMgr	Character.h~	/^    Ogre::SceneManager				  * mSceneMgr;			 \/\/ Ogre≥°æ∞øÿ÷∆∆˜$/;"	m	class:Character	file:	access:private
Character::mWorld	Character.h	/^	OgreBulletDynamics::DynamicsWorld * mWorld;				 \/\/ ŒÔ¿Ì—ß ¿ΩÁ$/;"	m	class:Character	access:private
Character::mWorld	Character.h~	/^	OgreBulletDynamics::DynamicsWorld * mWorld;				 \/\/ ŒÔ¿Ì—ß ¿ΩÁ$/;"	m	class:Character	file:	access:private
Character::update	Character.h	/^	void update( Ogre::Real deltaTime );	\/\/ ∏¸–¬À˘”–£¨∞¸¿®“∆∂Ø°¢Ã¯‘æ°¢◊≈¬‰◊¥Ã¨∏¸–¬µ»$/;"	p	class:Character	access:public	signature:( Ogre::Real deltaTime )
Character::update	Character.h~	/^	void update( Ogre::Real deltaTime );	\/\/ ∏¸–¬À˘”–£¨∞¸¿®“∆∂Ø°¢Ã¯‘æ°¢◊≈¬‰◊¥Ã¨∏¸–¬µ»$/;"	p	class:Character	file:	access:public	signature:( Ogre::Real deltaTime )
Character::~Character	Character.h	/^	~Character();$/;"	p	class:Character	access:public	signature:()
Character::~Character	Character.h~	/^	~Character();$/;"	p	class:Character	file:	access:public	signature:()
CharacterInputListener	CharacterInputListener.h	/^	CharacterInputListener( KinematicCharacter * pKinematicCharacter, CharacterState * pCharacterState );$/;"	p	class:CharacterInputListener	access:public	signature:( KinematicCharacter * pKinematicCharacter, CharacterState * pCharacterState )
CharacterInputListener	CharacterInputListener.h	/^class CharacterInputListener$/;"	c
CharacterInputListener	CharacterInputListener.h~	/^	CharacterInputListener( KinematicCharacter * pKinematicCharacter, CharacterState * pCharacterState );$/;"	p	class:CharacterInputListener	file:	access:public	signature:( KinematicCharacter * pKinematicCharacter, CharacterState * pCharacterState )
CharacterInputListener	CharacterInputListener.h~	/^class CharacterInputListener$/;"	c	file:
CharacterInputListener::CharacterInputListener	CharacterInputListener.h	/^	CharacterInputListener( KinematicCharacter * pKinematicCharacter, CharacterState * pCharacterState );$/;"	p	class:CharacterInputListener	access:public	signature:( KinematicCharacter * pKinematicCharacter, CharacterState * pCharacterState )
CharacterInputListener::CharacterInputListener	CharacterInputListener.h~	/^	CharacterInputListener( KinematicCharacter * pKinematicCharacter, CharacterState * pCharacterState );$/;"	p	class:CharacterInputListener	file:	access:public	signature:( KinematicCharacter * pKinematicCharacter, CharacterState * pCharacterState )
CharacterInputListener::keyDown	CharacterInputListener.h	/^	void keyDown( const KeyEvent & evt );$/;"	p	class:CharacterInputListener	access:public	signature:( const KeyEvent & evt )
CharacterInputListener::keyDown	CharacterInputListener.h~	/^	void keyDown( const KeyEvent & evt );$/;"	p	class:CharacterInputListener	file:	access:public	signature:( const KeyEvent & evt )
CharacterInputListener::keyUp	CharacterInputListener.h	/^	void keyUp( const KeyEvent & evt );$/;"	p	class:CharacterInputListener	access:public	signature:( const KeyEvent & evt )
CharacterInputListener::keyUp	CharacterInputListener.h~	/^	void keyUp( const KeyEvent & evt );$/;"	p	class:CharacterInputListener	file:	access:public	signature:( const KeyEvent & evt )
CharacterInputListener::mCharacterState	CharacterInputListener.h	/^	CharacterState	   * mCharacterState;$/;"	m	class:CharacterInputListener	access:private
CharacterInputListener::mCharacterState	CharacterInputListener.h~	/^	CharacterState	   * mCharacterState;$/;"	m	class:CharacterInputListener	file:	access:private
CharacterInputListener::mKinematicCharacter	CharacterInputListener.h	/^	KinematicCharacter * mKinematicCharacter;$/;"	m	class:CharacterInputListener	access:private
CharacterInputListener::mKinematicCharacter	CharacterInputListener.h~	/^	KinematicCharacter * mKinematicCharacter;$/;"	m	class:CharacterInputListener	file:	access:private
CharacterInputListener::~CharacterInputListener	CharacterInputListener.h	/^	~CharacterInputListener();$/;"	p	class:CharacterInputListener	access:public	signature:()
CharacterInputListener::~CharacterInputListener	CharacterInputListener.h~	/^	~CharacterInputListener();$/;"	p	class:CharacterInputListener	file:	access:public	signature:()
CharacterState	CharacterState.h	/^	CharacterState( Ogre::SceneNode * pCameraNode ) :$/;"	f	class:CharacterState	access:public	signature:( Ogre::SceneNode * pCameraNode )
CharacterState	CharacterState.h	/^class CharacterState$/;"	c
CharacterState	CharacterState.h~	/^	CharacterState( Ogre::SceneNode * pCameraNode ) :$/;"	f	class:CharacterState	access:public	signature:( Ogre::SceneNode * pCameraNode )
CharacterState	CharacterState.h~	/^class CharacterState$/;"	c	file:
CharacterState::CharacterState	CharacterState.h	/^	CharacterState( Ogre::SceneNode * pCameraNode ) :$/;"	f	class:CharacterState	access:public	signature:( Ogre::SceneNode * pCameraNode )
CharacterState::CharacterState	CharacterState.h~	/^	CharacterState( Ogre::SceneNode * pCameraNode ) :$/;"	f	class:CharacterState	access:public	signature:( Ogre::SceneNode * pCameraNode )
CharacterState::getGoalDirection	CharacterState.h	/^	Ogre::Vector3 getGoalDirection()$/;"	f	class:CharacterState	access:public	signature:()
CharacterState::getGoalDirection	CharacterState.h~	/^	Ogre::Vector3 getGoalDirection()$/;"	f	class:CharacterState	access:public	signature:()
CharacterState::getJumpState	CharacterState.h	/^	bool getJumpState(){ return mJump; }$/;"	f	class:CharacterState	access:public	signature:()
CharacterState::getJumpState	CharacterState.h~	/^	bool getJumpState(){ return mJump; }$/;"	f	class:CharacterState	access:public	signature:()
CharacterState::getKeyDirection	CharacterState.h	/^	Ogre::Vector3 getKeyDirection(){ return mKeyDirection; }$/;"	f	class:CharacterState	access:public	signature:()
CharacterState::getKeyDirection	CharacterState.h~	/^	Ogre::Vector3 getKeyDirection(){ return mKeyDirection; }$/;"	f	class:CharacterState	access:public	signature:()
CharacterState::getKeyDirectionX	CharacterState.h	/^	Ogre::Real getKeyDirectionX(){ return mKeyDirection.x; }$/;"	f	class:CharacterState	access:public	signature:()
CharacterState::getKeyDirectionX	CharacterState.h~	/^	Ogre::Real getKeyDirectionX(){ return mKeyDirection.x; }$/;"	f	class:CharacterState	access:public	signature:()
CharacterState::getKeyDirectionY	CharacterState.h	/^	Ogre::Real getKeyDirectionY(){ return mKeyDirection.y; }$/;"	f	class:CharacterState	access:public	signature:()
CharacterState::getKeyDirectionY	CharacterState.h~	/^	Ogre::Real getKeyDirectionY(){ return mKeyDirection.y; }$/;"	f	class:CharacterState	access:public	signature:()
CharacterState::getKeyDirectionZ	CharacterState.h	/^	Ogre::Real getKeyDirectionZ(){ return mKeyDirection.z; }$/;"	f	class:CharacterState	access:public	signature:()
CharacterState::getKeyDirectionZ	CharacterState.h~	/^	Ogre::Real getKeyDirectionZ(){ return mKeyDirection.z; }$/;"	f	class:CharacterState	access:public	signature:()
CharacterState::getLandedState	CharacterState.h	/^	bool getLandedState(){ return mLanded; }$/;"	f	class:CharacterState	access:public	signature:()
CharacterState::getLandedState	CharacterState.h~	/^	bool getLandedState(){ return mLanded; }$/;"	f	class:CharacterState	access:public	signature:()
CharacterState::mCameraNode	CharacterState.h	/^	Ogre::SceneNode * mCameraNode;		\/\/ ∏˙◊ŸΩ«…´ Camera Ω⁄µ„$/;"	m	class:CharacterState	access:private
CharacterState::mCameraNode	CharacterState.h~	/^	Ogre::SceneNode * mCameraNode;		\/\/ ∏˙◊ŸΩ«…´ Camera Ω⁄µ„$/;"	m	class:CharacterState	file:	access:private
CharacterState::mGoalDirection	CharacterState.h	/^	Ogre::Vector3	  mGoalDirection;	\/\/ Ω«…´“∆∂Ø µº ∑ΩœÚ$/;"	m	class:CharacterState	access:private
CharacterState::mGoalDirection	CharacterState.h~	/^	Ogre::Vector3	  mGoalDirection;	\/\/ Ω«…´“∆∂Ø µº ∑ΩœÚ$/;"	m	class:CharacterState	file:	access:private
CharacterState::mJump	CharacterState.h	/^	bool			  mJump;			\/\/ Ω«…´ «∑Ò¥¶”⁄Ã¯‘æ◊¥Ã¨$/;"	m	class:CharacterState	access:private
CharacterState::mJump	CharacterState.h~	/^	bool			  mJump;			\/\/ Ω«…´ «∑Ò¥¶”⁄Ã¯‘æ◊¥Ã¨$/;"	m	class:CharacterState	file:	access:private
CharacterState::mKeyDirection	CharacterState.h	/^	Ogre::Vector3	  mKeyDirection;	\/\/ º¸≈Ã∞¥º¸∑ΩœÚ$/;"	m	class:CharacterState	access:private
CharacterState::mKeyDirection	CharacterState.h~	/^	Ogre::Vector3	  mKeyDirection;	\/\/ º¸≈Ã∞¥º¸∑ΩœÚ$/;"	m	class:CharacterState	file:	access:private
CharacterState::mLanded	CharacterState.h	/^	bool			  mLanded;			\/\/ Ω«…´ «∑Ò◊≈¬‰$/;"	m	class:CharacterState	access:private
CharacterState::mLanded	CharacterState.h~	/^	bool			  mLanded;			\/\/ Ω«…´ «∑Ò◊≈¬‰$/;"	m	class:CharacterState	file:	access:private
CharacterState::setJumpState	CharacterState.h	/^	void setJumpState( bool pJump ){ mJump = pJump; }$/;"	f	class:CharacterState	access:public	signature:( bool pJump )
CharacterState::setJumpState	CharacterState.h~	/^	void setJumpState( bool pJump ){ mJump = pJump; }$/;"	f	class:CharacterState	access:public	signature:( bool pJump )
CharacterState::setKeyDirectionX	CharacterState.h	/^	void setKeyDirectionX( Ogre::Real pX ){ mKeyDirection.x = pX; }$/;"	f	class:CharacterState	access:public	signature:( Ogre::Real pX )
CharacterState::setKeyDirectionX	CharacterState.h~	/^	void setKeyDirectionX( Ogre::Real pX ){ mKeyDirection.x = pX; }$/;"	f	class:CharacterState	access:public	signature:( Ogre::Real pX )
CharacterState::setKeyDirectionY	CharacterState.h	/^	void setKeyDirectionY( Ogre::Real pY ){ mKeyDirection.y = pY; }$/;"	f	class:CharacterState	access:public	signature:( Ogre::Real pY )
CharacterState::setKeyDirectionY	CharacterState.h~	/^	void setKeyDirectionY( Ogre::Real pY ){ mKeyDirection.y = pY; }$/;"	f	class:CharacterState	access:public	signature:( Ogre::Real pY )
CharacterState::setKeyDirectionZ	CharacterState.h	/^	void setKeyDirectionZ( Ogre::Real pZ ){ mKeyDirection.z = pZ; }$/;"	f	class:CharacterState	access:public	signature:( Ogre::Real pZ )
CharacterState::setKeyDirectionZ	CharacterState.h~	/^	void setKeyDirectionZ( Ogre::Real pZ ){ mKeyDirection.z = pZ; }$/;"	f	class:CharacterState	access:public	signature:( Ogre::Real pZ )
CharacterState::setLandedState	CharacterState.h	/^	void setLandedState( bool pLanded ){ mLanded = pLanded; }$/;"	f	class:CharacterState	access:public	signature:( bool pLanded )
CharacterState::setLandedState	CharacterState.h~	/^	void setLandedState( bool pLanded ){ mLanded = pLanded; }$/;"	f	class:CharacterState	access:public	signature:( bool pLanded )
CharacterState::zeroKeyDirection	CharacterState.h	/^	bool zeroKeyDirection()$/;"	f	class:CharacterState	access:public	signature:()
CharacterState::zeroKeyDirection	CharacterState.h~	/^	bool zeroKeyDirection()$/;"	f	class:CharacterState	access:public	signature:()
CharacterState::~CharacterState	CharacterState.h	/^	~CharacterState(){};$/;"	f	class:CharacterState	access:public	signature:()
CharacterState::~CharacterState	CharacterState.h~	/^	~CharacterState(){};$/;"	f	class:CharacterState	access:public	signature:()
Child	tinyxml/tinyxml.cpp	/^TiXmlHandle TiXmlHandle::Child( const char* value, int count ) const$/;"	f	class:TiXmlHandle	signature:( const char* value, int count ) const
Child	tinyxml/tinyxml.cpp	/^TiXmlHandle TiXmlHandle::Child( int count ) const$/;"	f	class:TiXmlHandle	signature:( int count ) const
Child	tinyxml/tinyxml.h	/^	TiXmlHandle Child( const char* value, int index ) const;$/;"	p	class:TiXmlHandle	access:public	signature:( const char* value, int index ) const
Child	tinyxml/tinyxml.h	/^	TiXmlHandle Child( const std::string& _value, int index ) const			{ return Child( _value.c_str(), index ); }$/;"	f	class:TiXmlHandle	access:public	signature:( const std::string& _value, int index ) const
Child	tinyxml/tinyxml.h	/^	TiXmlHandle Child( int index ) const;$/;"	p	class:TiXmlHandle	access:public	signature:( int index ) const
ChildElement	tinyxml/tinyxml.cpp	/^TiXmlHandle TiXmlHandle::ChildElement( const char* value, int count ) const$/;"	f	class:TiXmlHandle	signature:( const char* value, int count ) const
ChildElement	tinyxml/tinyxml.cpp	/^TiXmlHandle TiXmlHandle::ChildElement( int count ) const$/;"	f	class:TiXmlHandle	signature:( int count ) const
ChildElement	tinyxml/tinyxml.h	/^	TiXmlHandle ChildElement( const char* value, int index ) const;$/;"	p	class:TiXmlHandle	access:public	signature:( const char* value, int index ) const
ChildElement	tinyxml/tinyxml.h	/^	TiXmlHandle ChildElement( const std::string& _value, int index ) const	{ return ChildElement( _value.c_str(), index ); }$/;"	f	class:TiXmlHandle	access:public	signature:( const std::string& _value, int index ) const
ChildElement	tinyxml/tinyxml.h	/^	TiXmlHandle ChildElement( int index ) const;$/;"	p	class:TiXmlHandle	access:public	signature:( int index ) const
Clear	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00102"><\/a>00102     <span class="keywordtype">void<\/span> Clear()        { row = col = -1; }$/;"	f	struct:TiXmlCursor	access:public	signature:()
Clear	tinyxml/tinyxml.cpp	/^void TiXmlNode::Clear()$/;"	f	class:TiXmlNode	signature:()
Clear	tinyxml/tinyxml.h	/^	void Clear()		{ row = col = -1; }$/;"	f	struct:TiXmlCursor	access:public	signature:()
Clear	tinyxml/tinyxml.h	/^	void Clear();$/;"	p	class:TiXmlNode	access:public	signature:()
ClearError	tinyxml/tinyxml.h	/^	void ClearError()						{	error = false; $/;"	f	class:TiXmlDocument	access:public	signature:()
ClearThis	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01136"><\/a>01136     <span class="keywordtype">void<\/span> ClearThis();   <span class="comment">\/\/ like clear, but initializes &#39;this&#39; object as well<\/span>$/;"	p	class:TiXmlVisitor::TiXmlElement	file:	access:protected	signature:()
ClearThis	tinyxml/tinyxml.cpp	/^void TiXmlElement::ClearThis()$/;"	f	class:TiXmlElement	signature:()
ClearThis	tinyxml/tinyxml.h	/^	void ClearThis();	\/\/ like clear, but initializes 'this' object as well$/;"	p	class:TiXmlElement	access:protected	signature:()
Clone	tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlComment::Clone() const$/;"	f	class:TiXmlComment	signature:() const
Clone	tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlDeclaration::Clone() const$/;"	f	class:TiXmlDeclaration	signature:() const
Clone	tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlDocument::Clone() const$/;"	f	class:TiXmlDocument	signature:() const
Clone	tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlElement::Clone() const$/;"	f	class:TiXmlElement	signature:() const
Clone	tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlText::Clone() const$/;"	f	class:TiXmlText	signature:() const
Clone	tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlUnknown::Clone() const$/;"	f	class:TiXmlUnknown	signature:() const
Clone	tinyxml/tinyxml.h	/^	virtual TiXmlNode* Clone() const = 0;$/;"	p	class:TiXmlNode	access:public	signature:() const
Clone	tinyxml/tinyxml.h	/^	virtual TiXmlNode* Clone() const;$/;"	p	class:TiXmlComment	access:public	signature:() const
Clone	tinyxml/tinyxml.h	/^	virtual TiXmlNode* Clone() const;$/;"	p	class:TiXmlDeclaration	access:public	signature:() const
Clone	tinyxml/tinyxml.h	/^	virtual TiXmlNode* Clone() const;$/;"	p	class:TiXmlDocument	access:protected	signature:() const
Clone	tinyxml/tinyxml.h	/^	virtual TiXmlNode* Clone() const;$/;"	p	class:TiXmlElement	access:public	signature:() const
Clone	tinyxml/tinyxml.h	/^	virtual TiXmlNode* Clone() const;$/;"	p	class:TiXmlText	access:protected	signature:() const
Clone	tinyxml/tinyxml.h	/^	virtual TiXmlNode* Clone() const;$/;"	p	class:TiXmlUnknown	access:public	signature:() const
Column	tinyxml/tinyxml.h	/^	int Column() const		{ return location.col + 1; }	\/\/\/< See Row()$/;"	f	class:TiXmlBase	access:public	signature:() const
ConvertUTF32ToUTF8	tinyxml/tinyxml.h	/^	static void ConvertUTF32ToUTF8( unsigned long input, char* output, int* length );$/;"	p	class:TiXmlBase	access:protected	signature:( unsigned long input, char* output, int* length )
ConvertUTF32ToUTF8	tinyxml/tinyxmlparser.cpp	/^void TiXmlBase::ConvertUTF32ToUTF8( unsigned long input, char* output, int* length )$/;"	f	class:TiXmlBase	signature:( unsigned long input, char* output, int* length )
CopyTo	tinyxml/tinyxml.cpp	/^void TiXmlComment::CopyTo( TiXmlComment* target ) const$/;"	f	class:TiXmlComment	signature:( TiXmlComment* target ) const
CopyTo	tinyxml/tinyxml.cpp	/^void TiXmlDeclaration::CopyTo( TiXmlDeclaration* target ) const$/;"	f	class:TiXmlDeclaration	signature:( TiXmlDeclaration* target ) const
CopyTo	tinyxml/tinyxml.cpp	/^void TiXmlDocument::CopyTo( TiXmlDocument* target ) const$/;"	f	class:TiXmlDocument	signature:( TiXmlDocument* target ) const
CopyTo	tinyxml/tinyxml.cpp	/^void TiXmlElement::CopyTo( TiXmlElement* target ) const$/;"	f	class:TiXmlElement	signature:( TiXmlElement* target ) const
CopyTo	tinyxml/tinyxml.cpp	/^void TiXmlNode::CopyTo( TiXmlNode* target ) const$/;"	f	class:TiXmlNode	signature:( TiXmlNode* target ) const
CopyTo	tinyxml/tinyxml.cpp	/^void TiXmlText::CopyTo( TiXmlText* target ) const$/;"	f	class:TiXmlText	signature:( TiXmlText* target ) const
CopyTo	tinyxml/tinyxml.cpp	/^void TiXmlUnknown::CopyTo( TiXmlUnknown* target ) const$/;"	f	class:TiXmlUnknown	signature:( TiXmlUnknown* target ) const
CopyTo	tinyxml/tinyxml.h	/^	void CopyTo( TiXmlComment* target ) const;$/;"	p	class:TiXmlComment	access:protected	signature:( TiXmlComment* target ) const
CopyTo	tinyxml/tinyxml.h	/^	void CopyTo( TiXmlDeclaration* target ) const;$/;"	p	class:TiXmlDeclaration	access:protected	signature:( TiXmlDeclaration* target ) const
CopyTo	tinyxml/tinyxml.h	/^	void CopyTo( TiXmlDocument* target ) const;$/;"	p	class:TiXmlDocument	access:private	signature:( TiXmlDocument* target ) const
CopyTo	tinyxml/tinyxml.h	/^	void CopyTo( TiXmlElement* target ) const;$/;"	p	class:TiXmlElement	access:protected	signature:( TiXmlElement* target ) const
CopyTo	tinyxml/tinyxml.h	/^	void CopyTo( TiXmlNode* target ) const;$/;"	p	class:TiXmlNode	access:protected	signature:( TiXmlNode* target ) const
CopyTo	tinyxml/tinyxml.h	/^	void CopyTo( TiXmlText* target ) const;$/;"	p	class:TiXmlText	access:protected	signature:( TiXmlText* target ) const
CopyTo	tinyxml/tinyxml.h	/^	void CopyTo( TiXmlUnknown* target ) const;$/;"	p	class:TiXmlUnknown	access:protected	signature:( TiXmlUnknown* target ) const
Cursor	tinyxml/tinyxmlparser.cpp	/^	const TiXmlCursor& Cursor()	{ return cursor; }$/;"	f	class:TiXmlParsingData	access:public	signature:()
DEBUG	tinyxml/tinyxml.h	43;"	d
DOT_SCENELOADER_H	DotSceneLoader.h	2;"	d
DoIndent	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01778"><\/a>01778     <span class="keywordtype">void<\/span> DoIndent() {$/;"	f	class:TiXmlVisitor::TiXmlPrinter	file:	access:private	signature:()
DoIndent	tinyxml/tinyxml.h	/^	void DoIndent()	{$/;"	f	class:TiXmlPrinter	access:private	signature:()
DoLineBreak	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01782"><\/a>01782     <span class="keywordtype">void<\/span> DoLineBreak() {$/;"	f	class:TiXmlVisitor::TiXmlPrinter	file:	access:private	signature:()
DoLineBreak	tinyxml/tinyxml.h	/^	void DoLineBreak() {$/;"	f	class:TiXmlPrinter	access:private	signature:()
DotSceneLoader	DotSceneLoader.h	/^        DotSceneLoader() : mSceneMgr(0) {}$/;"	f	class:Ogre::DotSceneLoader	access:public	signature:()
DotSceneLoader	DotSceneLoader.h	/^    class DotSceneLoader$/;"	c	namespace:Ogre
DoubleValue	tinyxml/tinyxml.cpp	/^double  TiXmlAttribute::DoubleValue() const$/;"	f	class:TiXmlAttribute	signature:() const
DoubleValue	tinyxml/tinyxml.h	/^	double			DoubleValue() const;								\/\/\/< Return the value of this attribute, converted to a double.$/;"	p	class:TiXmlAttribute	access:public	signature:() const
DynamicCharacterController	DynamicCharacterController.h	/^	DynamicCharacterController ();$/;"	p	class:DynamicCharacterController	access:public	signature:()
DynamicCharacterController	DynamicCharacterController.h	/^class DynamicCharacterController : public btCharacterControllerInterface$/;"	c	inherits:btCharacterControllerInterface
DynamicCharacterController::DynamicCharacterController	DynamicCharacterController.h	/^	DynamicCharacterController ();$/;"	p	class:DynamicCharacterController	access:public	signature:()
DynamicCharacterController::canJump	DynamicCharacterController.h	/^	bool canJump () const;$/;"	p	class:DynamicCharacterController	access:public	signature:() const
DynamicCharacterController::destroy	DynamicCharacterController.h	/^	void destroy ();$/;"	p	class:DynamicCharacterController	access:public	signature:()
DynamicCharacterController::getCollisionObject	DynamicCharacterController.h	/^	btCollisionObject* getCollisionObject ();$/;"	p	class:DynamicCharacterController	access:public	signature:()
DynamicCharacterController::jump	DynamicCharacterController.h	/^	void jump ();$/;"	p	class:DynamicCharacterController	access:public	signature:()
DynamicCharacterController::m_halfHeight	DynamicCharacterController.h	/^	btScalar m_halfHeight;$/;"	m	class:DynamicCharacterController	access:protected
DynamicCharacterController::m_maxLinearVelocity	DynamicCharacterController.h	/^	btScalar m_maxLinearVelocity;$/;"	m	class:DynamicCharacterController	access:protected
DynamicCharacterController::m_rayLambda	DynamicCharacterController.h	/^	btScalar m_rayLambda[2];$/;"	m	class:DynamicCharacterController	access:protected
DynamicCharacterController::m_rayNormal	DynamicCharacterController.h	/^	btVector3 m_rayNormal[2];$/;"	m	class:DynamicCharacterController	access:protected
DynamicCharacterController::m_raySource	DynamicCharacterController.h	/^	btVector3 m_raySource[2];$/;"	m	class:DynamicCharacterController	access:protected
DynamicCharacterController::m_rayTarget	DynamicCharacterController.h	/^	btVector3 m_rayTarget[2];$/;"	m	class:DynamicCharacterController	access:protected
DynamicCharacterController::m_rigidBody	DynamicCharacterController.h	/^	btRigidBody* m_rigidBody;$/;"	m	class:DynamicCharacterController	access:protected
DynamicCharacterController::m_shape	DynamicCharacterController.h	/^	btCollisionShape* m_shape;$/;"	m	class:DynamicCharacterController	access:protected
DynamicCharacterController::m_turnAngle	DynamicCharacterController.h	/^	btScalar m_turnAngle;$/;"	m	class:DynamicCharacterController	access:protected
DynamicCharacterController::m_turnVelocity	DynamicCharacterController.h	/^	btScalar m_turnVelocity;$/;"	m	class:DynamicCharacterController	access:protected
DynamicCharacterController::m_walkVelocity	DynamicCharacterController.h	/^	btScalar m_walkVelocity;$/;"	m	class:DynamicCharacterController	access:protected
DynamicCharacterController::onGround	DynamicCharacterController.h	/^	bool onGround () const;$/;"	p	class:DynamicCharacterController	access:public	signature:() const
DynamicCharacterController::playerStep	DynamicCharacterController.h	/^	void playerStep (const btCollisionWorld* collisionWorld,btScalar dt,$/;"	p	class:DynamicCharacterController	access:public	signature:(const btCollisionWorld* collisionWorld,btScalar dt, int forward, int backward, int left, int right, int jump)
DynamicCharacterController::preStep	DynamicCharacterController.h	/^	void preStep (const btCollisionWorld* collisionWorld);$/;"	p	class:DynamicCharacterController	access:public	signature:(const btCollisionWorld* collisionWorld)
DynamicCharacterController::registerPairCacheAndDispatcher	DynamicCharacterController.h	/^	virtual void registerPairCacheAndDispatcher (btOverlappingPairCache* pairCache, btCollisionDispatcher* dispatcher);$/;"	p	class:DynamicCharacterController	access:public	signature:(btOverlappingPairCache* pairCache, btCollisionDispatcher* dispatcher)
DynamicCharacterController::reset	DynamicCharacterController.h	/^	virtual void reset ();$/;"	p	class:DynamicCharacterController	access:public	signature:()
DynamicCharacterController::setup	DynamicCharacterController.h	/^	void setup (btScalar height = 2.0, btScalar width = 0.25, btScalar stepHeight = 0.25);$/;"	p	class:DynamicCharacterController	access:public	signature:(btScalar height = 2.0, btScalar width = 0.25, btScalar stepHeight = 0.25)
DynamicCharacterController::warp	DynamicCharacterController.h	/^	virtual void warp (const btVector3& origin);$/;"	p	class:DynamicCharacterController	access:public	signature:(const btVector3& origin)
DynamicCharacterController::~DynamicCharacterController	DynamicCharacterController.h	/^	~DynamicCharacterController ();$/;"	p	class:DynamicCharacterController	access:public	signature:()
Element	tinyxml/tinyxml.h	/^	TiXmlElement* Element() const	{ return ToElement(); }$/;"	f	class:TiXmlHandle	access:public	signature:() const
Ellers	tinyxml/changes.txt	/^- Many fixes and input from John-Philip Leonard Johansson (JP) and Ellers, $/;"	v
EncodeString	tinyxml/tinyxml.cpp	/^void TiXmlBase::EncodeString( const TIXML_STRING& str, TIXML_STRING* outString )$/;"	f	class:TiXmlBase	signature:( const TIXML_STRING& str, TIXML_STRING* outString )
EncodeString	tinyxml/tinyxml.h	/^	static void EncodeString( const TIXML_STRING& str, TIXML_STRING* out );$/;"	p	class:TiXmlBase	access:public	signature:( const TIXML_STRING& str, TIXML_STRING* out )
Encoding	tinyxml/tinyxml.h	/^	const char *Encoding() const		{ return encoding.c_str (); }$/;"	f	class:TiXmlDeclaration	access:public	signature:() const
Entity	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00400"><\/a>00400     <span class="keyword">struct <\/span>Entity$/;"	s	class:TiXmlVisitor::TiXmlBase	file:	access:private
Entity	tinyxml/tinyxml.h	/^	struct Entity$/;"	s	class:TiXmlBase	access:private
Error	tinyxml/tinyxml.h	/^	bool Error() const						{ return error; }$/;"	f	class:TiXmlDocument	access:public	signature:() const
ErrorCol	tinyxml/tinyxml.h	/^	int ErrorCol() const	{ return errorLocation.col+1; }	\/\/\/< The column where the error occured. See ErrorRow()$/;"	f	class:TiXmlDocument	access:public	signature:() const
ErrorDesc	tinyxml/tinyxml.h	/^	const char * ErrorDesc() const	{ return errorDesc.c_str (); }$/;"	f	class:TiXmlDocument	access:public	signature:() const
ErrorId	tinyxml/tinyxml.h	/^	int ErrorId()	const				{ return errorId; }$/;"	f	class:TiXmlDocument	access:public	signature:() const
ErrorRow	tinyxml/tinyxml.h	/^	int ErrorRow() const	{ return errorLocation.row+1; }$/;"	f	class:TiXmlDocument	access:public	signature:() const
Find	tinyxml/tinyxml.cpp	/^TiXmlAttribute* TiXmlAttributeSet::Find( const char* name ) const$/;"	f	class:TiXmlAttributeSet	signature:( const char* name ) const
Find	tinyxml/tinyxml.cpp	/^TiXmlAttribute* TiXmlAttributeSet::Find( const std::string& name ) const$/;"	f	class:TiXmlAttributeSet	signature:( const std::string& name ) const
Find	tinyxml/tinyxml.h	/^	TiXmlAttribute*	Find( const char* _name ) const;$/;"	p	class:TiXmlAttributeSet	access:public	signature:( const char* _name ) const
Find	tinyxml/tinyxml.h	/^	TiXmlAttribute*	Find( const std::string& _name ) const;$/;"	p	class:TiXmlAttributeSet	access:public	signature:( const std::string& _name ) const
FindOrCreate	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00918"><\/a>00918     <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* FindOrCreate( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _name );$/;"	p	class:TiXmlVisitor::TiXmlAttributeSet	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* _name )
FindOrCreate	tinyxml/tinyxml.cpp	/^TiXmlAttribute* TiXmlAttributeSet::FindOrCreate( const char* _name )$/;"	f	class:TiXmlAttributeSet	signature:( const char* _name )
FindOrCreate	tinyxml/tinyxml.cpp	/^TiXmlAttribute* TiXmlAttributeSet::FindOrCreate( const std::string& _name )$/;"	f	class:TiXmlAttributeSet	signature:( const std::string& _name )
FindOrCreate	tinyxml/tinyxml.h	/^	TiXmlAttribute* FindOrCreate( const char* _name );$/;"	p	class:TiXmlAttributeSet	access:public	signature:( const char* _name )
FindOrCreate	tinyxml/tinyxml.h	/^	TiXmlAttribute* FindOrCreate( const std::string& _name );$/;"	p	class:TiXmlAttributeSet	access:public	signature:( const std::string& _name )
First	tinyxml/tinyxml.h	/^	TiXmlAttribute* First()					{ return ( sentinel.next == &sentinel ) ? 0 : sentinel.next; }$/;"	f	class:TiXmlAttributeSet	access:public	signature:()
First	tinyxml/tinyxml.h	/^	const TiXmlAttribute* First()	const	{ return ( sentinel.next == &sentinel ) ? 0 : sentinel.next; }$/;"	f	class:TiXmlAttributeSet	access:public	signature:() const
FirstAttribute	tinyxml/tinyxml.h	/^	TiXmlAttribute* FirstAttribute() 				{ return attributeSet.First(); }$/;"	f	class:TiXmlElement	access:public	signature:()
FirstAttribute	tinyxml/tinyxml.h	/^	const TiXmlAttribute* FirstAttribute() const	{ return attributeSet.First(); }		\/\/\/< Access the first attribute in this element.$/;"	f	class:TiXmlElement	access:public	signature:() const
FirstChild	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00526"><\/a><a class="code" href="classTiXmlNode.html#abc8bf32be6419ec453a731868de19554">00526<\/a>     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#abc8bf32be6419ec453a731868de19554" title="The first child of this node with the matching &amp;#39;value&amp;#39;. Will be null if none...">FirstChild<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _value ) {$/;"	f	class:TiXmlVisitor::TiXmlNode	access:public	signature:( <span class=”>const</span> <span class=”>char</span> * _value )
FirstChild	tinyxml/tinyxml.cpp	/^TiXmlHandle TiXmlHandle::FirstChild( const char * value ) const$/;"	f	class:TiXmlHandle	signature:( const char * value ) const
FirstChild	tinyxml/tinyxml.cpp	/^TiXmlHandle TiXmlHandle::FirstChild() const$/;"	f	class:TiXmlHandle	signature:() const
FirstChild	tinyxml/tinyxml.cpp	/^const TiXmlNode* TiXmlNode::FirstChild( const char * _value ) const$/;"	f	class:TiXmlNode	signature:( const char * _value ) const
FirstChild	tinyxml/tinyxml.h	/^	TiXmlHandle FirstChild( const char * value ) const;$/;"	p	class:TiXmlHandle	access:public	signature:( const char * value ) const
FirstChild	tinyxml/tinyxml.h	/^	TiXmlHandle FirstChild( const std::string& _value ) const				{ return FirstChild( _value.c_str() ); }$/;"	f	class:TiXmlHandle	access:public	signature:( const std::string& _value ) const
FirstChild	tinyxml/tinyxml.h	/^	TiXmlHandle FirstChild() const;$/;"	p	class:TiXmlHandle	access:public	signature:() const
FirstChild	tinyxml/tinyxml.h	/^	TiXmlNode* FirstChild( const char * _value ) {$/;"	f	class:TiXmlNode	access:public	signature:( const char * _value )
FirstChild	tinyxml/tinyxml.h	/^	TiXmlNode* FirstChild( const std::string& _value )				{	return FirstChild (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value )
FirstChild	tinyxml/tinyxml.h	/^	TiXmlNode* FirstChild()						{ return firstChild; }$/;"	f	class:TiXmlNode	access:public	signature:()
FirstChild	tinyxml/tinyxml.h	/^	const TiXmlNode* FirstChild( const char * value ) const;			\/\/\/< The first child of this node with the matching 'value'. Will be null if none found.$/;"	p	class:TiXmlNode	access:public	signature:( const char * value ) const
FirstChild	tinyxml/tinyxml.h	/^	const TiXmlNode* FirstChild( const std::string& _value ) const	{	return FirstChild (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value ) const
FirstChild	tinyxml/tinyxml.h	/^	const TiXmlNode* FirstChild()	const		{ return firstChild; }	\/\/\/< The first child of this node. Will be null if there are no children.$/;"	f	class:TiXmlNode	access:public	signature:() const
FirstChildElement	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00665"><\/a>00665     <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#af4fb652f6bd79ae0d5ce7d0f7d3c0fba" title="Convenience function to get through elements.">FirstChildElement<\/a>() {$/;"	f	class:TiXmlVisitor::TiXmlNode	access:public	signature:()
FirstChildElement	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00671"><\/a>00671     <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#af4fb652f6bd79ae0d5ce7d0f7d3c0fba" title="Convenience function to get through elements.">FirstChildElement<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _value ) {$/;"	f	class:TiXmlVisitor::TiXmlNode	access:public	signature:( <span class=”>const</span> <span class=”>char</span> * _value )
FirstChildElement	tinyxml/tinyxml.cpp	/^TiXmlHandle TiXmlHandle::FirstChildElement( const char * value ) const$/;"	f	class:TiXmlHandle	signature:( const char * value ) const
FirstChildElement	tinyxml/tinyxml.cpp	/^TiXmlHandle TiXmlHandle::FirstChildElement() const$/;"	f	class:TiXmlHandle	signature:() const
FirstChildElement	tinyxml/tinyxml.cpp	/^const TiXmlElement* TiXmlNode::FirstChildElement( const char * _value ) const$/;"	f	class:TiXmlNode	signature:( const char * _value ) const
FirstChildElement	tinyxml/tinyxml.cpp	/^const TiXmlElement* TiXmlNode::FirstChildElement() const$/;"	f	class:TiXmlNode	signature:() const
FirstChildElement	tinyxml/tinyxml.h	/^	TiXmlElement* FirstChildElement( const char * _value ) {$/;"	f	class:TiXmlNode	access:public	signature:( const char * _value )
FirstChildElement	tinyxml/tinyxml.h	/^	TiXmlElement* FirstChildElement( const std::string& _value )				{	return FirstChildElement (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value )
FirstChildElement	tinyxml/tinyxml.h	/^	TiXmlElement* FirstChildElement() {$/;"	f	class:TiXmlNode	access:public	signature:()
FirstChildElement	tinyxml/tinyxml.h	/^	TiXmlHandle FirstChildElement( const char * value ) const;$/;"	p	class:TiXmlHandle	access:public	signature:( const char * value ) const
FirstChildElement	tinyxml/tinyxml.h	/^	TiXmlHandle FirstChildElement( const std::string& _value ) const		{ return FirstChildElement( _value.c_str() ); }$/;"	f	class:TiXmlHandle	access:public	signature:( const std::string& _value ) const
FirstChildElement	tinyxml/tinyxml.h	/^	TiXmlHandle FirstChildElement() const;$/;"	p	class:TiXmlHandle	access:public	signature:() const
FirstChildElement	tinyxml/tinyxml.h	/^	const TiXmlElement* FirstChildElement( const char * _value ) const;$/;"	p	class:TiXmlNode	access:public	signature:( const char * _value ) const
FirstChildElement	tinyxml/tinyxml.h	/^	const TiXmlElement* FirstChildElement( const std::string& _value ) const	{	return FirstChildElement (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value ) const
FirstChildElement	tinyxml/tinyxml.h	/^	const TiXmlElement* FirstChildElement()	const;$/;"	p	class:TiXmlNode	access:public	signature:() const
GRAVITY	GraphicCharacter.h	30;"	d
GameBase	GameBase.h	/^    GameBase(void);$/;"	p	class:GameBase	access:public	signature:(void)
GameBase	GameBase.h	/^class GameBase :$/;"	c	inherits:Ogre::FrameListener,Ogre::WindowEventListener,OIS::KeyListener,OIS::MouseListener,OgreBites::SdkTrayListener
GameBase::GameBase	GameBase.h	/^    GameBase(void);$/;"	p	class:GameBase	access:public	signature:(void)
GameBase::chooseSceneManager	GameBase.h	/^    virtual void chooseSceneManager(void);$/;"	p	class:GameBase	access:protected	signature:(void)
GameBase::configure	GameBase.h	/^    virtual bool configure(void);$/;"	p	class:GameBase	access:protected	signature:(void)
GameBase::createCamera	GameBase.h	/^	virtual void createCamera(void)		= 0;$/;"	p	class:GameBase	access:protected	signature:(void)
GameBase::createFrameListener	GameBase.h	/^    virtual void createFrameListener(void);$/;"	p	class:GameBase	access:protected	signature:(void)
GameBase::createResourceListener	GameBase.h	/^    virtual void createResourceListener(void);$/;"	p	class:GameBase	access:protected	signature:(void)
GameBase::createScene	GameBase.h	/^    virtual void createScene(void)		= 0;$/;"	p	class:GameBase	access:protected	signature:(void)
GameBase::createViewports	GameBase.h	/^	virtual void createViewports(void)	= 0;$/;"	p	class:GameBase	access:protected	signature:(void)
GameBase::destroyScene	GameBase.h	/^    virtual void destroyScene(void);$/;"	p	class:GameBase	access:protected	signature:(void)
GameBase::frameRenderingQueued	GameBase.h	/^    virtual bool frameRenderingQueued(const Ogre::FrameEvent& evt);$/;"	p	class:GameBase	access:protected	signature:(const Ogre::FrameEvent& evt)
GameBase::go	GameBase.h	/^    virtual void go(void);$/;"	p	class:GameBase	access:public	signature:(void)
GameBase::keyPressed	GameBase.h	/^    virtual bool keyPressed( const OIS::KeyEvent &evt ); \/\/$/;"	p	class:GameBase	access:protected	signature:( const OIS::KeyEvent &evt )
GameBase::keyReleased	GameBase.h	/^    virtual bool keyReleased( const OIS::KeyEvent &evt ); \/\/$/;"	p	class:GameBase	access:protected	signature:( const OIS::KeyEvent &evt )
GameBase::loadResources	GameBase.h	/^    virtual void loadResources(void);$/;"	p	class:GameBase	access:protected	signature:(void)
GameBase::mCamera	GameBase.h	/^    Ogre::Camera		* mCamera;$/;"	m	class:GameBase	access:protected
GameBase::mCameraMan	GameBase.h	/^    OgreBites::SdkCameraMan		* mCameraMan;        \/\/ basic camera controller$/;"	m	class:GameBase	access:protected
GameBase::mCursorWasVisible	GameBase.h	/^    bool						  mCursorWasVisible; \/\/ was cursor visible before dialog appeared$/;"	m	class:GameBase	access:protected
GameBase::mDetailsPanel	GameBase.h	/^    OgreBites::ParamsPanel		* mDetailsPanel;     \/\/ sample details panel$/;"	m	class:GameBase	access:protected
GameBase::mInputManager	GameBase.h	/^    OIS::InputManager	* mInputManager;$/;"	m	class:GameBase	access:protected
GameBase::mKeyboard	GameBase.h	/^    OIS::Keyboard		* mKeyboard;$/;"	m	class:GameBase	access:protected
GameBase::mLight	GameBase.h	/^	Ogre::Light			* mLight;$/;"	m	class:GameBase	access:protected
GameBase::mLoadingBar	GameBase.h	/^	LoadingBar			  mLoadingBar;	\/\/ Loging Bar$/;"	m	class:GameBase	access:protected
GameBase::mMouse	GameBase.h	/^    OIS::Mouse			* mMouse;$/;"	m	class:GameBase	access:protected
GameBase::mPluginsCfg	GameBase.h	/^    Ogre::String		  mPluginsCfg;$/;"	m	class:GameBase	access:protected
GameBase::mResourcesCfg	GameBase.h	/^    Ogre::String		  mResourcesCfg;$/;"	m	class:GameBase	access:protected
GameBase::mRoot	GameBase.h	/^    Ogre::Root			* mRoot;$/;"	m	class:GameBase	access:protected
GameBase::mSceneMgr	GameBase.h	/^    Ogre::SceneManager	* mSceneMgr;$/;"	m	class:GameBase	access:protected
GameBase::mShutDown	GameBase.h	/^    bool						  mShutDown;$/;"	m	class:GameBase	access:protected
GameBase::mTrayMgr	GameBase.h	/^    OgreBites::SdkTrayManager	* mTrayMgr;$/;"	m	class:GameBase	access:protected
GameBase::mViewport	GameBase.h	/^	Ogre::Viewport		* mViewport;$/;"	m	class:GameBase	access:protected
GameBase::mWindow	GameBase.h	/^    Ogre::RenderWindow	* mWindow;$/;"	m	class:GameBase	access:protected
GameBase::mouseMoved	GameBase.h	/^    virtual bool mouseMoved( const OIS::MouseEvent &evt ); \/\/$/;"	p	class:GameBase	access:protected	signature:( const OIS::MouseEvent &evt )
GameBase::mousePressed	GameBase.h	/^    virtual bool mousePressed( const OIS::MouseEvent &evt, OIS::MouseButtonID id ); \/\/$/;"	p	class:GameBase	access:protected	signature:( const OIS::MouseEvent &evt, OIS::MouseButtonID id )
GameBase::mouseReleased	GameBase.h	/^    virtual bool mouseReleased( const OIS::MouseEvent &evt, OIS::MouseButtonID id ); \/\/$/;"	p	class:GameBase	access:protected	signature:( const OIS::MouseEvent &evt, OIS::MouseButtonID id )
GameBase::setup	GameBase.h	/^    virtual bool setup();$/;"	p	class:GameBase	access:protected	signature:()
GameBase::setupResources	GameBase.h	/^    virtual void setupResources(void);$/;"	p	class:GameBase	access:protected	signature:(void)
GameBase::windowClosed	GameBase.h	/^    virtual void windowClosed(Ogre::RenderWindow* rw);$/;"	p	class:GameBase	access:protected	signature:(Ogre::RenderWindow* rw)
GameBase::windowResized	GameBase.h	/^    virtual void windowResized(Ogre::RenderWindow* rw);$/;"	p	class:GameBase	access:protected	signature:(Ogre::RenderWindow* rw)
GameBase::~GameBase	GameBase.h	/^    virtual ~GameBase(void);$/;"	p	class:GameBase	access:public	signature:(void)
GameMap	GameMap.h	/^    GameMap( Ogre::SceneManager * pSceneMgr, Ogre::Light * pLight );$/;"	p	class:GameMap	access:public	signature:( Ogre::SceneManager * pSceneMgr, Ogre::Light * pLight )
GameMap	GameMap.h	/^    GameMap(void);$/;"	p	class:GameMap	access:public	signature:(void)
GameMap	GameMap.h	/^class GameMap\/\/ : public GameBase$/;"	c
GameMap::GameMap	GameMap.h	/^    GameMap( Ogre::SceneManager * pSceneMgr, Ogre::Light * pLight );$/;"	p	class:GameMap	access:public	signature:( Ogre::SceneManager * pSceneMgr, Ogre::Light * pLight )
GameMap::GameMap	GameMap.h	/^    GameMap(void);$/;"	p	class:GameMap	access:public	signature:(void)
GameMap::cleanMap	GameMap.h	/^    virtual void cleanMap(void);$/;"	p	class:GameMap	access:public	signature:(void)
GameMap::configureTerrainDefaults	GameMap.h	/^    void configureTerrainDefaults( Ogre::SceneManager * pSceneMgr, Ogre::Light * pLight );$/;"	p	class:GameMap	access:private	signature:( Ogre::SceneManager * pSceneMgr, Ogre::Light * pLight )
GameMap::createFrameListener	GameMap.h	/^    virtual void createFrameListener( OgreBites::SdkTrayManager * pTrayMgr );$/;"	p	class:GameMap	access:public	signature:( OgreBites::SdkTrayManager * pTrayMgr )
GameMap::defineTerrain	GameMap.h	/^    void defineTerrain( long x, long y );$/;"	p	class:GameMap	access:private	signature:( long x, long y )
GameMap::frameRenderingQueued	GameMap.h	/^    virtual void frameRenderingQueued( OgreBites::SdkTrayManager * pTrayMgr );$/;"	p	class:GameMap	access:public	signature:( OgreBites::SdkTrayManager * pTrayMgr )
GameMap::getMapEnt	GameMap.h	/^	Ogre::Entity * getMapEnt() \/\/ >>> 4-16-2202$/;"	f	class:GameMap	access:public	signature:()
GameMap::initBlendMaps	GameMap.h	/^    void initBlendMaps( Ogre::Terrain * terrain );$/;"	p	class:GameMap	access:private	signature:( Ogre::Terrain * terrain )
GameMap::initMap	GameMap.h	/^    virtual void initMap( Ogre::SceneManager * pSceneMgr, Ogre::Light * pLight );$/;"	p	class:GameMap	access:public	signature:( Ogre::SceneManager * pSceneMgr, Ogre::Light * pLight )
GameMap::mInfoLabel	GameMap.h	/^    OgreBites::Label * mInfoLabel;$/;"	m	class:GameMap	access:private
GameMap::mTerrain	GameMap.h	/^	Ogre::Entity * mTerrain;$/;"	m	class:GameMap	access:private
GameMap::mTerrainGlobals	GameMap.h	/^    Ogre::TerrainGlobalOptions * mTerrainGlobals;$/;"	m	class:GameMap	access:private
GameMap::mTerrainGroup	GameMap.h	/^    Ogre::TerrainGroup * mTerrainGroup;$/;"	m	class:GameMap	access:private
GameMap::mTerrainsImported	GameMap.h	/^    bool mTerrainsImported;$/;"	m	class:GameMap	access:private
GameMap::~GameMap	GameMap.h	/^    virtual ~GameMap(void);$/;"	p	class:GameMap	access:public	signature:(void)
Generally	tinyxml/docs/classTiXmlDocument.html	/^<p>Generally, you probably want the error string ( <a class="el" href="classTiXmlDocument.html#a9d0f689f6e09ea494ea547be8d79c25e" title="Contains a textual (english) description of the error if one occurs.">ErrorDesc()<\/a> ). <\/p>$/;"	v
GetChar	tinyxml/tinyxml.h	/^	inline static const char* GetChar( const char* p, char* _value, int* length, TiXmlEncoding encoding )$/;"	f	class:TiXmlBase	access:protected	signature:( const char* p, char* _value, int* length, TiXmlEncoding encoding )
GetDocument	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00690"><\/a>00690     <a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a>* <a class="code" href="classTiXmlNode.html#a80e397fa973cf5323e33b07154b024f3" title="Return a pointer to the Document this node lives in.">GetDocument<\/a>() {$/;"	f	class:TiXmlVisitor::TiXmlNode	access:public	signature:()
GetDocument	tinyxml/tinyxml.cpp	/^const TiXmlDocument* TiXmlNode::GetDocument() const$/;"	f	class:TiXmlNode	signature:() const
GetDocument	tinyxml/tinyxml.h	/^	TiXmlDocument* GetDocument() {$/;"	f	class:TiXmlNode	access:public	signature:()
GetDocument	tinyxml/tinyxml.h	/^	const TiXmlDocument* GetDocument() const;$/;"	p	class:TiXmlNode	access:public	signature:() const
GetEntity	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00323"><\/a>00323     <span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* GetEntity( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* in, <span class="keywordtype">char<\/span>* value, <span class="keywordtype">int<\/span>* length, TiXmlEncoding encoding );$/;"	p	class:TiXmlVisitor::TiXmlBase	file:	access:protected	signature:( <span class=”>const</span> <span class=”>char</span>* in, <span class=”>char</span>* value, <span class=”>int</span>* length, TiXmlEncoding encoding )
GetEntity	tinyxml/tinyxml.h	/^	static const char* GetEntity( const char* in, char* value, int* length, TiXmlEncoding encoding );$/;"	p	class:TiXmlBase	access:protected	signature:( const char* in, char* value, int* length, TiXmlEncoding encoding )
GetEntity	tinyxml/tinyxmlparser.cpp	/^const char* TiXmlBase::GetEntity( const char* p, char* value, int* length, TiXmlEncoding encoding )$/;"	f	class:TiXmlBase	signature:( const char* p, char* value, int* length, TiXmlEncoding encoding )
GetText	tinyxml/tinyxml.cpp	/^const char* TiXmlElement::GetText() const$/;"	f	class:TiXmlElement	signature:() const
GetText	tinyxml/tinyxml.h	/^	const char* GetText() const;$/;"	p	class:TiXmlElement	access:public	signature:() const
GetUserData	tinyxml/tinyxml.h	/^	const void* GetUserData() const 		{ return userData; }	\/\/\/< Get a pointer to arbitrary user data.$/;"	f	class:TiXmlBase	access:public	signature:() const
GetUserData	tinyxml/tinyxml.h	/^	void* GetUserData()						{ return userData; }	\/\/\/< Get a pointer to arbitrary user data.$/;"	f	class:TiXmlBase	access:public	signature:()
GraphicCharacter	GraphicCharacter.h	/^	GraphicCharacter( SceneManager * pSceneMgr, CharacterState * pCharacterState );$/;"	p	class:GraphicCharacter	access:public	signature:( SceneManager * pSceneMgr, CharacterState * pCharacterState )
GraphicCharacter	GraphicCharacter.h	/^class GraphicCharacter$/;"	c
GraphicCharacter::ANIM_DANCE	GraphicCharacter.h	/^		ANIM_DANCE,$/;"	e	enum:GraphicCharacter::AnimID
GraphicCharacter::ANIM_DRAW_SWORDS	GraphicCharacter.h	/^		ANIM_DRAW_SWORDS,$/;"	e	enum:GraphicCharacter::AnimID
GraphicCharacter::ANIM_HANDS_CLOSED	GraphicCharacter.h	/^		ANIM_HANDS_CLOSED,$/;"	e	enum:GraphicCharacter::AnimID
GraphicCharacter::ANIM_HANDS_RELAXED	GraphicCharacter.h	/^		ANIM_HANDS_RELAXED,$/;"	e	enum:GraphicCharacter::AnimID
GraphicCharacter::ANIM_IDLE_BASE	GraphicCharacter.h	/^		ANIM_IDLE_BASE,$/;"	e	enum:GraphicCharacter::AnimID
GraphicCharacter::ANIM_IDLE_TOP	GraphicCharacter.h	/^		ANIM_IDLE_TOP,$/;"	e	enum:GraphicCharacter::AnimID
GraphicCharacter::ANIM_JUMP_END	GraphicCharacter.h	/^		ANIM_JUMP_END,$/;"	e	enum:GraphicCharacter::AnimID
GraphicCharacter::ANIM_JUMP_LOOP	GraphicCharacter.h	/^		ANIM_JUMP_LOOP,$/;"	e	enum:GraphicCharacter::AnimID
GraphicCharacter::ANIM_JUMP_START	GraphicCharacter.h	/^		ANIM_JUMP_START,$/;"	e	enum:GraphicCharacter::AnimID
GraphicCharacter::ANIM_NONE	GraphicCharacter.h	/^		ANIM_NONE$/;"	e	enum:GraphicCharacter::AnimID
GraphicCharacter::ANIM_RUN_BASE	GraphicCharacter.h	/^		ANIM_RUN_BASE,$/;"	e	enum:GraphicCharacter::AnimID
GraphicCharacter::ANIM_RUN_TOP	GraphicCharacter.h	/^		ANIM_RUN_TOP,$/;"	e	enum:GraphicCharacter::AnimID
GraphicCharacter::ANIM_SLICE_HORIZONTAL	GraphicCharacter.h	/^		ANIM_SLICE_HORIZONTAL,$/;"	e	enum:GraphicCharacter::AnimID
GraphicCharacter::ANIM_SLICE_VERTICAL	GraphicCharacter.h	/^		ANIM_SLICE_VERTICAL,$/;"	e	enum:GraphicCharacter::AnimID
GraphicCharacter::AnimID	GraphicCharacter.h	/^	enum AnimID$/;"	g	class:GraphicCharacter	access:private
GraphicCharacter::GraphicCharacter	GraphicCharacter.h	/^	GraphicCharacter( SceneManager * pSceneMgr, CharacterState * pCharacterState );$/;"	p	class:GraphicCharacter	access:public	signature:( SceneManager * pSceneMgr, CharacterState * pCharacterState )
GraphicCharacter::addTime	GraphicCharacter.h	/^	void addTime( Real deltaTime );$/;"	p	class:GraphicCharacter	access:public	signature:( Real deltaTime )
GraphicCharacter::fadeAnimations	GraphicCharacter.h	/^	void fadeAnimations( Real deltaTime );$/;"	p	class:GraphicCharacter	access:private	signature:( Real deltaTime )
GraphicCharacter::getBodyEnt	GraphicCharacter.h	/^	Ogre::Entity * getBodyEnt(){ return mBodyEnt; }		 \/\/ ªÒ»°Ω«…´ µÃÂ$/;"	f	class:GraphicCharacter	access:public	signature:()
GraphicCharacter::getBodyNode	GraphicCharacter.h	/^	Ogre::SceneNode * getBodyNode(){ return mBodyNode; } \/\/ ªÒ»°Ω«…´Ω⁄µ„$/;"	f	class:GraphicCharacter	access:public	signature:()
GraphicCharacter::injectKeyDown	GraphicCharacter.h	/^	void injectKeyDown( const OIS::KeyEvent & evt );$/;"	p	class:GraphicCharacter	access:public	signature:( const OIS::KeyEvent & evt )
GraphicCharacter::injectKeyUp	GraphicCharacter.h	/^	void injectKeyUp( const OIS::KeyEvent & evt );$/;"	p	class:GraphicCharacter	access:public	signature:( const OIS::KeyEvent & evt )
GraphicCharacter::injectMouseDown	GraphicCharacter.h	/^	void injectMouseDown( const OIS::MouseEvent & evt, OIS::MouseButtonID id );$/;"	p	class:GraphicCharacter	access:public	signature:( const OIS::MouseEvent & evt, OIS::MouseButtonID id )
GraphicCharacter::mAnims	GraphicCharacter.h	/^	AnimationState * mAnims[ NUM_ANIMS ];    \/\/ master animation list$/;"	m	class:GraphicCharacter	access:private
GraphicCharacter::mBaseAnimID	GraphicCharacter.h	/^	AnimID mBaseAnimID;                   \/\/ current base (full- or lower-body) animation$/;"	m	class:GraphicCharacter	access:private
GraphicCharacter::mBodyEnt	GraphicCharacter.h	/^	Entity * mBodyEnt;$/;"	m	class:GraphicCharacter	access:private
GraphicCharacter::mBodyNode	GraphicCharacter.h	/^	SceneNode * mBodyNode;$/;"	m	class:GraphicCharacter	access:private
GraphicCharacter::mCharacterState	GraphicCharacter.h	/^	CharacterState * mCharacterState; \/\/ ‘À∂Ø◊¥Ã¨ºØ$/;"	m	class:GraphicCharacter	access:private
GraphicCharacter::mFadingIn	GraphicCharacter.h	/^	bool mFadingIn[ NUM_ANIMS ];            \/\/ which animations are fading in$/;"	m	class:GraphicCharacter	access:private
GraphicCharacter::mFadingOut	GraphicCharacter.h	/^	bool mFadingOut[ NUM_ANIMS ];           \/\/ which animations are fading out$/;"	m	class:GraphicCharacter	access:private
GraphicCharacter::mSword1	GraphicCharacter.h	/^	Entity * mSword1;$/;"	m	class:GraphicCharacter	access:private
GraphicCharacter::mSword2	GraphicCharacter.h	/^	Entity * mSword2;$/;"	m	class:GraphicCharacter	access:private
GraphicCharacter::mSwordTrail	GraphicCharacter.h	/^	RibbonTrail * mSwordTrail;$/;"	m	class:GraphicCharacter	access:private
GraphicCharacter::mSwordsDrawn	GraphicCharacter.h	/^	bool mSwordsDrawn;$/;"	m	class:GraphicCharacter	access:private
GraphicCharacter::mTimer	GraphicCharacter.h	/^	Real mTimer;                \/\/ general timer to see how long animations have been playing$/;"	m	class:GraphicCharacter	access:private
GraphicCharacter::mTopAnimID	GraphicCharacter.h	/^	AnimID mTopAnimID;                    \/\/ current top (upper-body) animation$/;"	m	class:GraphicCharacter	access:private
GraphicCharacter::mVerticalVelocity	GraphicCharacter.h	/^	Real mVerticalVelocity;     \/\/ for jumping$/;"	m	class:GraphicCharacter	access:private
GraphicCharacter::setBaseAnimation	GraphicCharacter.h	/^	void setBaseAnimation( AnimID id, bool reset = false );$/;"	p	class:GraphicCharacter	access:private	signature:( AnimID id, bool reset = false )
GraphicCharacter::setTopAnimation	GraphicCharacter.h	/^	void setTopAnimation( AnimID id, bool reset = false );$/;"	p	class:GraphicCharacter	access:private	signature:( AnimID id, bool reset = false )
GraphicCharacter::setupAnimations	GraphicCharacter.h	/^	void setupAnimations();$/;"	p	class:GraphicCharacter	access:private	signature:()
GraphicCharacter::setupBody	GraphicCharacter.h	/^	void setupBody( SceneManager * pSceneMgr );$/;"	p	class:GraphicCharacter	access:private	signature:( SceneManager * pSceneMgr )
GraphicCharacter::updateAnimations	GraphicCharacter.h	/^	void updateAnimations( Real deltaTime );$/;"	p	class:GraphicCharacter	access:private	signature:( Real deltaTime )
GraphicCharacter::updateBody	GraphicCharacter.h	/^	void updateBody( Real deltaTime );$/;"	p	class:GraphicCharacter	access:private	signature:( Real deltaTime )
Identify	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00753"><\/a>00753     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* Identify( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* start, TiXmlEncoding encoding );$/;"	p	class:TiXmlVisitor::TiXmlNode	file:	access:protected	signature:( <span class=”>const</span> <span class=”>char</span>* start, TiXmlEncoding encoding )
Identify	tinyxml/tinyxml.h	/^	TiXmlNode* Identify( const char* start, TiXmlEncoding encoding );$/;"	p	class:TiXmlNode	access:protected	signature:( const char* start, TiXmlEncoding encoding )
Identify	tinyxml/tinyxmlparser.cpp	/^TiXmlNode* TiXmlNode::Identify( const char* p, TiXmlEncoding encoding )$/;"	f	class:TiXmlNode	signature:( const char* p, TiXmlEncoding encoding )
Indent	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01752"><\/a><a class="code" href="classTiXmlPrinter.html#abb33ec7d4bad6aaeb57f4304394b133d">01752<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* <a class="code" href="classTiXmlPrinter.html#abb33ec7d4bad6aaeb57f4304394b133d" title="Query the indention string.">Indent<\/a>()                            { <span class="keywordflow">return<\/span> indent.c_str(); }$/;"	f	class:TiXmlVisitor::TiXmlPrinter	access:public	signature:()
Indent	tinyxml/tinyxml.h	/^	const char* Indent()							{ return indent.c_str(); }$/;"	f	class:TiXmlPrinter	access:public	signature:()
InsertAfterChild	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00603"><\/a>00603     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#ad9b75e54ec19301c8b4d5ff583d0b3d5" title="Add a new node related to this.">InsertAfterChild<\/a>(  <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* afterThis, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; addThis );$/;"	p	class:TiXmlVisitor::TiXmlNode	file:	access:public	signature:( <a class=” href=” title=”>TiXmlNode</a>* afterThis, <span class=”>const</span> <a class=” href=” title=”>TiXmlNode</a>&amp; addThis )
InsertAfterChild	tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlNode::InsertAfterChild( TiXmlNode* afterThis, const TiXmlNode& addThis )$/;"	f	class:TiXmlNode	signature:( TiXmlNode* afterThis, const TiXmlNode& addThis )
InsertAfterChild	tinyxml/tinyxml.h	/^	TiXmlNode* InsertAfterChild(  TiXmlNode* afterThis, const TiXmlNode& addThis );$/;"	p	class:TiXmlNode	access:public	signature:( TiXmlNode* afterThis, const TiXmlNode& addThis )
InsertBeforeChild	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00598"><\/a>00598     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a0c146fa2fff0157b681594102f48cbc7" title="Add a new node related to this.">InsertBeforeChild<\/a>( <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* beforeThis, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; addThis );$/;"	p	class:TiXmlVisitor::TiXmlNode	file:	access:public	signature:( <a class=” href=” title=”>TiXmlNode</a>* beforeThis, <span class=”>const</span> <a class=” href=” title=”>TiXmlNode</a>&amp; addThis )
InsertBeforeChild	tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlNode::InsertBeforeChild( TiXmlNode* beforeThis, const TiXmlNode& addThis )$/;"	f	class:TiXmlNode	signature:( TiXmlNode* beforeThis, const TiXmlNode& addThis )
InsertBeforeChild	tinyxml/tinyxml.h	/^	TiXmlNode* InsertBeforeChild( TiXmlNode* beforeThis, const TiXmlNode& addThis );$/;"	p	class:TiXmlNode	access:public	signature:( TiXmlNode* beforeThis, const TiXmlNode& addThis )
InsertEndChild	tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlNode::InsertEndChild( const TiXmlNode& addThis )$/;"	f	class:TiXmlNode	signature:( const TiXmlNode& addThis )
InsertEndChild	tinyxml/tinyxml.h	/^	TiXmlNode* InsertEndChild( const TiXmlNode& addThis );$/;"	p	class:TiXmlNode	access:public	signature:( const TiXmlNode& addThis )
IntValue	tinyxml/tinyxml.cpp	/^int TiXmlAttribute::IntValue() const$/;"	f	class:TiXmlAttribute	signature:() const
IntValue	tinyxml/tinyxml.h	/^	int				IntValue() const;									\/\/\/< Return the value of this attribute, converted to an integer.$/;"	p	class:TiXmlAttribute	access:public	signature:() const
IsAlpha	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00380"><\/a>00380     <span class="keyword">static<\/span> <span class="keywordtype">int<\/span> IsAlpha( <span class="keywordtype">unsigned<\/span> <span class="keywordtype">char<\/span> anyByte, TiXmlEncoding encoding );$/;"	p	class:TiXmlVisitor::TiXmlBase	file:	access:protected	signature:( <span class=”>unsigned</span> <span class=”>char</span> anyByte, TiXmlEncoding encoding )
IsAlpha	tinyxml/tinyxml.h	/^	static int IsAlpha( unsigned char anyByte, TiXmlEncoding encoding );$/;"	p	class:TiXmlBase	access:protected	signature:( unsigned char anyByte, TiXmlEncoding encoding )
IsAlpha	tinyxml/tinyxmlparser.cpp	/^\/*static*\/ int TiXmlBase::IsAlpha( unsigned char anyByte, TiXmlEncoding \/*encoding*\/ )$/;"	f	class:TiXmlBase	signature:( unsigned char anyByte, TiXmlEncoding )
IsAlphaNum	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00381"><\/a>00381     <span class="keyword">static<\/span> <span class="keywordtype">int<\/span> IsAlphaNum( <span class="keywordtype">unsigned<\/span> <span class="keywordtype">char<\/span> anyByte, TiXmlEncoding encoding );$/;"	p	class:TiXmlVisitor::TiXmlBase	file:	access:protected	signature:( <span class=”>unsigned</span> <span class=”>char</span> anyByte, TiXmlEncoding encoding )
IsAlphaNum	tinyxml/tinyxml.h	/^	static int IsAlphaNum( unsigned char anyByte, TiXmlEncoding encoding );$/;"	p	class:TiXmlBase	access:protected	signature:( unsigned char anyByte, TiXmlEncoding encoding )
IsAlphaNum	tinyxml/tinyxmlparser.cpp	/^\/*static*\/ int TiXmlBase::IsAlphaNum( unsigned char anyByte, TiXmlEncoding \/*encoding*\/ )$/;"	f	class:TiXmlBase	signature:( unsigned char anyByte, TiXmlEncoding )
IsWhiteSpace	tinyxml/tinyxml.h	/^	inline static bool IsWhiteSpace( char c )		$/;"	f	class:TiXmlBase	access:protected	signature:( char c )
IsWhiteSpace	tinyxml/tinyxml.h	/^	inline static bool IsWhiteSpace( int c )$/;"	f	class:TiXmlBase	access:protected	signature:( int c )
IsWhiteSpaceCondensed	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00224"><\/a><a class="code" href="classTiXmlBase.html#ad4b1472531c647a25b1840a87ae42438">00224<\/a>     <span class="keyword">static<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlBase.html#ad4b1472531c647a25b1840a87ae42438" title="Return the current white space setting.">IsWhiteSpaceCondensed<\/a>()                     { <span class="keywordflow">return<\/span> condenseWhiteSpace; }$/;"	f	class:TiXmlVisitor::TiXmlBase	access:public	signature:()
IsWhiteSpaceCondensed	tinyxml/tinyxml.h	/^	static bool IsWhiteSpaceCondensed()						{ return condenseWhiteSpace; }$/;"	f	class:TiXmlBase	access:public	signature:()
IterateChildren	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00563"><\/a>00563     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a8621196ba3705fa226bef4a761cc51b6" title="An alternate way to walk the children of a node.">IterateChildren<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* previous ) {$/;"	f	class:TiXmlVisitor::TiXmlNode	access:public	signature:( <span class=”>const</span> <a class=” href=” title=”>TiXmlNode</a>* previous )
IterateChildren	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00569"><\/a>00569     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a8621196ba3705fa226bef4a761cc51b6" title="An alternate way to walk the children of a node.">IterateChildren<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _value, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* previous ) {$/;"	f	class:TiXmlVisitor::TiXmlNode	access:public	signature:( <span class=”>const</span> <span class=”>char</span> * _value, <span class=”>const</span> <a class=” href=” title=”>TiXmlNode</a>* previous )
IterateChildren	tinyxml/tinyxml.cpp	/^const TiXmlNode* TiXmlNode::IterateChildren( const TiXmlNode* previous ) const$/;"	f	class:TiXmlNode	signature:( const TiXmlNode* previous ) const
IterateChildren	tinyxml/tinyxml.cpp	/^const TiXmlNode* TiXmlNode::IterateChildren( const char * val, const TiXmlNode* previous ) const$/;"	f	class:TiXmlNode	signature:( const char * val, const TiXmlNode* previous ) const
IterateChildren	tinyxml/tinyxml.h	/^	TiXmlNode* IterateChildren( const TiXmlNode* previous ) {$/;"	f	class:TiXmlNode	access:public	signature:( const TiXmlNode* previous )
IterateChildren	tinyxml/tinyxml.h	/^	TiXmlNode* IterateChildren( const char * _value, const TiXmlNode* previous ) {$/;"	f	class:TiXmlNode	access:public	signature:( const char * _value, const TiXmlNode* previous )
IterateChildren	tinyxml/tinyxml.h	/^	TiXmlNode* IterateChildren( const std::string& _value, const TiXmlNode* previous ) {	return IterateChildren (_value.c_str (), previous);	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value, const TiXmlNode* previous )
IterateChildren	tinyxml/tinyxml.h	/^	const TiXmlNode* IterateChildren( const TiXmlNode* previous ) const;$/;"	p	class:TiXmlNode	access:public	signature:( const TiXmlNode* previous ) const
IterateChildren	tinyxml/tinyxml.h	/^	const TiXmlNode* IterateChildren( const char * value, const TiXmlNode* previous ) const;$/;"	p	class:TiXmlNode	access:public	signature:( const char * value, const TiXmlNode* previous ) const
IterateChildren	tinyxml/tinyxml.h	/^	const TiXmlNode* IterateChildren( const std::string& _value, const TiXmlNode* previous ) const	{	return IterateChildren (_value.c_str (), previous);	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value, const TiXmlNode* previous ) const
J	tinyxml/utf8test.gif	/^⁄ò&4©?JŸ%=∏≤»ˇ’êŸ€I“¨»TÒëP€jh0`Œ–ÜõsÈ%De¥OWÕÍV\/Z“!úu]˝jXÎ5;Sï¨ºeO)∂Râ	ûzÂk_µe5îıí®‰¬íÒ.yW•B÷GÎ‡P.c%z1¥¨√"4ÚÅMQ∂UÄyÌÊóH—y$Æuıl:µëI}‰ós ŸÓ¯0±z∫≤ï∑m‡•ngS‹∫Ê#C	P°ZŸ‚…è∂ë]Óé^ì6TQ÷èôUÏ<™ë–å¥U$/;"	v
JUMP_ACCEL	GraphicCharacter.h	29;"	d
KinematicCharacter	KinematicCharacter.h	/^	KinematicCharacter($/;"	p	class:KinematicCharacter	access:public	signature:( SceneNode * pNode, btPairCachingGhostObject * ghostObject, btConvexShape * convexShape, btScalar stepHeight, int upAxis = 1 )
KinematicCharacter	KinematicCharacter.h	/^class KinematicCharacter : public btKinematicCharacterController$/;"	c	inherits:btKinematicCharacterController
KinematicCharacter::KinematicCharacter	KinematicCharacter.h	/^	KinematicCharacter($/;"	p	class:KinematicCharacter	access:public	signature:( SceneNode * pNode, btPairCachingGhostObject * ghostObject, btConvexShape * convexShape, btScalar stepHeight, int upAxis = 1 )
KinematicCharacter::doCharacterJump	KinematicCharacter.h	/^	void doCharacterJump();		\/\/ Ã¯‘æ$/;"	p	class:KinematicCharacter	access:public	signature:()
KinematicCharacter::getCharacterNode	KinematicCharacter.h	/^	SceneNode * getCharacterNode(){ return mNode; } \/\/ ªÒ»°Ω«…´Ω⁄µ„$/;"	f	class:KinematicCharacter	access:public	signature:()
KinematicCharacter::getWorldTransform	KinematicCharacter.h	/^	btTransform getWorldTransform() const;$/;"	p	class:KinematicCharacter	access:public	signature:() const
KinematicCharacter::getWorldTransform	KinematicCharacter.h	/^	void getWorldTransform( btTransform & pWorldTrans ) const;$/;"	p	class:KinematicCharacter	access:public	signature:( btTransform & pWorldTrans ) const
KinematicCharacter::isLanded	KinematicCharacter.h	/^	bool isLanded();			\/\/ Ω«…´ «∑Ò‘⁄µÿ…œ$/;"	p	class:KinematicCharacter	access:public	signature:()
KinematicCharacter::mGoalDirection	KinematicCharacter.h	/^	Ogre::Vector3	  mGoalDirection; \/\/ Ω«…´«∞Ω¯∑ΩœÚ$/;"	m	class:KinematicCharacter	access:protected
KinematicCharacter::mNode	KinematicCharacter.h	/^	SceneNode		* mNode;		  \/\/ Ω«…´Ω⁄µ„$/;"	m	class:KinematicCharacter	access:protected
KinematicCharacter::setCharacterVelocityForTimeInterval	KinematicCharacter.h	/^	void setCharacterVelocityForTimeInterval( const btVector3 & pVelocity, btScalar pTimeInterval );$/;"	p	class:KinematicCharacter	access:public	signature:( const btVector3 & pVelocity, btScalar pTimeInterval )
KinematicCharacter::setCharacterWalkDirection	KinematicCharacter.h	/^	void setCharacterWalkDirection( const Ogre::Vector3 & pGoalDirection );$/;"	p	class:KinematicCharacter	access:public	signature:( const Ogre::Vector3 & pGoalDirection )
KinematicCharacter::setWorldTransform	KinematicCharacter.h	/^	void setWorldTransform( const btTransform & pWorldTrans );$/;"	p	class:KinematicCharacter	access:public	signature:( const btTransform & pWorldTrans )
KinematicCharacter::~KinematicCharacter	KinematicCharacter.h	/^	~KinematicCharacter();$/;"	p	class:KinematicCharacter	access:public	signature:()
Last	tinyxml/tinyxml.h	/^	TiXmlAttribute* Last()					{ return ( sentinel.prev == &sentinel ) ? 0 : sentinel.prev; }$/;"	f	class:TiXmlAttributeSet	access:public	signature:()
Last	tinyxml/tinyxml.h	/^	const TiXmlAttribute* Last() const		{ return ( sentinel.prev == &sentinel ) ? 0 : sentinel.prev; }$/;"	f	class:TiXmlAttributeSet	access:public	signature:() const
LastAttribute	tinyxml/tinyxml.h	/^	TiXmlAttribute* LastAttribute()					{ return attributeSet.Last(); }$/;"	f	class:TiXmlElement	access:public	signature:()
LastAttribute	tinyxml/tinyxml.h	/^	const TiXmlAttribute* LastAttribute()	const 	{ return attributeSet.Last(); }		\/\/\/< Access the last attribute in this element.$/;"	f	class:TiXmlElement	access:public	signature:() const
LastChild	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00535"><\/a><a class="code" href="classTiXmlNode.html#abad5bf1059c48127b958711ef89e8e5d">00535<\/a>     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#abad5bf1059c48127b958711ef89e8e5d" title="The last child of this node matching &amp;#39;value&amp;#39;. Will be null if there are no...">LastChild<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _value ) {$/;"	f	class:TiXmlVisitor::TiXmlNode	access:public	signature:( <span class=”>const</span> <span class=”>char</span> * _value )
LastChild	tinyxml/tinyxml.cpp	/^const TiXmlNode* TiXmlNode::LastChild( const char * _value ) const$/;"	f	class:TiXmlNode	signature:( const char * _value ) const
LastChild	tinyxml/tinyxml.h	/^	TiXmlNode* LastChild( const char * _value ) {$/;"	f	class:TiXmlNode	access:public	signature:( const char * _value )
LastChild	tinyxml/tinyxml.h	/^	TiXmlNode* LastChild( const std::string& _value )				{	return LastChild (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value )
LastChild	tinyxml/tinyxml.h	/^	TiXmlNode* LastChild()	{ return lastChild; }$/;"	f	class:TiXmlNode	access:public	signature:()
LastChild	tinyxml/tinyxml.h	/^	const TiXmlNode* LastChild( const char * value ) const;			\/\/\/ The last child of this node matching 'value'. Will be null if there are no children.$/;"	p	class:TiXmlNode	access:public	signature:( const char * value ) const
LastChild	tinyxml/tinyxml.h	/^	const TiXmlNode* LastChild( const std::string& _value ) const	{	return LastChild (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value ) const
LastChild	tinyxml/tinyxml.h	/^	const TiXmlNode* LastChild() const	{ return lastChild; }		\/\/\/ The last child of this node. Will be null if there are no children.$/;"	f	class:TiXmlNode	access:public	signature:() const
LineBreak	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01759"><\/a><a class="code" href="classTiXmlPrinter.html#a11f1b4804a460b175ec244eb5724d96d">01759<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* <a class="code" href="classTiXmlPrinter.html#a11f1b4804a460b175ec244eb5724d96d" title="Query the current line breaking string.">LineBreak<\/a>()                         { <span class="keywordflow">return<\/span> lineBreak.c_str(); }$/;"	f	class:TiXmlVisitor::TiXmlPrinter	access:public	signature:()
LineBreak	tinyxml/tinyxml.h	/^	const char* LineBreak()							{ return lineBreak.c_str(); }$/;"	f	class:TiXmlPrinter	access:public	signature:()
LinkEndChild	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00593"><\/a>00593     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a5d29442ae46de6d0168429156197bfc6" title="Add a new node related to this.">LinkEndChild<\/a>( <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* addThis );$/;"	p	class:TiXmlVisitor::TiXmlNode	file:	access:public	signature:( <a class=” href=” title=”>TiXmlNode</a>* addThis )
LinkEndChild	tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlNode::LinkEndChild( TiXmlNode* node )$/;"	f	class:TiXmlNode	signature:( TiXmlNode* node )
LinkEndChild	tinyxml/tinyxml.h	/^	TiXmlNode* LinkEndChild( TiXmlNode* addThis );$/;"	p	class:TiXmlNode	access:public	signature:( TiXmlNode* addThis )
LoadFile	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01412"><\/a>01412     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlDocument.html#a4c852a889c02cf251117fd1d9fe1845f" title="Load a file using the current document value.">LoadFile<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * filename, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING );$/;"	p	class:TiXmlVisitor::TiXmlDocument	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span> * filename, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING )
LoadFile	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01420"><\/a>01420     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlDocument.html#a4c852a889c02cf251117fd1d9fe1845f" title="Load a file using the current document value.">LoadFile<\/a>( FILE*, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING );$/;"	p	class:TiXmlVisitor::TiXmlDocument	file:	access:public	signature:( FILE*, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING )
LoadFile	tinyxml/docs/tutorial0.html	/^doc.LoadFile();$/;"	p	file:	signature:()
LoadFile	tinyxml/tinyxml.cpp	/^bool TiXmlDocument::LoadFile( FILE* file, TiXmlEncoding encoding )$/;"	f	class:TiXmlDocument	signature:( FILE* file, TiXmlEncoding encoding )
LoadFile	tinyxml/tinyxml.cpp	/^bool TiXmlDocument::LoadFile( TiXmlEncoding encoding )$/;"	f	class:TiXmlDocument	signature:( TiXmlEncoding encoding )
LoadFile	tinyxml/tinyxml.cpp	/^bool TiXmlDocument::LoadFile( const char* _filename, TiXmlEncoding encoding )$/;"	f	class:TiXmlDocument	signature:( const char* _filename, TiXmlEncoding encoding )
LoadFile	tinyxml/tinyxml.h	/^	bool LoadFile( FILE*, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING );$/;"	p	class:TiXmlDocument	access:public	signature:( FILE*, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING )
LoadFile	tinyxml/tinyxml.h	/^	bool LoadFile( TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING );$/;"	p	class:TiXmlDocument	access:public	signature:( TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING )
LoadFile	tinyxml/tinyxml.h	/^	bool LoadFile( const char * filename, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING );$/;"	p	class:TiXmlDocument	access:public	signature:( const char * filename, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING )
LoadFile	tinyxml/tinyxml.h	/^	bool LoadFile( const std::string& filename, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING )			\/\/\/< STL std::string version.$/;"	f	class:TiXmlDocument	access:public	signature:( const std::string& filename, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING )
LoadingBar	LoadingBar.h	/^	LoadingBar() {}$/;"	f	class:LoadingBar	access:public	signature:()
LoadingBar	LoadingBar.h	/^class LoadingBar : public ResourceGroupListener$/;"	c	inherits:ResourceGroupListener
LoadingBar::LoadingBar	LoadingBar.h	/^	LoadingBar() {}$/;"	f	class:LoadingBar	access:public	signature:()
LoadingBar::finish	LoadingBar.h	/^	virtual void finish(void)$/;"	f	class:LoadingBar	access:public	signature:(void)
LoadingBar::mInitProportion	LoadingBar.h	/^	Real mInitProportion;$/;"	m	class:LoadingBar	access:protected
LoadingBar::mLoadOverlay	LoadingBar.h	/^	Overlay* mLoadOverlay;$/;"	m	class:LoadingBar	access:protected
LoadingBar::mLoadingBarElement	LoadingBar.h	/^	OverlayElement* mLoadingBarElement;$/;"	m	class:LoadingBar	access:protected
LoadingBar::mLoadingCommentElement	LoadingBar.h	/^	OverlayElement* mLoadingCommentElement;$/;"	m	class:LoadingBar	access:protected
LoadingBar::mLoadingDescriptionElement	LoadingBar.h	/^	OverlayElement* mLoadingDescriptionElement;$/;"	m	class:LoadingBar	access:protected
LoadingBar::mNumGroupsInit	LoadingBar.h	/^	unsigned short mNumGroupsInit;$/;"	m	class:LoadingBar	access:protected
LoadingBar::mNumGroupsLoad	LoadingBar.h	/^	unsigned short mNumGroupsLoad;$/;"	m	class:LoadingBar	access:protected
LoadingBar::mProgressBarInc	LoadingBar.h	/^	Real mProgressBarInc;$/;"	m	class:LoadingBar	access:protected
LoadingBar::mProgressBarMaxSize	LoadingBar.h	/^	Real mProgressBarMaxSize;$/;"	m	class:LoadingBar	access:protected
LoadingBar::mProgressBarScriptSize	LoadingBar.h	/^	Real mProgressBarScriptSize;$/;"	m	class:LoadingBar	access:protected
LoadingBar::mWindow	LoadingBar.h	/^	RenderWindow* mWindow;$/;"	m	class:LoadingBar	access:protected
LoadingBar::resourceCollision	LoadingBar.h	/^	bool resourceCollision(ResourcePtr &resource, ResourceManager *resourceManager)$/;"	f	class:LoadingBar	access:public	signature:(ResourcePtr &resource, ResourceManager *resourceManager)
LoadingBar::resourceGroupLoadEnded	LoadingBar.h	/^	void resourceGroupLoadEnded(const String& groupName)$/;"	f	class:LoadingBar	access:public	signature:(const String& groupName)
LoadingBar::resourceGroupLoadStarted	LoadingBar.h	/^	void resourceGroupLoadStarted(const String& groupName, size_t resourceCount)$/;"	f	class:LoadingBar	access:public	signature:(const String& groupName, size_t resourceCount)
LoadingBar::resourceGroupScriptingEnded	LoadingBar.h	/^	void resourceGroupScriptingEnded(const String& groupName)$/;"	f	class:LoadingBar	access:public	signature:(const String& groupName)
LoadingBar::resourceGroupScriptingStarted	LoadingBar.h	/^	void resourceGroupScriptingStarted(const String& groupName, size_t scriptCount)$/;"	f	class:LoadingBar	access:public	signature:(const String& groupName, size_t scriptCount)
LoadingBar::resourceLoadEnded	LoadingBar.h	/^	void resourceLoadEnded(void)$/;"	f	class:LoadingBar	access:public	signature:(void)
LoadingBar::resourceLoadStarted	LoadingBar.h	/^	void resourceLoadStarted(const ResourcePtr& resource)$/;"	f	class:LoadingBar	access:public	signature:(const ResourcePtr& resource)
LoadingBar::resourceLoading	LoadingBar.h	/^	Ogre::DataStreamPtr resourceLoading(const String &name, const String &group, Resource *resource)$/;"	f	class:LoadingBar	access:public	signature:(const String &name, const String &group, Resource *resource)
LoadingBar::scriptParseEnded	LoadingBar.h	/^	void scriptParseEnded(const String& scriptName, bool skipped)$/;"	f	class:LoadingBar	access:public	signature:(const String& scriptName, bool skipped)
LoadingBar::scriptParseStarted	LoadingBar.h	/^	void scriptParseStarted(const String& scriptName, bool &skipThisScript)$/;"	f	class:LoadingBar	access:public	signature:(const String& scriptName, bool &skipThisScript)
LoadingBar::start	LoadingBar.h	/^	virtual void start(RenderWindow* window, $/;"	f	class:LoadingBar	access:public	signature:(RenderWindow* window, unsigned short numGroupsInit = 1, unsigned short numGroupsLoad = 1, Real initProportion = 0.70f)
LoadingBar::worldGeometryStageEnded	LoadingBar.h	/^	void worldGeometryStageEnded(void)$/;"	f	class:LoadingBar	access:public	signature:(void)
LoadingBar::worldGeometryStageStarted	LoadingBar.h	/^	void worldGeometryStageStarted(const String& description)$/;"	f	class:LoadingBar	access:public	signature:(const String& description)
LoadingBar::~LoadingBar	LoadingBar.h	/^	virtual ~LoadingBar(){}$/;"	f	class:LoadingBar	access:public	signature:()
MAX_ENTITY_LENGTH	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00409"><\/a>00409         MAX_ENTITY_LENGTH = 6$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon8	file:
MAX_ENTITY_LENGTH	tinyxml/tinyxml.h	/^		MAX_ENTITY_LENGTH = 6$/;"	e	enum:TiXmlBase::__anon5
Model	tinyxml/docs/index.html	/^<p>There are different ways to access and interact with XML data. TinyXML uses a Document Object Model (DOM), meaning the XML data is parsed into a C++ objects that can be browsed and manipulated, and then written to disk or another output stream. You can also construct an XML document from scratch with C++ objects and write this to disk or another output stream.<\/p>$/;"	p	file:	signature:(DOM)
MotionState	MotionState.h	/^	MotionState( const btTransform & pInitialPos, Ogre::SceneNode * pNode );$/;"	p	class:MotionState	access:public	signature:( const btTransform & pInitialPos, Ogre::SceneNode * pNode )
MotionState	MotionState.h	/^class MotionState : public btMotionState$/;"	c	inherits:btMotionState
MotionState::MotionState	MotionState.h	/^	MotionState( const btTransform & pInitialPos, Ogre::SceneNode * pNode );$/;"	p	class:MotionState	access:public	signature:( const btTransform & pInitialPos, Ogre::SceneNode * pNode )
MotionState::getWorldTransform	MotionState.h	/^	virtual void getWorldTransform( btTransform & pWorldTrans ) const;$/;"	p	class:MotionState	access:public	signature:( btTransform & pWorldTrans ) const
MotionState::mNode	MotionState.h	/^	Ogre::SceneNode * mNode;$/;"	m	class:MotionState	access:protected
MotionState::mPosition	MotionState.h	/^	btTransform		  mPosition;$/;"	m	class:MotionState	access:protected
MotionState::setNode	MotionState.h	/^	void setNode( Ogre::SceneNode * pNode );$/;"	p	class:MotionState	access:public	signature:( Ogre::SceneNode * pNode )
MotionState::setPlayerPosition	MotionState.h	/^	void setPlayerPosition( btTransform & pCurrentPos );$/;"	p	class:MotionState	access:public	signature:( btTransform & pCurrentPos )
MotionState::setWorldTransform	MotionState.h	/^	virtual void setWorldTransform( const btTransform & pWorldTrans );$/;"	p	class:MotionState	access:public	signature:( const btTransform & pWorldTrans )
MotionState::~MotionState	MotionState.h	/^	virtual ~MotionState();$/;"	p	class:MotionState	access:public	signature:()
NN	tinyxml/utf8test.gif	/^GIF89aÚ/;"	v
NUM_ANIMS	GraphicCharacter.h	23;"	d
NUM_ENTITY	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00408"><\/a>00408         NUM_ENTITY = 5,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon8	file:
NUM_ENTITY	tinyxml/tinyxml.h	/^		NUM_ENTITY = 5,$/;"	e	enum:TiXmlBase::__anon5
Name	tinyxml/tinyxml.h	/^	const char*		Name()  const		{ return name.c_str(); }		\/\/\/< Return the name of this attribute.$/;"	f	class:TiXmlAttribute	access:public	signature:() const
NameTStr	tinyxml/tinyxml.h	/^	const TIXML_STRING& NameTStr() const { return name; }$/;"	f	class:TiXmlAttribute	access:public	signature:() const
Next	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00850"><\/a>00850     <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* <a class="code" href="classTiXmlAttribute.html#a1c78e92e223a40843f644ba48ef69f67" title="Get the next sibling attribute in the DOM. Returns null at end.">Next<\/a>() {$/;"	f	class:TiXmlVisitor::TiXmlAttribute	access:public	signature:()
Next	tinyxml/tinyxml.cpp	/^const TiXmlAttribute* TiXmlAttribute::Next() const$/;"	f	class:TiXmlAttribute	signature:() const
Next	tinyxml/tinyxml.h	/^	TiXmlAttribute* Next() {$/;"	f	class:TiXmlAttribute	access:public	signature:()
Next	tinyxml/tinyxml.h	/^	const TiXmlAttribute* Next() const;$/;"	p	class:TiXmlAttribute	access:public	signature:() const
NextSibling	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00636"><\/a>00636     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#af854baeba384f5fe9859f5aee03b548e" title="Navigate to a sibling node.">NextSibling<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _next ) {$/;"	f	class:TiXmlVisitor::TiXmlNode	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* _next )
NextSibling	tinyxml/tinyxml.cpp	/^const TiXmlNode* TiXmlNode::NextSibling( const char * _value ) const $/;"	f	class:TiXmlNode	signature:( const char * _value ) const
NextSibling	tinyxml/tinyxml.h	/^	TiXmlNode* NextSibling( const char* _next ) {$/;"	f	class:TiXmlNode	access:public	signature:( const char* _next )
NextSibling	tinyxml/tinyxml.h	/^	TiXmlNode* NextSibling( const std::string& _value) 					{	return NextSibling (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value)
NextSibling	tinyxml/tinyxml.h	/^	TiXmlNode* NextSibling()							{ return next; }$/;"	f	class:TiXmlNode	access:public	signature:()
NextSibling	tinyxml/tinyxml.h	/^	const TiXmlNode* NextSibling( const char * ) const;$/;"	p	class:TiXmlNode	access:public	signature:( const char * ) const
NextSibling	tinyxml/tinyxml.h	/^	const TiXmlNode* NextSibling( const std::string& _value) const		{	return NextSibling (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value) const
NextSibling	tinyxml/tinyxml.h	/^	const TiXmlNode* NextSibling() const				{ return next; }$/;"	f	class:TiXmlNode	access:public	signature:() const
NextSiblingElement	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00645"><\/a>00645     <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#a73acf929d49d10bd0e5fb3d31b0372d1" title="Convenience function to get through elements.">NextSiblingElement<\/a>() {$/;"	f	class:TiXmlVisitor::TiXmlNode	access:public	signature:()
NextSiblingElement	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00654"><\/a>00654     <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#a73acf929d49d10bd0e5fb3d31b0372d1" title="Convenience function to get through elements.">NextSiblingElement<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *_next ) {$/;"	f	class:TiXmlVisitor::TiXmlNode	access:public	signature:( <span class=”>const</span> <span class=”>char</span> *_next )
NextSiblingElement	tinyxml/tinyxml.cpp	/^const TiXmlElement* TiXmlNode::NextSiblingElement( const char * _value ) const$/;"	f	class:TiXmlNode	signature:( const char * _value ) const
NextSiblingElement	tinyxml/tinyxml.cpp	/^const TiXmlElement* TiXmlNode::NextSiblingElement() const$/;"	f	class:TiXmlNode	signature:() const
NextSiblingElement	tinyxml/tinyxml.h	/^	TiXmlElement* NextSiblingElement( const char *_next ) {$/;"	f	class:TiXmlNode	access:public	signature:( const char *_next )
NextSiblingElement	tinyxml/tinyxml.h	/^	TiXmlElement* NextSiblingElement( const std::string& _value)				{	return NextSiblingElement (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value)
NextSiblingElement	tinyxml/tinyxml.h	/^	TiXmlElement* NextSiblingElement() {$/;"	f	class:TiXmlNode	access:public	signature:()
NextSiblingElement	tinyxml/tinyxml.h	/^	const TiXmlElement* NextSiblingElement( const char * ) const;$/;"	p	class:TiXmlNode	access:public	signature:( const char * ) const
NextSiblingElement	tinyxml/tinyxml.h	/^	const TiXmlElement* NextSiblingElement( const std::string& _value) const	{	return NextSiblingElement (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value) const
NextSiblingElement	tinyxml/tinyxml.h	/^	const TiXmlElement* NextSiblingElement() const;$/;"	p	class:TiXmlNode	access:public	signature:() const
NoChildren	tinyxml/tinyxml.h	/^	bool NoChildren() const						{ return !firstChild; }$/;"	f	class:TiXmlNode	access:public	signature:() const
Node	tinyxml/tinyxml.h	/^	TiXmlNode* Node() const			{ return ToNode(); } $/;"	f	class:TiXmlHandle	access:public	signature:() const
NodeType	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00462"><\/a><a class="code" href="classTiXmlNode.html#a836eded4920ab9e9ef28496f48cd95a2">00462<\/a>     <span class="keyword">enum<\/span> <a class="code" href="classTiXmlNode.html#a836eded4920ab9e9ef28496f48cd95a2" title="The types of XML nodes supported by TinyXml.">NodeType<\/a>$/;"	g	class:TiXmlVisitor::TiXmlNode	file:	access:public
NodeType	tinyxml/tinyxml.h	/^	enum NodeType$/;"	g	class:TiXmlNode	access:public
Ogre	DotSceneLoader.h	/^namespace Ogre$/;"	n
Ogre::DotSceneLoader	DotSceneLoader.h	/^    class DotSceneLoader$/;"	c	namespace:Ogre
Ogre::DotSceneLoader::DotSceneLoader	DotSceneLoader.h	/^        DotSceneLoader() : mSceneMgr(0) {}$/;"	f	class:Ogre::DotSceneLoader	access:public	signature:()
Ogre::DotSceneLoader::dynamicObjects	DotSceneLoader.h	/^        std::vector<String> dynamicObjects;$/;"	m	class:Ogre::DotSceneLoader	access:public
Ogre::DotSceneLoader::getAttrib	DotSceneLoader.h	/^        String getAttrib(TiXmlElement *XMLNode, const String &parameter, const String &defaultValue = "");$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, const String &parameter, const String &defaultValue = ”)
Ogre::DotSceneLoader::getAttribBool	DotSceneLoader.h	/^        bool getAttribBool(TiXmlElement *XMLNode, const String &parameter, bool defaultValue = false);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, const String &parameter, bool defaultValue = false)
Ogre::DotSceneLoader::getAttribReal	DotSceneLoader.h	/^        Real getAttribReal(TiXmlElement *XMLNode, const String &parameter, Real defaultValue = 0);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, const String &parameter, Real defaultValue = 0)
Ogre::DotSceneLoader::getProperty	DotSceneLoader.h	/^        String getProperty(const String &ndNm, const String &prop);$/;"	p	class:Ogre::DotSceneLoader	access:public	signature:(const String &ndNm, const String &prop)
Ogre::DotSceneLoader::mAttachNode	DotSceneLoader.h	/^        SceneNode *mAttachNode;$/;"	m	class:Ogre::DotSceneLoader	access:protected
Ogre::DotSceneLoader::mSceneMgr	DotSceneLoader.h	/^        SceneManager *mSceneMgr;$/;"	m	class:Ogre::DotSceneLoader	access:protected
Ogre::DotSceneLoader::m_sGroupName	DotSceneLoader.h	/^        String m_sGroupName;$/;"	m	class:Ogre::DotSceneLoader	access:protected
Ogre::DotSceneLoader::m_sPrependNode	DotSceneLoader.h	/^        String m_sPrependNode;$/;"	m	class:Ogre::DotSceneLoader	access:protected
Ogre::DotSceneLoader::nodeProperties	DotSceneLoader.h	/^        std::vector<nodeProperty> nodeProperties;$/;"	m	class:Ogre::DotSceneLoader	access:public
Ogre::DotSceneLoader::parseColour	DotSceneLoader.h	/^        ColourValue parseColour(TiXmlElement *XMLNode);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode)
Ogre::DotSceneLoader::parseDotScene	DotSceneLoader.h	/^        void parseDotScene(const String &SceneName, const String &groupName, SceneManager *yourSceneMgr, SceneNode *pAttachNode = NULL, const String &sPrependNode = "");$/;"	p	class:Ogre::DotSceneLoader	access:public	signature:(const String &SceneName, const String &groupName, SceneManager *yourSceneMgr, SceneNode *pAttachNode = NULL, const String &sPrependNode = ”)
Ogre::DotSceneLoader::parseQuaternion	DotSceneLoader.h	/^        Quaternion parseQuaternion(TiXmlElement *XMLNode);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode)
Ogre::DotSceneLoader::parseVector3	DotSceneLoader.h	/^        Vector3 parseVector3(TiXmlElement *XMLNode);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode)
Ogre::DotSceneLoader::processBillboardSet	DotSceneLoader.h	/^        void processBillboardSet(TiXmlElement *XMLNode, SceneNode *pParent);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, SceneNode *pParent)
Ogre::DotSceneLoader::processCamera	DotSceneLoader.h	/^        void processCamera(TiXmlElement *XMLNode, SceneNode *pParent = 0);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, SceneNode *pParent = 0)
Ogre::DotSceneLoader::processClipping	DotSceneLoader.h	/^        void processClipping(TiXmlElement *XMLNode);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode)
Ogre::DotSceneLoader::processEntity	DotSceneLoader.h	/^        void processEntity(TiXmlElement *XMLNode, SceneNode *pParent);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, SceneNode *pParent)
Ogre::DotSceneLoader::processEnvironment	DotSceneLoader.h	/^        void processEnvironment(TiXmlElement *XMLNode);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode)
Ogre::DotSceneLoader::processExternals	DotSceneLoader.h	/^        void processExternals(TiXmlElement *XMLNode);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode)
Ogre::DotSceneLoader::processFog	DotSceneLoader.h	/^        void processFog(TiXmlElement *XMLNode);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode)
Ogre::DotSceneLoader::processLight	DotSceneLoader.h	/^        void processLight(TiXmlElement *XMLNode, SceneNode *pParent = 0);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, SceneNode *pParent = 0)
Ogre::DotSceneLoader::processLightAttenuation	DotSceneLoader.h	/^        void processLightAttenuation(TiXmlElement *XMLNode, Light *pLight);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, Light *pLight)
Ogre::DotSceneLoader::processLightRange	DotSceneLoader.h	/^        void processLightRange(TiXmlElement *XMLNode, Light *pLight);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, Light *pLight)
Ogre::DotSceneLoader::processLookTarget	DotSceneLoader.h	/^        void processLookTarget(TiXmlElement *XMLNode, SceneNode *pParent);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, SceneNode *pParent)
Ogre::DotSceneLoader::processNode	DotSceneLoader.h	/^        void processNode(TiXmlElement *XMLNode, SceneNode *pParent = 0);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, SceneNode *pParent = 0)
Ogre::DotSceneLoader::processNodes	DotSceneLoader.h	/^        void processNodes(TiXmlElement *XMLNode);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode)
Ogre::DotSceneLoader::processOctree	DotSceneLoader.h	/^        void processOctree(TiXmlElement *XMLNode);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode)
Ogre::DotSceneLoader::processParticleSystem	DotSceneLoader.h	/^        void processParticleSystem(TiXmlElement *XMLNode, SceneNode *pParent);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, SceneNode *pParent)
Ogre::DotSceneLoader::processPlane	DotSceneLoader.h	/^        void processPlane(TiXmlElement *XMLNode, SceneNode *pParent);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, SceneNode *pParent)
Ogre::DotSceneLoader::processScene	DotSceneLoader.h	/^        void processScene(TiXmlElement *XMLRoot);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLRoot)
Ogre::DotSceneLoader::processSkyBox	DotSceneLoader.h	/^        void processSkyBox(TiXmlElement *XMLNode);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode)
Ogre::DotSceneLoader::processSkyDome	DotSceneLoader.h	/^        void processSkyDome(TiXmlElement *XMLNode);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode)
Ogre::DotSceneLoader::processSkyPlane	DotSceneLoader.h	/^        void processSkyPlane(TiXmlElement *XMLNode);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode)
Ogre::DotSceneLoader::processTerrain	DotSceneLoader.h	/^        void processTerrain(TiXmlElement *XMLNode);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode)
Ogre::DotSceneLoader::processTrackTarget	DotSceneLoader.h	/^        void processTrackTarget(TiXmlElement *XMLNode, SceneNode *pParent);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, SceneNode *pParent)
Ogre::DotSceneLoader::processUserDataReference	DotSceneLoader.h	/^        void processUserDataReference(TiXmlElement *XMLNode, Entity *pEntity);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, Entity *pEntity)
Ogre::DotSceneLoader::processUserDataReference	DotSceneLoader.h	/^        void processUserDataReference(TiXmlElement *XMLNode, SceneNode *pParent = 0);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, SceneNode *pParent = 0)
Ogre::DotSceneLoader::staticObjects	DotSceneLoader.h	/^        std::vector<String> staticObjects;$/;"	m	class:Ogre::DotSceneLoader	access:public
Ogre::DotSceneLoader::~DotSceneLoader	DotSceneLoader.h	/^        virtual ~DotSceneLoader() {}$/;"	f	class:Ogre::DotSceneLoader	access:public	signature:()
Ogre::nodeProperty	DotSceneLoader.h	/^    class nodeProperty$/;"	c	namespace:Ogre
Ogre::nodeProperty::nodeName	DotSceneLoader.h	/^        String nodeName;$/;"	m	class:Ogre::nodeProperty	access:public
Ogre::nodeProperty::nodeProperty	DotSceneLoader.h	/^        nodeProperty(const String &node, const String &propertyName, const String &value, const String &type)$/;"	f	class:Ogre::nodeProperty	access:public	signature:(const String &node, const String &propertyName, const String &value, const String &type)
Ogre::nodeProperty::propertyNm	DotSceneLoader.h	/^        String propertyNm;$/;"	m	class:Ogre::nodeProperty	access:public
Ogre::nodeProperty::typeName	DotSceneLoader.h	/^        String typeName;$/;"	m	class:Ogre::nodeProperty	access:public
Ogre::nodeProperty::valueName	DotSceneLoader.h	/^        String valueName;$/;"	m	class:Ogre::nodeProperty	access:public
Parent	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00519"><\/a><a class="code" href="classTiXmlNode.html#ab643043132ffd794f8602685d34a982e">00519<\/a>     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#ab643043132ffd794f8602685d34a982e" title="One step up the DOM.">Parent<\/a>()                         { <span class="keywordflow">return<\/span> parent; }$/;"	f	class:TiXmlVisitor::TiXmlNode	access:public	signature:()
Parent	tinyxml/tinyxml.h	/^	TiXmlNode* Parent()							{ return parent; }$/;"	f	class:TiXmlNode	access:public	signature:()
Parent	tinyxml/tinyxml.h	/^	const TiXmlNode* Parent() const				{ return parent; }$/;"	f	class:TiXmlNode	access:public	signature:() const
Parse	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00255"><\/a>00255     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* <a class="code" href="classTiXmlDocument.html#a17ebabe36926ef398e78dec0d0ad0378" title="Parse the given null terminated block of xml data.">Parse<\/a>(  <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, $/;"	p	class:TiXmlVisitor::TiXmlBase	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* p, <a name=”></a>00256 TiXmlParsingData* data, <a name=”></a>00257 TiXmlEncoding encoding <span class=”> </span> )
Parse	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00867"><\/a>00867     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* Parse( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	p	class:TiXmlVisitor::TiXmlAttribute	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* p, TiXmlParsingData* data, TiXmlEncoding encoding )
Parse	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01124"><\/a>01124     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* Parse( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	p	class:TiXmlVisitor::TiXmlElement	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* p, TiXmlParsingData* data, TiXmlEncoding encoding )
Parse	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01177"><\/a>01177     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* Parse( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	p	class:TiXmlVisitor::TiXmlComment	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* p, TiXmlParsingData* data, TiXmlEncoding encoding )
Parse	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01361"><\/a>01361     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* Parse( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	p	class:TiXmlVisitor::TiXmlUnknown	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* p, TiXmlParsingData* data, TiXmlEncoding encoding )
Parse	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01439"><\/a>01439     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* <a class="code" href="classTiXmlDocument.html#a17ebabe36926ef398e78dec0d0ad0378" title="Parse the given null terminated block of xml data.">Parse<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TiXmlParsingData* data = 0, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING );$/;"	p	class:TiXmlVisitor::TiXmlDocument	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* p, TiXmlParsingData* data = 0, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING )
Parse	tinyxml/tinyxml.h	/^	virtual const char* Parse(	const char* p, $/;"	p	class:TiXmlBase	access:public	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )
Parse	tinyxml/tinyxml.h	/^	virtual const char* Parse( const char* p, TiXmlParsingData* data = 0, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING );$/;"	p	class:TiXmlDocument	access:public	signature:( const char* p, TiXmlParsingData* data = 0, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING )
Parse	tinyxml/tinyxml.h	/^	virtual const char* Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	p	class:TiXmlAttribute	access:public	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )
Parse	tinyxml/tinyxml.h	/^	virtual const char* Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	p	class:TiXmlComment	access:public	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )
Parse	tinyxml/tinyxml.h	/^	virtual const char* Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	p	class:TiXmlDeclaration	access:public	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )
Parse	tinyxml/tinyxml.h	/^	virtual const char* Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	p	class:TiXmlElement	access:public	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )
Parse	tinyxml/tinyxml.h	/^	virtual const char* Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	p	class:TiXmlText	access:public	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )
Parse	tinyxml/tinyxml.h	/^	virtual const char* Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	p	class:TiXmlUnknown	access:public	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )
Parse	tinyxml/tinyxmlparser.cpp	/^const char* TiXmlAttribute::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlAttribute	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )
Parse	tinyxml/tinyxmlparser.cpp	/^const char* TiXmlComment::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlComment	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )
Parse	tinyxml/tinyxmlparser.cpp	/^const char* TiXmlDeclaration::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding _encoding )$/;"	f	class:TiXmlDeclaration	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding _encoding )
Parse	tinyxml/tinyxmlparser.cpp	/^const char* TiXmlDocument::Parse( const char* p, TiXmlParsingData* prevData, TiXmlEncoding encoding )$/;"	f	class:TiXmlDocument	signature:( const char* p, TiXmlParsingData* prevData, TiXmlEncoding encoding )
Parse	tinyxml/tinyxmlparser.cpp	/^const char* TiXmlElement::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlElement	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )
Parse	tinyxml/tinyxmlparser.cpp	/^const char* TiXmlText::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlText	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )
Parse	tinyxml/tinyxmlparser.cpp	/^const char* TiXmlUnknown::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlUnknown	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )
PhysicsBase	PhysicsBase.h	/^    PhysicsBase( Ogre::SceneManager * sceneMgr, GameMap * pMap, Ogre::Vector3 gravityVector, Ogre::AxisAlignedBox bounds );$/;"	p	class:PhysicsBase	access:public	signature:( Ogre::SceneManager * sceneMgr, GameMap * pMap, Ogre::Vector3 gravityVector, Ogre::AxisAlignedBox bounds )
PhysicsBase	PhysicsBase.h	/^class PhysicsBase : public Ogre::FrameListener$/;"	c	inherits:Ogre::FrameListener
PhysicsBase::PhysicsBase	PhysicsBase.h	/^    PhysicsBase( Ogre::SceneManager * sceneMgr, GameMap * pMap, Ogre::Vector3 gravityVector, Ogre::AxisAlignedBox bounds );$/;"	p	class:PhysicsBase	access:public	signature:( Ogre::SceneManager * sceneMgr, GameMap * pMap, Ogre::Vector3 gravityVector, Ogre::AxisAlignedBox bounds )
PhysicsBase::createPhysicsScene	PhysicsBase.h	/^	virtual void createPhysicsScene()   = 0;	\/\/ ‘⁄µÿ–Œª˘¥°…œππΩ®≥°æ∞$/;"	p	class:PhysicsBase	access:public	signature:()
PhysicsBase::createPhysicsTerrain	PhysicsBase.h	/^	virtual void createPhysicsTerrain() = 0;	\/\/ ππΩ®µÿ–Œ$/;"	p	class:PhysicsBase	access:public	signature:()
PhysicsBase::debugDrawer	PhysicsBase.h	/^ 	OgreBulletCollisions::DebugDrawer * debugDrawer; \/\/ ”√”⁄DeBug√ËªÊ¬Ãœﬂ$/;"	m	class:PhysicsBase	access:protected
PhysicsBase::destroyPhysicsWorld	PhysicsBase.h	/^	virtual void destroyPhysicsWorld();$/;"	p	class:PhysicsBase	access:public	signature:()
PhysicsBase::getPhysicsWorld	PhysicsBase.h	/^	OgreBulletDynamics::DynamicsWorld * getPhysicsWorld(){ return mWorld; }$/;"	f	class:PhysicsBase	access:public	signature:()
PhysicsBase::initPhysicsWorld	PhysicsBase.h	/^	virtual void initPhysicsWorld();			\/\/ ≥ı ºªØŒÔ¿Ì ¿ΩÁ$/;"	p	class:PhysicsBase	access:public	signature:()
PhysicsBase::mBodies	PhysicsBase.h	/^ 	std::deque< OgreBulletDynamics::RigidBody * >         mBodies; \/\/ ŒÔ¿ÌÃÂ∂”¡–$/;"	m	class:PhysicsBase	access:protected
PhysicsBase::mBounds	PhysicsBase.h	/^	Ogre::AxisAlignedBox				mBounds;$/;"	m	class:PhysicsBase	access:protected
PhysicsBase::mGravityVector	PhysicsBase.h	/^	Ogre::Vector3						mGravityVector;$/;"	m	class:PhysicsBase	access:protected
PhysicsBase::mNumEntitiesInstanced	PhysicsBase.h	/^ 	int									mNumEntitiesInstanced;	\/\/ how many shapes are created$/;"	m	class:PhysicsBase	access:protected
PhysicsBase::mSceneMgr	PhysicsBase.h	/^	Ogre::SceneManager				  * mSceneMgr;	 \/\/ ¥Ê¥¢¥”Ogre¥´µ›Ω¯¿¥µƒpSceneMgr$/;"	m	class:PhysicsBase	access:protected
PhysicsBase::mShapes	PhysicsBase.h	/^ 	std::deque< OgreBulletCollisions::CollisionShape * >  mShapes; \/\/ ŒÔ¿Ì–Œ◊¥∂”¡–$/;"	m	class:PhysicsBase	access:protected
PhysicsBase::mTerrain	PhysicsBase.h	/^	GameMap								 * mTerrain; \/\/ µÿ–Œ$/;"	m	class:PhysicsBase	access:protected
PhysicsBase::mTerrainPhysicsBody	PhysicsBase.h	/^	OgreBulletDynamics::RigidBody		 * mTerrainPhysicsBody;$/;"	m	class:PhysicsBase	access:protected
PhysicsBase::mTerrainPhysicsShape	PhysicsBase.h	/^ 	OgreBulletCollisions::CollisionShape * mTerrainPhysicsShape;$/;"	m	class:PhysicsBase	access:protected
PhysicsBase::mWorld	PhysicsBase.h	/^	OgreBulletDynamics::DynamicsWorld * mWorld;		 \/\/ OgreBullet World	$/;"	m	class:PhysicsBase	access:protected
PhysicsBase::~PhysicsBase	PhysicsBase.h	/^ 	virtual ~PhysicsBase();$/;"	p	class:PhysicsBase	access:public	signature:()
PhysicsFrameListener	PhysicsFrameListener.h	/^    PhysicsFrameListener( Ogre::SceneManager * sceneMgr, GameMap * pTerrain, Ogre::Vector3 gravityVector, Ogre::AxisAlignedBox bounds );$/;"	p	class:PhysicsFrameListener	access:public	signature:( Ogre::SceneManager * sceneMgr, GameMap * pTerrain, Ogre::Vector3 gravityVector, Ogre::AxisAlignedBox bounds )
PhysicsFrameListener	PhysicsFrameListener.h	/^class PhysicsFrameListener : public PhysicsBase$/;"	c	inherits:PhysicsBase
PhysicsFrameListener::PhysicsFrameListener	PhysicsFrameListener.h	/^    PhysicsFrameListener( Ogre::SceneManager * sceneMgr, GameMap * pTerrain, Ogre::Vector3 gravityVector, Ogre::AxisAlignedBox bounds );$/;"	p	class:PhysicsFrameListener	access:public	signature:( Ogre::SceneManager * sceneMgr, GameMap * pTerrain, Ogre::Vector3 gravityVector, Ogre::AxisAlignedBox bounds )
PhysicsFrameListener::createBox	PhysicsFrameListener.h	/^ 	void createBox( Ogre::SceneManager * pSceneMgr, Ogre::Camera * mCamera );					\/\/ Õ∂÷¿∫–◊”$/;"	p	class:PhysicsFrameListener	access:public	signature:( Ogre::SceneManager * pSceneMgr, Ogre::Camera * mCamera )
PhysicsFrameListener::createBoxShape	PhysicsFrameListener.h	/^	void createBoxShape( Ogre::Entity * entity, Ogre::Vector3 position, bool bStatic = false ); \/\/ ¥¥Ω®∫–◊”$/;"	p	class:PhysicsFrameListener	access:public	signature:( Ogre::Entity * entity, Ogre::Vector3 position, bool bStatic = false )
PhysicsFrameListener::createPhysicsScene	PhysicsFrameListener.h	/^	virtual void createPhysicsScene();		\/\/ ‘⁄µÿ–Œª˘¥°…œππΩ®≥°æ∞$/;"	p	class:PhysicsFrameListener	access:public	signature:()
PhysicsFrameListener::createPhysicsTerrain	PhysicsFrameListener.h	/^	virtual void createPhysicsTerrain();	\/\/ ππΩ®µÿ–Œ$/;"	p	class:PhysicsFrameListener	access:public	signature:()
PhysicsFrameListener::destroyPhysicsWorld	PhysicsFrameListener.h	/^	virtual void destroyPhysicsWorld();$/;"	p	class:PhysicsFrameListener	access:public	signature:()
PhysicsFrameListener::~PhysicsFrameListener	PhysicsFrameListener.h	/^ 	~PhysicsFrameListener();$/;"	p	class:PhysicsFrameListener	access:public	signature:()
Previous	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00856"><\/a>00856     <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* <a class="code" href="classTiXmlAttribute.html#a6ebbfe333fe76cd834bd6cbcca3130cf" title="Get the previous sibling attribute in the DOM. Returns null at beginning.">Previous<\/a>() {$/;"	f	class:TiXmlVisitor::TiXmlAttribute	access:public	signature:()
Previous	tinyxml/tinyxml.cpp	/^const TiXmlAttribute* TiXmlAttribute::Previous() const$/;"	f	class:TiXmlAttribute	signature:() const
Previous	tinyxml/tinyxml.h	/^	TiXmlAttribute* Previous() {$/;"	f	class:TiXmlAttribute	access:public	signature:()
Previous	tinyxml/tinyxml.h	/^	const TiXmlAttribute* Previous() const;$/;"	p	class:TiXmlAttribute	access:public	signature:() const
PreviousSibling	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00619"><\/a>00619     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#ac2cd892768726270e511b2ab32de4d10" title="Navigate to a sibling node.">PreviousSibling<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *_prev ) {$/;"	f	class:TiXmlVisitor::TiXmlNode	access:public	signature:( <span class=”>const</span> <span class=”>char</span> *_prev )
PreviousSibling	tinyxml/tinyxml.cpp	/^const TiXmlNode* TiXmlNode::PreviousSibling( const char * _value ) const$/;"	f	class:TiXmlNode	signature:( const char * _value ) const
PreviousSibling	tinyxml/tinyxml.h	/^	TiXmlNode* PreviousSibling( const char *_prev ) {$/;"	f	class:TiXmlNode	access:public	signature:( const char *_prev )
PreviousSibling	tinyxml/tinyxml.h	/^	TiXmlNode* PreviousSibling( const std::string& _value ) 			{	return PreviousSibling (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value )
PreviousSibling	tinyxml/tinyxml.h	/^	TiXmlNode* PreviousSibling()						{ return prev; }$/;"	f	class:TiXmlNode	access:public	signature:()
PreviousSibling	tinyxml/tinyxml.h	/^	const TiXmlNode* PreviousSibling( const char * ) const;$/;"	p	class:TiXmlNode	access:public	signature:( const char * ) const
PreviousSibling	tinyxml/tinyxml.h	/^	const TiXmlNode* PreviousSibling( const std::string& _value ) const	{	return PreviousSibling (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value ) const
PreviousSibling	tinyxml/tinyxml.h	/^	const TiXmlNode* PreviousSibling() const			{ return prev; }$/;"	f	class:TiXmlNode	access:public	signature:() const
Print	tinyxml/docs/classTiXmlBase-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlBase.html#a0de56b3f2ef14c65091a3b916437b512">Print<\/a>(FILE *cfile, int depth) const =0<\/td><td><a class="el" href="classTiXmlBase.html">TiXmlBase<\/a><\/td><td><code> [pure virtual]<\/code><\/td><\/tr>$/;"	p	file:	signature:(FILE *cfile, int depth) const
Print	tinyxml/docs/classTiXmlNode-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlBase.html#a0de56b3f2ef14c65091a3b916437b512">Print<\/a>(FILE *cfile, int depth) const =0<\/td><td><a class="el" href="classTiXmlBase.html">TiXmlBase<\/a><\/td><td><code> [pure virtual]<\/code><\/td><\/tr>$/;"	p	file:	signature:(FILE *cfile, int depth) const
Print	tinyxml/tinyxml.cpp	/^void TiXmlAttribute::Print( FILE* cfile, int \/*depth*\/, TIXML_STRING* str ) const$/;"	f	class:TiXmlAttribute	signature:( FILE* cfile, int , TIXML_STRING* str ) const
Print	tinyxml/tinyxml.cpp	/^void TiXmlComment::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlComment	signature:( FILE* cfile, int depth ) const
Print	tinyxml/tinyxml.cpp	/^void TiXmlDeclaration::Print( FILE* cfile, int \/*depth*\/, TIXML_STRING* str ) const$/;"	f	class:TiXmlDeclaration	signature:( FILE* cfile, int , TIXML_STRING* str ) const
Print	tinyxml/tinyxml.cpp	/^void TiXmlDocument::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlDocument	signature:( FILE* cfile, int depth ) const
Print	tinyxml/tinyxml.cpp	/^void TiXmlElement::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlElement	signature:( FILE* cfile, int depth ) const
Print	tinyxml/tinyxml.cpp	/^void TiXmlText::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlText	signature:( FILE* cfile, int depth ) const
Print	tinyxml/tinyxml.cpp	/^void TiXmlUnknown::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlUnknown	signature:( FILE* cfile, int depth ) const
Print	tinyxml/tinyxml.h	/^	virtual void Print( FILE* cfile, int depth ) const = 0;$/;"	p	class:TiXmlBase	access:public	signature:( FILE* cfile, int depth ) const
Print	tinyxml/tinyxml.h	/^	virtual void Print( FILE* cfile, int depth ) const {$/;"	f	class:TiXmlAttribute	access:public	signature:( FILE* cfile, int depth ) const
Print	tinyxml/tinyxml.h	/^	virtual void Print( FILE* cfile, int depth ) const {$/;"	f	class:TiXmlDeclaration	access:public	signature:( FILE* cfile, int depth ) const
Print	tinyxml/tinyxml.h	/^	virtual void Print( FILE* cfile, int depth ) const;$/;"	p	class:TiXmlComment	access:public	signature:( FILE* cfile, int depth ) const
Print	tinyxml/tinyxml.h	/^	virtual void Print( FILE* cfile, int depth ) const;$/;"	p	class:TiXmlElement	access:public	signature:( FILE* cfile, int depth ) const
Print	tinyxml/tinyxml.h	/^	virtual void Print( FILE* cfile, int depth ) const;$/;"	p	class:TiXmlText	access:public	signature:( FILE* cfile, int depth ) const
Print	tinyxml/tinyxml.h	/^	virtual void Print( FILE* cfile, int depth ) const;$/;"	p	class:TiXmlUnknown	access:public	signature:( FILE* cfile, int depth ) const
Print	tinyxml/tinyxml.h	/^	virtual void Print( FILE* cfile, int depth = 0 ) const;$/;"	p	class:TiXmlDocument	access:public	signature:( FILE* cfile, int depth = 0 ) const
Print	tinyxml/tinyxml.h	/^	virtual void Print( FILE* cfile, int depth, TIXML_STRING* str ) const;$/;"	p	class:TiXmlDeclaration	access:public	signature:( FILE* cfile, int depth, TIXML_STRING* str ) const
Print	tinyxml/tinyxml.h	/^	void Print( FILE* cfile, int depth, TIXML_STRING* str ) const;$/;"	p	class:TiXmlAttribute	access:public	signature:( FILE* cfile, int depth, TIXML_STRING* str ) const
Print	tinyxml/tinyxml.h	/^	void Print() const						{ Print( stdout, 0 ); }$/;"	f	class:TiXmlDocument	access:public	signature:() const
QueryDoubleAttribute	tinyxml/tinyxml.cpp	/^int TiXmlElement::QueryDoubleAttribute( const char* name, double* dval ) const$/;"	f	class:TiXmlElement	signature:( const char* name, double* dval ) const
QueryDoubleAttribute	tinyxml/tinyxml.cpp	/^int TiXmlElement::QueryDoubleAttribute( const std::string& name, double* dval ) const$/;"	f	class:TiXmlElement	signature:( const std::string& name, double* dval ) const
QueryDoubleAttribute	tinyxml/tinyxml.h	/^	int QueryDoubleAttribute( const char* name, double* _value ) const;$/;"	p	class:TiXmlElement	access:public	signature:( const char* name, double* _value ) const
QueryDoubleAttribute	tinyxml/tinyxml.h	/^	int QueryDoubleAttribute( const std::string& name, double* _value ) const;$/;"	p	class:TiXmlElement	access:public	signature:( const std::string& name, double* _value ) const
QueryDoubleValue	tinyxml/tinyxml.cpp	/^int TiXmlAttribute::QueryDoubleValue( double* dval ) const$/;"	f	class:TiXmlAttribute	signature:( double* dval ) const
QueryDoubleValue	tinyxml/tinyxml.h	/^	int QueryDoubleValue( double* _value ) const;$/;"	p	class:TiXmlAttribute	access:public	signature:( double* _value ) const
QueryFloatAttribute	tinyxml/tinyxml.h	/^	int QueryFloatAttribute( const char* name, float* _value ) const {$/;"	f	class:TiXmlElement	access:public	signature:( const char* name, float* _value ) const
QueryIntAttribute	tinyxml/tinyxml.cpp	/^int TiXmlElement::QueryIntAttribute( const char* name, int* ival ) const$/;"	f	class:TiXmlElement	signature:( const char* name, int* ival ) const
QueryIntAttribute	tinyxml/tinyxml.cpp	/^int TiXmlElement::QueryIntAttribute( const std::string& name, int* ival ) const$/;"	f	class:TiXmlElement	signature:( const std::string& name, int* ival ) const
QueryIntAttribute	tinyxml/tinyxml.h	/^	int QueryIntAttribute( const char* name, int* _value ) const;$/;"	p	class:TiXmlElement	access:public	signature:( const char* name, int* _value ) const
QueryIntAttribute	tinyxml/tinyxml.h	/^	int QueryIntAttribute( const std::string& name, int* _value ) const;$/;"	p	class:TiXmlElement	access:public	signature:( const std::string& name, int* _value ) const
QueryIntValue	tinyxml/tinyxml.cpp	/^int TiXmlAttribute::QueryIntValue( int* ival ) const$/;"	f	class:TiXmlAttribute	signature:( int* ival ) const
QueryIntValue	tinyxml/tinyxml.h	/^	int QueryIntValue( int* _value ) const;$/;"	p	class:TiXmlAttribute	access:public	signature:( int* _value ) const
QueryStringAttribute	tinyxml/tinyxml.h	/^	int QueryStringAttribute( const char* name, std::string* _value ) const {$/;"	f	class:TiXmlElement	access:public	signature:( const char* name, std::string* _value ) const
QueryValueAttribute	tinyxml/tinyxml.h	/^	int QueryValueAttribute( const std::string& name, std::string* outValue ) const$/;"	f	class:TiXmlElement	access:public	signature:( const std::string& name, std::string* outValue ) const
QueryValueAttribute	tinyxml/tinyxml.h	/^	template< typename T > int QueryValueAttribute( const std::string& name, T* outValue ) const$/;"	f	class:TiXmlElement	access:public	signature:( const std::string& name, T* outValue ) const
R	tinyxml/docs/classTiXmlText.png	/^ìRä¢‚§ü‹;Jî(Q¢DÈı¢ Å†∏)=ñ‹hü ps˚MLUm mÙ·œ•¨hµù‰®\/1ﬁHπ8‹z˝É ±íÍŸ›r/;"	v
RUN_SPEED	GraphicCharacter.h	26;"	d
ReadName	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00310"><\/a>00310     <span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* ReadName( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TIXML_STRING* name, TiXmlEncoding encoding );$/;"	p	class:TiXmlVisitor::TiXmlBase	file:	access:protected	signature:( <span class=”>const</span> <span class=”>char</span>* p, TIXML_STRING* name, TiXmlEncoding encoding )
ReadName	tinyxml/tinyxml.h	/^	static const char* ReadName( const char* p, TIXML_STRING* name, TiXmlEncoding encoding );$/;"	p	class:TiXmlBase	access:protected	signature:( const char* p, TIXML_STRING* name, TiXmlEncoding encoding )
ReadName	tinyxml/tinyxmlparser.cpp	/^const char* TiXmlBase::ReadName( const char* p, TIXML_STRING * name, TiXmlEncoding encoding )$/;"	f	class:TiXmlBase	signature:( const char* p, TIXML_STRING * name, TiXmlEncoding encoding )
ReadText	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00315"><\/a>00315     <span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* ReadText(    <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* in,             <span class="comment">\/\/ where to start<\/span>$/;"	p	class:TiXmlVisitor::TiXmlBase	file:	access:protected	signature:( <span class=”>const</span> <span class=”>char</span>* in, <span class=”> <a name=”></a>00316 TIXML_STRING* text, <span class=”> <a name=”></a>00317 <span class=”>bool</span> ignoreWhiteSpace, <span class=”> <a name=”></a>00318 <span class=”>const</span> <span class=”>char</span>* endTag, <span class=”> <a name=”></a>00319 <span class=”>bool</span> ignoreCase, <span class=”> <a name=”></a>00320 TiXmlEncoding encoding )
ReadText	tinyxml/tinyxml.h	/^	static const char* ReadText(	const char* in,				\/\/ where to start$/;"	p	class:TiXmlBase	access:protected	signature:( const char* in, TIXML_STRING* text, bool ignoreWhiteSpace, const char* endTag, bool ignoreCase, TiXmlEncoding encoding )
ReadText	tinyxml/tinyxmlparser.cpp	/^const char* TiXmlBase::ReadText(	const char* p, $/;"	f	class:TiXmlBase	signature:( const char* p, TIXML_STRING * text, bool trimWhiteSpace, const char* endTag, bool caseInsensitive, TiXmlEncoding encoding )
ReadValue	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01146"><\/a>01146     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* ReadValue( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* in, TiXmlParsingData* prevData, TiXmlEncoding encoding );$/;"	p	class:TiXmlVisitor::TiXmlElement	file:	access:protected	signature:( <span class=”>const</span> <span class=”>char</span>* in, TiXmlParsingData* prevData, TiXmlEncoding encoding )
ReadValue	tinyxml/tinyxml.h	/^	const char* ReadValue( const char* in, TiXmlParsingData* prevData, TiXmlEncoding encoding );$/;"	p	class:TiXmlElement	access:protected	signature:( const char* in, TiXmlParsingData* prevData, TiXmlEncoding encoding )
ReadValue	tinyxml/tinyxmlparser.cpp	/^const char* TiXmlElement::ReadValue( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlElement	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )
Remove	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00910"><\/a>00910     <span class="keywordtype">void<\/span> Remove( <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* attribute );$/;"	p	class:TiXmlVisitor::TiXmlAttributeSet	file:	access:public	signature:( <a class=” href=” title=”>TiXmlAttribute</a>* attribute )
Remove	tinyxml/tinyxml.cpp	/^void TiXmlAttributeSet::Remove( TiXmlAttribute* removeMe )$/;"	f	class:TiXmlAttributeSet	signature:( TiXmlAttribute* removeMe )
Remove	tinyxml/tinyxml.h	/^	void Remove( TiXmlAttribute* attribute );$/;"	p	class:TiXmlAttributeSet	access:public	signature:( TiXmlAttribute* attribute )
RemoveAttribute	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01072"><\/a>01072     <span class="keywordtype">void<\/span> RemoveAttribute( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * name );$/;"	p	class:TiXmlVisitor::TiXmlElement	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span> * name )
RemoveAttribute	tinyxml/tinyxml.cpp	/^void TiXmlElement::RemoveAttribute( const char * name )$/;"	f	class:TiXmlElement	signature:( const char * name )
RemoveAttribute	tinyxml/tinyxml.h	/^	void RemoveAttribute( const char * name );$/;"	p	class:TiXmlElement	access:public	signature:( const char * name )
RemoveAttribute	tinyxml/tinyxml.h	/^	void RemoveAttribute( const std::string& name )	{	RemoveAttribute (name.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlElement	access:public	signature:( const std::string& name )
RemoveChild	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00611"><\/a>00611     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlNode.html#ae19d8510efc90596552f4feeac9a8fbf" title="Delete a child of this node.">RemoveChild<\/a>( <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* removeThis );$/;"	p	class:TiXmlVisitor::TiXmlNode	file:	access:public	signature:( <a class=” href=” title=”>TiXmlNode</a>* removeThis )
RemoveChild	tinyxml/tinyxml.cpp	/^bool TiXmlNode::RemoveChild( TiXmlNode* removeThis )$/;"	f	class:TiXmlNode	signature:( TiXmlNode* removeThis )
RemoveChild	tinyxml/tinyxml.h	/^	bool RemoveChild( TiXmlNode* removeThis );$/;"	p	class:TiXmlNode	access:public	signature:( TiXmlNode* removeThis )
Rep	tinyxml/tinystr.h	/^	struct Rep$/;"	s	class:TiXmlString	access:private
ReplaceChild	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00608"><\/a>00608     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a0c49e739a17b9938050c22cd89617fbd" title="Replace a child of this node.">ReplaceChild<\/a>( <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* replaceThis, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; withThis );$/;"	p	class:TiXmlVisitor::TiXmlNode	file:	access:public	signature:( <a class=” href=” title=”>TiXmlNode</a>* replaceThis, <span class=”>const</span> <a class=” href=” title=”>TiXmlNode</a>&amp; withThis )
ReplaceChild	tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlNode::ReplaceChild( TiXmlNode* replaceThis, const TiXmlNode& withThis )$/;"	f	class:TiXmlNode	signature:( TiXmlNode* replaceThis, const TiXmlNode& withThis )
ReplaceChild	tinyxml/tinyxml.h	/^	TiXmlNode* ReplaceChild( TiXmlNode* replaceThis, const TiXmlNode& withThis );$/;"	p	class:TiXmlNode	access:public	signature:( TiXmlNode* replaceThis, const TiXmlNode& withThis )
RootElement	tinyxml/tinyxml.h	/^	TiXmlElement* RootElement()					{ return FirstChildElement(); }$/;"	f	class:TiXmlDocument	access:public	signature:()
RootElement	tinyxml/tinyxml.h	/^	const TiXmlElement* RootElement() const		{ return FirstChildElement(); }$/;"	f	class:TiXmlDocument	access:public	signature:() const
Row	tinyxml/docs/classTiXmlDocument.html	/^<dl class="see"><dt><b>See also:<\/b><\/dt><dd><a class="el" href="classTiXmlDocument.html#a51dac56316f89b35bdb7d0d433ba988e" title="SetTabSize() allows the error reporting functions (ErrorRow() and ErrorCol()) to...">SetTabSize<\/a>, <a class="el" href="classTiXmlBase.html#a024bceb070188df92c2a8d8852dd0853" title="Return the position, in the original source file, of this node or attribute.">Row<\/a>, <a class="el" href="classTiXmlBase.html#ab54bfb9b70fe6dd276e7b279cab7f003" title="See Row().">Column<\/a> <\/dd><\/dl>$/;"	v
Row	tinyxml/tinyxml.h	/^	int Row() const			{ return location.row + 1; }$/;"	f	class:TiXmlBase	access:public	signature:() const
SaveFile	tinyxml/docs/tutorial0.html	/^doc.SaveFile( saveFilename );  $/;"	p	file:	signature:( saveFilename )
SaveFile	tinyxml/tinyxml.cpp	/^bool TiXmlDocument::SaveFile( FILE* fp ) const$/;"	f	class:TiXmlDocument	signature:( FILE* fp ) const
SaveFile	tinyxml/tinyxml.cpp	/^bool TiXmlDocument::SaveFile( const char * filename ) const$/;"	f	class:TiXmlDocument	signature:( const char * filename ) const
SaveFile	tinyxml/tinyxml.cpp	/^bool TiXmlDocument::SaveFile() const$/;"	f	class:TiXmlDocument	signature:() const
SaveFile	tinyxml/tinyxml.h	/^	bool SaveFile( FILE* ) const;$/;"	p	class:TiXmlDocument	access:public	signature:( FILE* ) const
SaveFile	tinyxml/tinyxml.h	/^	bool SaveFile( const char * filename ) const;$/;"	p	class:TiXmlDocument	access:public	signature:( const char * filename ) const
SaveFile	tinyxml/tinyxml.h	/^	bool SaveFile( const std::string& filename ) const		\/\/\/< STL std::string version.$/;"	f	class:TiXmlDocument	access:public	signature:( const std::string& filename ) const
SaveFile	tinyxml/tinyxml.h	/^	bool SaveFile() const;$/;"	p	class:TiXmlDocument	access:public	signature:() const
SeekSeekSeek	SeekSeekSeek.h	/^    SeekSeekSeek(void);$/;"	p	class:SeekSeekSeek	access:public	signature:(void)
SeekSeekSeek	SeekSeekSeek.h	/^class SeekSeekSeek : public GameBase$/;"	c	inherits:GameBase
SeekSeekSeek::SeekSeekSeek	SeekSeekSeek.h	/^    SeekSeekSeek(void);$/;"	p	class:SeekSeekSeek	access:public	signature:(void)
SeekSeekSeek::createCamera	SeekSeekSeek.h	/^    virtual void createCamera(void);    \/\/ Camera$/;"	p	class:SeekSeekSeek	access:protected	signature:(void)
SeekSeekSeek::createEnvir	SeekSeekSeek.h	/^    virtual void createEnvir(void);     \/\/ Environment: Light, Sky, etc.$/;"	p	class:SeekSeekSeek	access:protected	signature:(void)
SeekSeekSeek::createFrameListener	SeekSeekSeek.h	/^    virtual void createFrameListener(void);$/;"	p	class:SeekSeekSeek	access:protected	signature:(void)
SeekSeekSeek::createScene	SeekSeekSeek.h	/^    virtual void createScene(void);$/;"	p	class:SeekSeekSeek	access:protected	signature:(void)
SeekSeekSeek::createViewports	SeekSeekSeek.h	/^    virtual void createViewports(void); \/\/ Viewport$/;"	p	class:SeekSeekSeek	access:protected	signature:(void)
SeekSeekSeek::destroyScene	SeekSeekSeek.h	/^    virtual void destroyScene(void);$/;"	p	class:SeekSeekSeek	access:protected	signature:(void)
SeekSeekSeek::frameRenderingQueued	SeekSeekSeek.h	/^    virtual bool frameRenderingQueued(const Ogre::FrameEvent& evt);$/;"	p	class:SeekSeekSeek	access:protected	signature:(const Ogre::FrameEvent& evt)
SeekSeekSeek::initSound	SeekSeekSeek.h	/^	void initSound(void);				\/\/ ≥ı ºªØ±≥æ∞“Ù¿÷, “Ù–ß$/;"	p	class:SeekSeekSeek	access:protected	signature:(void)
SeekSeekSeek::keyPressed	SeekSeekSeek.h	/^    virtual bool keyPressed( const OIS::KeyEvent & evt );$/;"	p	class:SeekSeekSeek	access:protected	signature:( const OIS::KeyEvent & evt )
SeekSeekSeek::keyReleased	SeekSeekSeek.h	/^    virtual bool keyReleased( const OIS::KeyEvent & evt );$/;"	p	class:SeekSeekSeek	access:protected	signature:( const OIS::KeyEvent & evt )
SeekSeekSeek::mBgFog	SeekSeekSeek.h	/^	Ogre::Real				  mBgFog;					\/\/ ±≥æ∞ŒÌ: 0 Œﬁ£¨1 ∞◊ÃÏ ∞◊ŒÌ£¨2 “πÕÌ ¿∂ŒÌ$/;"	m	class:SeekSeekSeek	access:protected
SeekSeekSeek::mBgMusicID	SeekSeekSeek.h	/^	Ogre::Real				  mBgMusicID;				\/\/ µ±«∞≤•∑≈µƒ±≥æ∞“Ù¿÷$/;"	m	class:SeekSeekSeek	access:protected
SeekSeekSeek::mCameraGoal	SeekSeekSeek.h	/^	SceneNode * mCameraGoal;	\/\/ œ‡ª˙ƒø±Í$/;"	m	class:SeekSeekSeek	access:protected
SeekSeekSeek::mCameraNode	SeekSeekSeek.h	/^	SceneNode * mCameraNode;	\/\/  µº  Camera Ω⁄µ„$/;"	m	class:SeekSeekSeek	access:protected
SeekSeekSeek::mCameraPivot	SeekSeekSeek.h	/^	SceneNode * mCameraPivot;	\/\/ ¿ÎΩ«…´“ª∂®æ‡¿Î(ºÁ∞Ú∏ΩΩ¸)µƒµÿ∑Ω | ”√ªßŒª÷√$/;"	m	class:SeekSeekSeek	access:protected
SeekSeekSeek::mCharacter	SeekSeekSeek.h	/^	Character				* mCharacter;				\/\/ Ω«…´∂‘œÛ$/;"	m	class:SeekSeekSeek	access:protected
SeekSeekSeek::mCharacterInputListener	SeekSeekSeek.h	/^	CharacterInputListener	* mCharacterInputListener;	\/\/ Ω«…´∂Ø◊˜ ‰»Îº‡Ã˝$/;"	m	class:SeekSeekSeek	access:protected
SeekSeekSeek::mCharacterState	SeekSeekSeek.h	/^	CharacterState			* mCharacterState;			\/\/ ‘À∂Ø◊¥Ã¨ºØ$/;"	m	class:SeekSeekSeek	access:protected
SeekSeekSeek::mDebugMode	SeekSeekSeek.h	/^	bool mDebugMode;									\/\/ µ˜ ‘ƒ£ Ω«–ªª$/;"	m	class:SeekSeekSeek	access:protected
SeekSeekSeek::mMap	SeekSeekSeek.h	/^	GameMap					* mMap;						\/\/ ”Œœ∑µÿÕº$/;"	m	class:SeekSeekSeek	access:protected
SeekSeekSeek::mPhysicsFrameListener	SeekSeekSeek.h	/^	PhysicsFrameListener	* mPhysicsFrameListener;	\/\/ ŒÔ¿Ì ¬º˛º‡Ã˝$/;"	m	class:SeekSeekSeek	access:protected
SeekSeekSeek::mPivotPitch	SeekSeekSeek.h	/^	Real mPivotPitch;		\/\/ …œœ¬œﬁ÷∆¿€º”∂» ˝$/;"	m	class:SeekSeekSeek	access:protected
SeekSeekSeek::mSoundMgr	SeekSeekSeek.h	/^	OgreAL::SoundManager	* mSoundMgr;				\/\/ …˘“Ù$/;"	m	class:SeekSeekSeek	access:protected
SeekSeekSeek::mViewTurningDown	SeekSeekSeek.h	/^	bool mViewTurningDown;	\/\/ œÚœ¬$/;"	m	class:SeekSeekSeek	access:protected
SeekSeekSeek::mViewTurningLeft	SeekSeekSeek.h	/^	bool mViewTurningLeft;	\/\/ œÚ◊Û–˝◊™ ”Ω«$/;"	m	class:SeekSeekSeek	access:protected
SeekSeekSeek::mViewTurningRight	SeekSeekSeek.h	/^	bool mViewTurningRight;	\/\/ œÚ”“$/;"	m	class:SeekSeekSeek	access:protected
SeekSeekSeek::mViewTurningUp	SeekSeekSeek.h	/^	bool mViewTurningUp;	\/\/ œÚ…œ–˝◊™ ”Ω«$/;"	m	class:SeekSeekSeek	access:protected
SeekSeekSeek::mViewZoomingIn	SeekSeekSeek.h	/^	bool mViewZoomingIn;	\/\/ ÀıΩ¸Ω«…´ ”Ω«$/;"	m	class:SeekSeekSeek	access:protected
SeekSeekSeek::mViewZoomingOut	SeekSeekSeek.h	/^	bool mViewZoomingOut;	\/\/ ‘∂¿ÎΩ«…´ ”Ω«$/;"	m	class:SeekSeekSeek	access:protected
SeekSeekSeek::mouseMoved	SeekSeekSeek.h	/^    virtual bool mouseMoved( const OIS::MouseEvent & evt );$/;"	p	class:SeekSeekSeek	access:protected	signature:( const OIS::MouseEvent & evt )
SeekSeekSeek::mousePressed	SeekSeekSeek.h	/^    virtual bool mousePressed( const OIS::MouseEvent & evt, OIS::MouseButtonID id );$/;"	p	class:SeekSeekSeek	access:protected	signature:( const OIS::MouseEvent & evt, OIS::MouseButtonID id )
SeekSeekSeek::mouseReleased	SeekSeekSeek.h	/^    virtual bool mouseReleased( const OIS::MouseEvent & evt, OIS::MouseButtonID id );$/;"	p	class:SeekSeekSeek	access:protected	signature:( const OIS::MouseEvent & evt, OIS::MouseButtonID id )
SeekSeekSeek::updateCamera	SeekSeekSeek.h	/^	void updateCamera( Real deltaTime );										\/\/ ∏¸–¬ Camera$/;"	p	class:SeekSeekSeek	access:protected	signature:( Real deltaTime )
SeekSeekSeek::updateCameraGoal	SeekSeekSeek.h	/^	void updateCameraGoal( Real deltaYaw, Real deltaPitch, Real deltaZoom );	\/\/ ∏¸–¬ Camera ƒø±Í∑ΩœÚ | ∏¸–¬ ”Ω«$/;"	p	class:SeekSeekSeek	access:protected	signature:( Real deltaYaw, Real deltaPitch, Real deltaZoom )
SeekSeekSeek::~SeekSeekSeek	SeekSeekSeek.h	/^    virtual ~SeekSeekSeek(void);$/;"	p	class:SeekSeekSeek	access:public	signature:(void)
SetAttribute	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01043"><\/a>01043     <span class="keywordtype">void<\/span> SetAttribute( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* name, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _value );$/;"	p	class:TiXmlVisitor::TiXmlElement	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* name, <span class=”>const</span> <span class=”>char</span> * _value )
SetAttribute	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01063"><\/a>01063     <span class="keywordtype">void<\/span> SetAttribute( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * name, <span class="keywordtype">int<\/span> value );$/;"	p	class:TiXmlVisitor::TiXmlElement	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span> * name, <span class=”>int</span> value )
SetAttribute	tinyxml/tinyxml.cpp	/^void TiXmlElement::SetAttribute( const char * cname, const char * cvalue )$/;"	f	class:TiXmlElement	signature:( const char * cname, const char * cvalue )
SetAttribute	tinyxml/tinyxml.cpp	/^void TiXmlElement::SetAttribute( const char * name, int val )$/;"	f	class:TiXmlElement	signature:( const char * name, int val )
SetAttribute	tinyxml/tinyxml.cpp	/^void TiXmlElement::SetAttribute( const std::string& _name, const std::string& _value )$/;"	f	class:TiXmlElement	signature:( const std::string& _name, const std::string& _value )
SetAttribute	tinyxml/tinyxml.cpp	/^void TiXmlElement::SetAttribute( const std::string& name, int val )$/;"	f	class:TiXmlElement	signature:( const std::string& name, int val )
SetAttribute	tinyxml/tinyxml.h	/^	void SetAttribute( const char * name, int value );$/;"	p	class:TiXmlElement	access:public	signature:( const char * name, int value )
SetAttribute	tinyxml/tinyxml.h	/^	void SetAttribute( const char* name, const char * _value );$/;"	p	class:TiXmlElement	access:public	signature:( const char* name, const char * _value )
SetAttribute	tinyxml/tinyxml.h	/^	void SetAttribute( const std::string& name, const std::string& _value );$/;"	p	class:TiXmlElement	access:public	signature:( const std::string& name, const std::string& _value )
SetAttribute	tinyxml/tinyxml.h	/^	void SetAttribute( const std::string& name, int _value );$/;"	p	class:TiXmlElement	access:public	signature:( const std::string& name, int _value )
SetCDATA	tinyxml/tinyxml.h	/^	void SetCDATA( bool _cdata )	{ cdata = _cdata; }$/;"	f	class:TiXmlText	access:public	signature:( bool _cdata )
SetCondenseWhiteSpace	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00221"><\/a><a class="code" href="classTiXmlBase.html#a0f799ec645bfb8d8a969e83478f379c1">00221<\/a>     <span class="keyword">static<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlBase.html#a0f799ec645bfb8d8a969e83478f379c1" title="The world does not agree on whether white space should be kept or not.">SetCondenseWhiteSpace<\/a>( <span class="keywordtype">bool<\/span> condense )      { condenseWhiteSpace = condense; }$/;"	f	class:TiXmlVisitor::TiXmlBase	access:public	signature:( <span class=”>bool</span> condense )
SetCondenseWhiteSpace	tinyxml/tinyxml.h	/^	static void SetCondenseWhiteSpace( bool condense )		{ condenseWhiteSpace = condense; }$/;"	f	class:TiXmlBase	access:public	signature:( bool condense )
SetDocument	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00877"><\/a>00877     <span class="keywordtype">void<\/span> SetDocument( <a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a>* doc )  { document = doc; }$/;"	f	class:TiXmlVisitor::TiXmlAttribute	access:public	signature:( <a class=” href=” title=”>TiXmlDocument</a>* doc )
SetDocument	tinyxml/tinyxml.h	/^	void SetDocument( TiXmlDocument* doc )	{ document = doc; }$/;"	f	class:TiXmlAttribute	access:public	signature:( TiXmlDocument* doc )
SetDoubleAttribute	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01068"><\/a>01068     <span class="keywordtype">void<\/span> SetDoubleAttribute( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * name, <span class="keywordtype">double<\/span> value );$/;"	p	class:TiXmlVisitor::TiXmlElement	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span> * name, <span class=”>double</span> value )
SetDoubleAttribute	tinyxml/tinyxml.cpp	/^void TiXmlElement::SetDoubleAttribute( const char * name, double val )$/;"	f	class:TiXmlElement	signature:( const char * name, double val )
SetDoubleAttribute	tinyxml/tinyxml.cpp	/^void TiXmlElement::SetDoubleAttribute( const std::string& name, double val )$/;"	f	class:TiXmlElement	signature:( const std::string& name, double val )
SetDoubleAttribute	tinyxml/tinyxml.h	/^	void SetDoubleAttribute( const char * name, double value );$/;"	p	class:TiXmlElement	access:public	signature:( const char * name, double value )
SetDoubleAttribute	tinyxml/tinyxml.h	/^	void SetDoubleAttribute( const std::string& name, double value );$/;"	p	class:TiXmlElement	access:public	signature:( const std::string& name, double value )
SetDoubleValue	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00839"><\/a>00839     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlAttribute.html#a0316da31373496c4368ad549bf711394" title="Set the value from a double.">SetDoubleValue<\/a>( <span class="keywordtype">double<\/span> _value );                               $/;"	p	class:TiXmlVisitor::TiXmlAttribute	file:	access:public	signature:( <span class=”>double</span> _value )
SetDoubleValue	tinyxml/tinyxml.cpp	/^void TiXmlAttribute::SetDoubleValue( double _value )$/;"	f	class:TiXmlAttribute	signature:( double _value )
SetDoubleValue	tinyxml/tinyxml.h	/^	void SetDoubleValue( double _value );								\/\/\/< Set the value from a double.$/;"	p	class:TiXmlAttribute	access:public	signature:( double _value )
SetError	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01523"><\/a>01523     <span class="keywordtype">void<\/span> SetError( <span class="keywordtype">int<\/span> err, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* errorLocation, TiXmlParsingData* prevData, TiXmlEncoding encoding );$/;"	p	class:TiXmlVisitor::TiXmlDocument	file:	access:public	signature:( <span class=”>int</span> err, <span class=”>const</span> <span class=”>char</span>* errorLocation, TiXmlParsingData* prevData, TiXmlEncoding encoding )
SetError	tinyxml/tinyxml.h	/^	void SetError( int err, const char* errorLocation, TiXmlParsingData* prevData, TiXmlEncoding encoding );$/;"	p	class:TiXmlDocument	access:public	signature:( int err, const char* errorLocation, TiXmlParsingData* prevData, TiXmlEncoding encoding )
SetError	tinyxml/tinyxmlparser.cpp	/^void TiXmlDocument::SetError( int err, const char* pError, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlDocument	signature:( int err, const char* pError, TiXmlParsingData* data, TiXmlEncoding encoding )
SetIndent	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01750"><\/a><a class="code" href="classTiXmlPrinter.html#a213377a4070c7e625bae59716b089e5e">01750<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlPrinter.html#a213377a4070c7e625bae59716b089e5e" title="Set the indent characters for printing.">SetIndent<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _indent )           { indent = _indent ? _indent : <span class="stringliteral">&quot;&quot;<\/span> ; }$/;"	f	class:TiXmlVisitor::TiXmlPrinter	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* _indent )
SetIndent	tinyxml/tinyxml.h	/^	void SetIndent( const char* _indent )			{ indent = _indent ? _indent : "" ; }$/;"	f	class:TiXmlPrinter	access:public	signature:( const char* _indent )
SetIntValue	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00838"><\/a>00838     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlAttribute.html#a7e065df640116a62ea4f4b7da5449cc8" title="Set the value from an integer.">SetIntValue<\/a>( <span class="keywordtype">int<\/span> _value );                                     $/;"	p	class:TiXmlVisitor::TiXmlAttribute	file:	access:public	signature:( <span class=”>int</span> _value )
SetIntValue	tinyxml/tinyxml.cpp	/^void TiXmlAttribute::SetIntValue( int _value )$/;"	f	class:TiXmlAttribute	signature:( int _value )
SetIntValue	tinyxml/tinyxml.h	/^	void SetIntValue( int _value );										\/\/\/< Set the value from an integer.$/;"	p	class:TiXmlAttribute	access:public	signature:( int _value )
SetLineBreak	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01757"><\/a><a class="code" href="classTiXmlPrinter.html#a4be1e37e69e3858c59635aa947174fe6">01757<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlPrinter.html#a4be1e37e69e3858c59635aa947174fe6" title="Set the line breaking string.">SetLineBreak<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _lineBreak )     { lineBreak = _lineBreak ? _lineBreak : <span class="stringliteral">&quot;&quot;<\/span>; }$/;"	f	class:TiXmlVisitor::TiXmlPrinter	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* _lineBreak )
SetLineBreak	tinyxml/tinyxml.h	/^	void SetLineBreak( const char* _lineBreak )		{ lineBreak = _lineBreak ? _lineBreak : ""; }$/;"	f	class:TiXmlPrinter	access:public	signature:( const char* _lineBreak )
SetName	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00835"><\/a><a class="code" href="classTiXmlAttribute.html#ab7fa3d21ff8d7c5764cf9af15b667a99">00835<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlAttribute.html#ab7fa3d21ff8d7c5764cf9af15b667a99" title="Set the name of this attribute.">SetName<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _name )   { name = _name; }               $/;"	f	class:TiXmlVisitor::TiXmlAttribute	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* _name )
SetName	tinyxml/tinyxml.h	/^	void SetName( const char* _name )	{ name = _name; }				\/\/\/< Set the name of this attribute.$/;"	f	class:TiXmlAttribute	access:public	signature:( const char* _name )
SetName	tinyxml/tinyxml.h	/^	void SetName( const std::string& _name )	{ name = _name; }	$/;"	f	class:TiXmlAttribute	access:public	signature:( const std::string& _name )
SetStreamPrinting	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01764"><\/a><a class="code" href="classTiXmlPrinter.html#ab23a90629e374cb1cadca090468bbd19">01764<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlPrinter.html#ab23a90629e374cb1cadca090468bbd19" title="Switch over to &amp;quot;stream printing&amp;quot; which is the most dense formatting without...">SetStreamPrinting<\/a>()                        { indent = <span class="stringliteral">&quot;&quot;<\/span>;$/;"	f	class:TiXmlVisitor::TiXmlPrinter	access:public	signature:()
SetStreamPrinting	tinyxml/tinyxml.h	/^	void SetStreamPrinting()						{ indent = "";$/;"	f	class:TiXmlPrinter	access:public	signature:()
SetTabSize	tinyxml/tinyxml.h	/^	void SetTabSize( int _tabsize )		{ tabsize = _tabsize; }$/;"	f	class:TiXmlDocument	access:public	signature:( int _tabsize )
SetUserData	tinyxml/tinyxml.h	/^	void  SetUserData( void* user )			{ userData = user; }	\/\/\/< Set a pointer to arbitrary user data.$/;"	f	class:TiXmlBase	access:public	signature:( void* user )
SetValue	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00836"><\/a><a class="code" href="classTiXmlAttribute.html#a2dae44178f668b3cb48101be4f2236a0">00836<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlAttribute.html#a2dae44178f668b3cb48101be4f2236a0" title="Set the value.">SetValue<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _value ) { value = _value; }             $/;"	f	class:TiXmlVisitor::TiXmlAttribute	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* _value )
SetValue	tinyxml/tinyxml.h	/^	void SetValue( const char* _value )	{ value = _value; }				\/\/\/< Set the value.$/;"	f	class:TiXmlAttribute	access:public	signature:( const char* _value )
SetValue	tinyxml/tinyxml.h	/^	void SetValue( const std::string& _value )	{ value = _value; }$/;"	f	class:TiXmlAttribute	access:public	signature:( const std::string& _value )
SetValue	tinyxml/tinyxml.h	/^	void SetValue( const std::string& _value )	{ value = _value; }$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value )
SetValue	tinyxml/tinyxml.h	/^	void SetValue(const char * _value) { value = _value;}$/;"	f	class:TiXmlNode	access:public	signature:(const char * _value)
Size	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01770"><\/a><a class="code" href="classTiXmlPrinter.html#ad01375ae9199bd2f48252eaddce3039d">01770<\/a>     <span class="keywordtype">size_t<\/span> <a class="code" href="classTiXmlPrinter.html#ad01375ae9199bd2f48252eaddce3039d" title="Return the length of the result string.">Size<\/a>()                                   { <span class="keywordflow">return<\/span> buffer.size(); }$/;"	f	class:TiXmlVisitor::TiXmlPrinter	access:public	signature:()
Size	tinyxml/tinyxml.h	/^	size_t Size()									{ return buffer.size(); }$/;"	f	class:TiXmlPrinter	access:public	signature:()
SkipWhiteSpace	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00288"><\/a>00288     <span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* SkipWhiteSpace( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>*, TiXmlEncoding encoding );$/;"	p	class:TiXmlVisitor::TiXmlBase	file:	access:protected	signature:( <span class=”>const</span> <span class=”>char</span>*, TiXmlEncoding encoding )
SkipWhiteSpace	tinyxml/tinyxml.h	/^	static const char* SkipWhiteSpace( const char*, TiXmlEncoding encoding );$/;"	p	class:TiXmlBase	access:protected	signature:( const char*, TiXmlEncoding encoding )
SkipWhiteSpace	tinyxml/tinyxmlparser.cpp	/^const char* TiXmlBase::SkipWhiteSpace( const char* p, TiXmlEncoding encoding )$/;"	f	class:TiXmlBase	signature:( const char* p, TiXmlEncoding encoding )
Stamp	tinyxml/tinyxmlparser.cpp	/^	void Stamp( const char* now, TiXmlEncoding encoding );$/;"	p	class:TiXmlParsingData	file:	access:public	signature:( const char* now, TiXmlEncoding encoding )
Stamp	tinyxml/tinyxmlparser.cpp	/^void TiXmlParsingData::Stamp( const char* now, TiXmlEncoding encoding )$/;"	f	class:TiXmlParsingData	signature:( const char* now, TiXmlEncoding encoding )
Standalone	tinyxml/tinyxml.h	/^	const char *Standalone() const		{ return standalone.c_str (); }$/;"	f	class:TiXmlDeclaration	access:public	signature:() const
Str	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01774"><\/a><a class="code" href="classTiXmlPrinter.html#a3bd4daf44309b41f5813a833caa0d1c9">01774<\/a> <span class="preprocessor">    const std::string&amp; Str()                        { return buffer; }<\/span>$/;"	f	class:TiXmlVisitor::TiXmlPrinter	access:public	signature:()
Str	tinyxml/tinyxml.h	/^	const std::string& Str()						{ return buffer; }$/;"	f	class:TiXmlPrinter	access:public	signature:()
StreamIn	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00749"><\/a>00749     <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream* in, TIXML_STRING* tag ) = 0;$/;"	p	class:TiXmlVisitor::TiXmlNode	file:	access:protected	signature:( std::istream* in, TIXML_STRING* tag )
StreamIn	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01140"><\/a>01140 <span class="preprocessor"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	p	class:TiXmlVisitor::TiXmlElement	file:	access:protected	signature:( std::istream * in, TIXML_STRING * tag )
StreamIn	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01191"><\/a>01191 <span class="preprocessor"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	p	class:TiXmlVisitor::TiXmlComment	file:	access:protected	signature:( std::istream * in, TIXML_STRING * tag )
StreamIn	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01257"><\/a>01257 <span class="preprocessor"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	p	class:TiXmlVisitor::TiXmlText	file:	access:protected	signature:( std::istream * in, TIXML_STRING * tag )
StreamIn	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01329"><\/a>01329 <span class="preprocessor"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	p	class:TiXmlVisitor::TiXmlDeclaration	file:	access:protected	signature:( std::istream * in, TIXML_STRING * tag )
StreamIn	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01374"><\/a>01374 <span class="preprocessor"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	p	class:TiXmlVisitor::TiXmlUnknown	file:	access:protected	signature:( std::istream * in, TIXML_STRING * tag )
StreamIn	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01536"><\/a>01536 <span class="preprocessor"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	p	class:TiXmlVisitor::TiXmlDocument	file:	access:protected	signature:( std::istream * in, TIXML_STRING * tag )
StreamIn	tinyxml/tinyxml.h	/^	virtual void StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	p	class:TiXmlComment	access:protected	signature:( std::istream * in, TIXML_STRING * tag )
StreamIn	tinyxml/tinyxml.h	/^	virtual void StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	p	class:TiXmlDeclaration	access:protected	signature:( std::istream * in, TIXML_STRING * tag )
StreamIn	tinyxml/tinyxml.h	/^	virtual void StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	p	class:TiXmlDocument	access:protected	signature:( std::istream * in, TIXML_STRING * tag )
StreamIn	tinyxml/tinyxml.h	/^	virtual void StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	p	class:TiXmlElement	access:protected	signature:( std::istream * in, TIXML_STRING * tag )
StreamIn	tinyxml/tinyxml.h	/^	virtual void StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	p	class:TiXmlText	access:protected	signature:( std::istream * in, TIXML_STRING * tag )
StreamIn	tinyxml/tinyxml.h	/^	virtual void StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	p	class:TiXmlUnknown	access:protected	signature:( std::istream * in, TIXML_STRING * tag )
StreamIn	tinyxml/tinyxml.h	/^	virtual void StreamIn( std::istream* in, TIXML_STRING* tag ) = 0;$/;"	p	class:TiXmlNode	access:protected	signature:( std::istream* in, TIXML_STRING* tag )
StreamIn	tinyxml/tinyxmlparser.cpp	/^void TiXmlComment::StreamIn( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlComment	signature:( std::istream * in, TIXML_STRING * tag )
StreamIn	tinyxml/tinyxmlparser.cpp	/^void TiXmlDeclaration::StreamIn( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlDeclaration	signature:( std::istream * in, TIXML_STRING * tag )
StreamIn	tinyxml/tinyxmlparser.cpp	/^void TiXmlDocument::StreamIn( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlDocument	signature:( std::istream * in, TIXML_STRING * tag )
StreamIn	tinyxml/tinyxmlparser.cpp	/^void TiXmlElement::StreamIn (std::istream * in, TIXML_STRING * tag)$/;"	f	class:TiXmlElement	signature:(std::istream * in, TIXML_STRING * tag)
StreamIn	tinyxml/tinyxmlparser.cpp	/^void TiXmlText::StreamIn( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlText	signature:( std::istream * in, TIXML_STRING * tag )
StreamIn	tinyxml/tinyxmlparser.cpp	/^void TiXmlUnknown::StreamIn( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlUnknown	signature:( std::istream * in, TIXML_STRING * tag )
StreamTo	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00303"><\/a>00303     <span class="keyword">static<\/span> <span class="keywordtype">bool<\/span> StreamTo( std::istream * in, <span class="keywordtype">int<\/span> character, TIXML_STRING * tag );$/;"	p	class:TiXmlVisitor::TiXmlBase	file:	access:protected	signature:( std::istream * in, <span class=”>int</span> character, TIXML_STRING * tag )
StreamTo	tinyxml/tinyxml.h	/^	static bool StreamTo( std::istream * in, int character, TIXML_STRING * tag );$/;"	p	class:TiXmlBase	access:protected	signature:( std::istream * in, int character, TIXML_STRING * tag )
StreamTo	tinyxml/tinyxmlparser.cpp	/^\/*static*\/ bool TiXmlBase::StreamTo( std::istream * in, int character, TIXML_STRING * tag )$/;"	f	class:TiXmlBase	signature:( std::istream * in, int character, TIXML_STRING * tag )
StreamWhiteSpace	tinyxml/tinyxml.h	/^	static bool	StreamWhiteSpace( std::istream * in, TIXML_STRING * tag );$/;"	p	class:TiXmlBase	access:protected	signature:( std::istream * in, TIXML_STRING * tag )
StreamWhiteSpace	tinyxml/tinyxmlparser.cpp	/^\/*static*\/ bool TiXmlBase::StreamWhiteSpace( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlBase	signature:( std::istream * in, TIXML_STRING * tag )
StringEqual	tinyxml/tinyxml.h	/^	static bool StringEqual(	const char* p,$/;"	p	class:TiXmlBase	access:protected	signature:( const char* p, const char* endTag, bool ignoreCase, TiXmlEncoding encoding )
StringEqual	tinyxml/tinyxmlparser.cpp	/^bool TiXmlBase::StringEqual( const char* p,$/;"	f	class:TiXmlBase	signature:( const char* p, const char* tag, bool ignoreCase, TiXmlEncoding encoding )
TINYXML_COMMENT	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00466"><\/a>00466         TINYXML_COMMENT,$/;"	e	enum:TiXmlVisitor::TiXmlNode::NodeType	file:
TINYXML_COMMENT	tinyxml/tinyxml.h	/^		TINYXML_COMMENT,$/;"	e	enum:TiXmlNode::NodeType
TINYXML_DECLARATION	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00469"><\/a>00469         TINYXML_DECLARATION,$/;"	e	enum:TiXmlVisitor::TiXmlNode::NodeType	file:
TINYXML_DECLARATION	tinyxml/tinyxml.h	/^		TINYXML_DECLARATION,$/;"	e	enum:TiXmlNode::NodeType
TINYXML_DOCUMENT	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00464"><\/a>00464         TINYXML_DOCUMENT,$/;"	e	enum:TiXmlVisitor::TiXmlNode::NodeType	file:
TINYXML_DOCUMENT	tinyxml/tinyxml.h	/^		TINYXML_DOCUMENT,$/;"	e	enum:TiXmlNode::NodeType
TINYXML_ELEMENT	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00465"><\/a>00465         TINYXML_ELEMENT,$/;"	e	enum:TiXmlVisitor::TiXmlNode::NodeType	file:
TINYXML_ELEMENT	tinyxml/tinyxml.h	/^		TINYXML_ELEMENT,$/;"	e	enum:TiXmlNode::NodeType
TINYXML_INCLUDED	tinyxml/tinyxml.h	27;"	d
TINYXML_TEXT	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00468"><\/a>00468         TINYXML_TEXT,$/;"	e	enum:TiXmlVisitor::TiXmlNode::NodeType	file:
TINYXML_TEXT	tinyxml/tinyxml.h	/^		TINYXML_TEXT,$/;"	e	enum:TiXmlNode::NodeType
TINYXML_TYPECOUNT	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00470"><\/a>00470         TINYXML_TYPECOUNT$/;"	e	enum:TiXmlVisitor::TiXmlNode::NodeType	file:
TINYXML_TYPECOUNT	tinyxml/tinyxml.h	/^		TINYXML_TYPECOUNT$/;"	e	enum:TiXmlNode::NodeType
TINYXML_UNKNOWN	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00467"><\/a>00467         TINYXML_UNKNOWN,$/;"	e	enum:TiXmlVisitor::TiXmlNode::NodeType	file:
TINYXML_UNKNOWN	tinyxml/tinyxml.h	/^		TINYXML_UNKNOWN,$/;"	e	enum:TiXmlNode::NodeType
TIXML_DEFAULT_ENCODING	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00170"><\/a>00170 <span class="keyword">const<\/span> TiXmlEncoding TIXML_DEFAULT_ENCODING = TIXML_ENCODING_UNKNOWN;$/;"	m	class:TiXmlVisitor	file:	access:public
TIXML_DEFAULT_ENCODING	tinyxml/tinyxml.h	/^const TiXmlEncoding TIXML_DEFAULT_ENCODING = TIXML_ENCODING_UNKNOWN;$/;"	v
TIXML_ENCODING_LEGACY	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00167"><\/a>00167     TIXML_ENCODING_LEGACY$/;"	e	enum:TiXmlVisitor::TiXmlEncoding	file:
TIXML_ENCODING_LEGACY	tinyxml/tinyxml.h	/^	TIXML_ENCODING_LEGACY$/;"	e	enum:TiXmlEncoding
TIXML_ENCODING_UNKNOWN	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00165"><\/a>00165     TIXML_ENCODING_UNKNOWN,$/;"	e	enum:TiXmlVisitor::TiXmlEncoding	file:
TIXML_ENCODING_UNKNOWN	tinyxml/tinyxml.h	/^	TIXML_ENCODING_UNKNOWN,$/;"	e	enum:TiXmlEncoding
TIXML_ENCODING_UTF8	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00166"><\/a>00166     TIXML_ENCODING_UTF8,$/;"	e	enum:TiXmlVisitor::TiXmlEncoding	file:
TIXML_ENCODING_UTF8	tinyxml/tinyxml.h	/^	TIXML_ENCODING_UTF8,$/;"	e	enum:TiXmlEncoding
TIXML_ERROR	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00267"><\/a>00267         TIXML_ERROR,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TIXML_ERROR	tinyxml/tinyxml.h	/^		TIXML_ERROR,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_DOCUMENT_EMPTY	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00278"><\/a>00278         TIXML_ERROR_DOCUMENT_EMPTY,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TIXML_ERROR_DOCUMENT_EMPTY	tinyxml/tinyxml.h	/^		TIXML_ERROR_DOCUMENT_EMPTY,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_DOCUMENT_TOP_ONLY	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00281"><\/a>00281         TIXML_ERROR_DOCUMENT_TOP_ONLY,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TIXML_ERROR_DOCUMENT_TOP_ONLY	tinyxml/tinyxml.h	/^		TIXML_ERROR_DOCUMENT_TOP_ONLY,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_EMBEDDED_NULL	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00279"><\/a>00279         TIXML_ERROR_EMBEDDED_NULL,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TIXML_ERROR_EMBEDDED_NULL	tinyxml/tinyxml.h	/^		TIXML_ERROR_EMBEDDED_NULL,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_FAILED_TO_READ_ELEMENT_NAME	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00270"><\/a>00270         TIXML_ERROR_FAILED_TO_READ_ELEMENT_NAME,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TIXML_ERROR_FAILED_TO_READ_ELEMENT_NAME	tinyxml/tinyxml.h	/^		TIXML_ERROR_FAILED_TO_READ_ELEMENT_NAME,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_OPENING_FILE	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00268"><\/a>00268         TIXML_ERROR_OPENING_FILE,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TIXML_ERROR_OPENING_FILE	tinyxml/tinyxml.h	/^		TIXML_ERROR_OPENING_FILE,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_PARSING_CDATA	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00280"><\/a>00280         TIXML_ERROR_PARSING_CDATA,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TIXML_ERROR_PARSING_CDATA	tinyxml/tinyxml.h	/^		TIXML_ERROR_PARSING_CDATA,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_PARSING_COMMENT	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00276"><\/a>00276         TIXML_ERROR_PARSING_COMMENT,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TIXML_ERROR_PARSING_COMMENT	tinyxml/tinyxml.h	/^		TIXML_ERROR_PARSING_COMMENT,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_PARSING_DECLARATION	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00277"><\/a>00277         TIXML_ERROR_PARSING_DECLARATION,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TIXML_ERROR_PARSING_DECLARATION	tinyxml/tinyxml.h	/^		TIXML_ERROR_PARSING_DECLARATION,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_PARSING_ELEMENT	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00269"><\/a>00269         TIXML_ERROR_PARSING_ELEMENT,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TIXML_ERROR_PARSING_ELEMENT	tinyxml/tinyxml.h	/^		TIXML_ERROR_PARSING_ELEMENT,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_PARSING_EMPTY	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00273"><\/a>00273         TIXML_ERROR_PARSING_EMPTY,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TIXML_ERROR_PARSING_EMPTY	tinyxml/tinyxml.h	/^		TIXML_ERROR_PARSING_EMPTY,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_PARSING_UNKNOWN	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00275"><\/a>00275         TIXML_ERROR_PARSING_UNKNOWN,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TIXML_ERROR_PARSING_UNKNOWN	tinyxml/tinyxml.h	/^		TIXML_ERROR_PARSING_UNKNOWN,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_READING_ATTRIBUTES	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00272"><\/a>00272         TIXML_ERROR_READING_ATTRIBUTES,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TIXML_ERROR_READING_ATTRIBUTES	tinyxml/tinyxml.h	/^		TIXML_ERROR_READING_ATTRIBUTES,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_READING_ELEMENT_VALUE	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00271"><\/a>00271         TIXML_ERROR_READING_ELEMENT_VALUE,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TIXML_ERROR_READING_ELEMENT_VALUE	tinyxml/tinyxml.h	/^		TIXML_ERROR_READING_ELEMENT_VALUE,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_READING_END_TAG	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00274"><\/a>00274         TIXML_ERROR_READING_END_TAG,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TIXML_ERROR_READING_END_TAG	tinyxml/tinyxml.h	/^		TIXML_ERROR_READING_END_TAG,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_STRING_COUNT	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00283"><\/a>00283         TIXML_ERROR_STRING_COUNT$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TIXML_ERROR_STRING_COUNT	tinyxml/tinyxml.h	/^		TIXML_ERROR_STRING_COUNT$/;"	e	enum:TiXmlBase::__anon4
TIXML_EXPLICIT	tinyxml/tinystr.h	51;"	d
TIXML_EXPLICIT	tinyxml/tinystr.h	54;"	d
TIXML_EXPLICIT	tinyxml/tinystr.h	56;"	d
TIXML_LOG	tinyxml/tinyxmlparser.cpp	34;"	d	file:
TIXML_LOG	tinyxml/tinyxmlparser.cpp	36;"	d	file:
TIXML_MAJOR_VERSION	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00092"><\/a>00092 <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> TIXML_MAJOR_VERSION = 2;$/;"	v
TIXML_MAJOR_VERSION	tinyxml/tinyxml.h	/^const int TIXML_MAJOR_VERSION = 2;$/;"	v
TIXML_MINOR_VERSION	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00093"><\/a>00093 <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> TIXML_MINOR_VERSION = 6;$/;"	v
TIXML_MINOR_VERSION	tinyxml/tinyxml.h	/^const int TIXML_MINOR_VERSION = 6;$/;"	v
TIXML_NO_ATTRIBUTE	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00157"><\/a>00157     TIXML_NO_ATTRIBUTE,$/;"	e	enum:TiXmlVisitor::__anon6	file:
TIXML_NO_ATTRIBUTE	tinyxml/tinyxml.h	/^	TIXML_NO_ATTRIBUTE,$/;"	e	enum:__anon3
TIXML_NO_ERROR	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00266"><\/a>00266         TIXML_NO_ERROR = 0,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TIXML_NO_ERROR	tinyxml/tinyxml.h	/^		TIXML_NO_ERROR = 0,$/;"	e	enum:TiXmlBase::__anon4
TIXML_PATCH_VERSION	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00094"><\/a>00094 <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> TIXML_PATCH_VERSION = 1;$/;"	v
TIXML_PATCH_VERSION	tinyxml/tinyxml.h	/^const int TIXML_PATCH_VERSION = 1;$/;"	v
TIXML_SAFE	tinyxml/tinyxml.h	60;"	d
TIXML_SNPRINTF	tinyxml/tinyxml.h	65;"	d
TIXML_SNPRINTF	tinyxml/tinyxml.h	70;"	d
TIXML_SNPRINTF	tinyxml/tinyxml.h	75;"	d
TIXML_SNPRINTF	tinyxml/tinyxml.h	78;"	d
TIXML_SSCANF	tinyxml/tinyxml.h	66;"	d
TIXML_SSCANF	tinyxml/tinyxml.h	71;"	d
TIXML_SSCANF	tinyxml/tinyxml.h	76;"	d
TIXML_SSCANF	tinyxml/tinyxml.h	79;"	d
TIXML_STRING	tinyxml/tinyxml.h	50;"	d
TIXML_STRING	tinyxml/tinyxml.h	53;"	d
TIXML_STRING_INCLUDED	tinyxml/tinystr.h	40;"	d
TIXML_SUCCESS	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00156"><\/a>00156     TIXML_SUCCESS,$/;"	e	enum:TiXmlVisitor::__anon6	file:
TIXML_SUCCESS	tinyxml/tinyxml.h	/^	TIXML_SUCCESS,$/;"	e	enum:__anon3
TIXML_UTF_LEAD_0	tinyxml/tinyxmlparser.cpp	/^const unsigned char TIXML_UTF_LEAD_0 = 0xefU;$/;"	v
TIXML_UTF_LEAD_1	tinyxml/tinyxmlparser.cpp	/^const unsigned char TIXML_UTF_LEAD_1 = 0xbbU;$/;"	v
TIXML_UTF_LEAD_2	tinyxml/tinyxmlparser.cpp	/^const unsigned char TIXML_UTF_LEAD_2 = 0xbfU;$/;"	v
TIXML_WRONG_TYPE	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00158"><\/a>00158     TIXML_WRONG_TYPE$/;"	e	enum:TiXmlVisitor::__anon6	file:
TIXML_WRONG_TYPE	tinyxml/tinyxml.h	/^	TIXML_WRONG_TYPE$/;"	e	enum:__anon3
TURN_SPEED	GraphicCharacter.h	27;"	d
TabSize	tinyxml/tinyxml.h	/^	int TabSize() const	{ return tabsize; }$/;"	f	class:TiXmlDocument	access:public	signature:() const
Text	tinyxml/tinyxml.h	/^	TiXmlText* Text() const			{ return ToText(); }$/;"	f	class:TiXmlHandle	access:public	signature:() const
TiXmlAttribute	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00779"><\/a><a class="code" href="classTiXmlAttribute.html">00779<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlBase.html" title="TiXmlBase is a base class for every class in TinyXml.">TiXmlBase<\/a>$/;"	c	class:TiXmlVisitor	file:	inherits:TiXmlBase	access:public
TiXmlAttribute	tinyxml/tinyxml.h	/^	TiXmlAttribute( const TiXmlAttribute& );				\/\/ not implemented.$/;"	p	class:TiXmlAttribute	access:private	signature:( const TiXmlAttribute& )
TiXmlAttribute	tinyxml/tinyxml.h	/^	TiXmlAttribute( const char * _name, const char * _value )$/;"	f	class:TiXmlAttribute	access:public	signature:( const char * _name, const char * _value )
TiXmlAttribute	tinyxml/tinyxml.h	/^	TiXmlAttribute( const std::string& _name, const std::string& _value )$/;"	f	class:TiXmlAttribute	access:public	signature:( const std::string& _name, const std::string& _value )
TiXmlAttribute	tinyxml/tinyxml.h	/^	TiXmlAttribute() : TiXmlBase()$/;"	f	class:TiXmlAttribute	access:public	signature:()
TiXmlAttribute	tinyxml/tinyxml.h	/^class TiXmlAttribute : public TiXmlBase$/;"	c	inherits:TiXmlBase
TiXmlAttribute::DoubleValue	tinyxml/tinyxml.cpp	/^double  TiXmlAttribute::DoubleValue() const$/;"	f	class:TiXmlAttribute	signature:() const
TiXmlAttribute::DoubleValue	tinyxml/tinyxml.h	/^	double			DoubleValue() const;								\/\/\/< Return the value of this attribute, converted to a double.$/;"	p	class:TiXmlAttribute	access:public	signature:() const
TiXmlAttribute::IntValue	tinyxml/tinyxml.cpp	/^int TiXmlAttribute::IntValue() const$/;"	f	class:TiXmlAttribute	signature:() const
TiXmlAttribute::IntValue	tinyxml/tinyxml.h	/^	int				IntValue() const;									\/\/\/< Return the value of this attribute, converted to an integer.$/;"	p	class:TiXmlAttribute	access:public	signature:() const
TiXmlAttribute::Name	tinyxml/tinyxml.h	/^	const char*		Name()  const		{ return name.c_str(); }		\/\/\/< Return the name of this attribute.$/;"	f	class:TiXmlAttribute	access:public	signature:() const
TiXmlAttribute::NameTStr	tinyxml/tinyxml.h	/^	const TIXML_STRING& NameTStr() const { return name; }$/;"	f	class:TiXmlAttribute	access:public	signature:() const
TiXmlAttribute::Next	tinyxml/tinyxml.cpp	/^const TiXmlAttribute* TiXmlAttribute::Next() const$/;"	f	class:TiXmlAttribute	signature:() const
TiXmlAttribute::Next	tinyxml/tinyxml.h	/^	TiXmlAttribute* Next() {$/;"	f	class:TiXmlAttribute	access:public	signature:()
TiXmlAttribute::Next	tinyxml/tinyxml.h	/^	const TiXmlAttribute* Next() const;$/;"	p	class:TiXmlAttribute	access:public	signature:() const
TiXmlAttribute::Parse	tinyxml/tinyxml.h	/^	virtual const char* Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	p	class:TiXmlAttribute	access:public	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )
TiXmlAttribute::Parse	tinyxml/tinyxmlparser.cpp	/^const char* TiXmlAttribute::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlAttribute	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )
TiXmlAttribute::Previous	tinyxml/tinyxml.cpp	/^const TiXmlAttribute* TiXmlAttribute::Previous() const$/;"	f	class:TiXmlAttribute	signature:() const
TiXmlAttribute::Previous	tinyxml/tinyxml.h	/^	TiXmlAttribute* Previous() {$/;"	f	class:TiXmlAttribute	access:public	signature:()
TiXmlAttribute::Previous	tinyxml/tinyxml.h	/^	const TiXmlAttribute* Previous() const;$/;"	p	class:TiXmlAttribute	access:public	signature:() const
TiXmlAttribute::Print	tinyxml/tinyxml.cpp	/^void TiXmlAttribute::Print( FILE* cfile, int \/*depth*\/, TIXML_STRING* str ) const$/;"	f	class:TiXmlAttribute	signature:( FILE* cfile, int , TIXML_STRING* str ) const
TiXmlAttribute::Print	tinyxml/tinyxml.h	/^	virtual void Print( FILE* cfile, int depth ) const {$/;"	f	class:TiXmlAttribute	access:public	signature:( FILE* cfile, int depth ) const
TiXmlAttribute::Print	tinyxml/tinyxml.h	/^	void Print( FILE* cfile, int depth, TIXML_STRING* str ) const;$/;"	p	class:TiXmlAttribute	access:public	signature:( FILE* cfile, int depth, TIXML_STRING* str ) const
TiXmlAttribute::QueryDoubleValue	tinyxml/tinyxml.cpp	/^int TiXmlAttribute::QueryDoubleValue( double* dval ) const$/;"	f	class:TiXmlAttribute	signature:( double* dval ) const
TiXmlAttribute::QueryDoubleValue	tinyxml/tinyxml.h	/^	int QueryDoubleValue( double* _value ) const;$/;"	p	class:TiXmlAttribute	access:public	signature:( double* _value ) const
TiXmlAttribute::QueryIntValue	tinyxml/tinyxml.cpp	/^int TiXmlAttribute::QueryIntValue( int* ival ) const$/;"	f	class:TiXmlAttribute	signature:( int* ival ) const
TiXmlAttribute::QueryIntValue	tinyxml/tinyxml.h	/^	int QueryIntValue( int* _value ) const;$/;"	p	class:TiXmlAttribute	access:public	signature:( int* _value ) const
TiXmlAttribute::SetDocument	tinyxml/tinyxml.h	/^	void SetDocument( TiXmlDocument* doc )	{ document = doc; }$/;"	f	class:TiXmlAttribute	access:public	signature:( TiXmlDocument* doc )
TiXmlAttribute::SetDoubleValue	tinyxml/tinyxml.cpp	/^void TiXmlAttribute::SetDoubleValue( double _value )$/;"	f	class:TiXmlAttribute	signature:( double _value )
TiXmlAttribute::SetDoubleValue	tinyxml/tinyxml.h	/^	void SetDoubleValue( double _value );								\/\/\/< Set the value from a double.$/;"	p	class:TiXmlAttribute	access:public	signature:( double _value )
TiXmlAttribute::SetIntValue	tinyxml/tinyxml.cpp	/^void TiXmlAttribute::SetIntValue( int _value )$/;"	f	class:TiXmlAttribute	signature:( int _value )
TiXmlAttribute::SetIntValue	tinyxml/tinyxml.h	/^	void SetIntValue( int _value );										\/\/\/< Set the value from an integer.$/;"	p	class:TiXmlAttribute	access:public	signature:( int _value )
TiXmlAttribute::SetName	tinyxml/tinyxml.h	/^	void SetName( const char* _name )	{ name = _name; }				\/\/\/< Set the name of this attribute.$/;"	f	class:TiXmlAttribute	access:public	signature:( const char* _name )
TiXmlAttribute::SetName	tinyxml/tinyxml.h	/^	void SetName( const std::string& _name )	{ name = _name; }	$/;"	f	class:TiXmlAttribute	access:public	signature:( const std::string& _name )
TiXmlAttribute::SetValue	tinyxml/tinyxml.h	/^	void SetValue( const char* _value )	{ value = _value; }				\/\/\/< Set the value.$/;"	f	class:TiXmlAttribute	access:public	signature:( const char* _value )
TiXmlAttribute::SetValue	tinyxml/tinyxml.h	/^	void SetValue( const std::string& _value )	{ value = _value; }$/;"	f	class:TiXmlAttribute	access:public	signature:( const std::string& _value )
TiXmlAttribute::TiXmlAttribute	tinyxml/tinyxml.h	/^	TiXmlAttribute( const TiXmlAttribute& );				\/\/ not implemented.$/;"	p	class:TiXmlAttribute	access:private	signature:( const TiXmlAttribute& )
TiXmlAttribute::TiXmlAttribute	tinyxml/tinyxml.h	/^	TiXmlAttribute( const char * _name, const char * _value )$/;"	f	class:TiXmlAttribute	access:public	signature:( const char * _name, const char * _value )
TiXmlAttribute::TiXmlAttribute	tinyxml/tinyxml.h	/^	TiXmlAttribute( const std::string& _name, const std::string& _value )$/;"	f	class:TiXmlAttribute	access:public	signature:( const std::string& _name, const std::string& _value )
TiXmlAttribute::TiXmlAttribute	tinyxml/tinyxml.h	/^	TiXmlAttribute() : TiXmlBase()$/;"	f	class:TiXmlAttribute	access:public	signature:()
TiXmlAttribute::Value	tinyxml/tinyxml.h	/^	const char*		Value() const		{ return value.c_str(); }		\/\/\/< Return the value of this attribute.$/;"	f	class:TiXmlAttribute	access:public	signature:() const
TiXmlAttribute::ValueStr	tinyxml/tinyxml.h	/^	const std::string& ValueStr() const	{ return value; }				\/\/\/< Return the value of this attribute.$/;"	f	class:TiXmlAttribute	access:public	signature:() const
TiXmlAttribute::document	tinyxml/tinyxml.h	/^	TiXmlDocument*	document;	\/\/ A pointer back to a document, for error reporting.$/;"	m	class:TiXmlAttribute	access:private
TiXmlAttribute::name	tinyxml/tinyxml.h	/^	TIXML_STRING name;$/;"	m	class:TiXmlAttribute	access:private
TiXmlAttribute::next	tinyxml/tinyxml.h	/^	TiXmlAttribute*	next;$/;"	m	class:TiXmlAttribute	access:private
TiXmlAttribute::operator <	tinyxml/tinyxml.h	/^	bool operator<( const TiXmlAttribute& rhs )	 const { return name < rhs.name; }$/;"	f	class:TiXmlAttribute	access:public	signature:( const TiXmlAttribute& rhs ) const
TiXmlAttribute::operator =	tinyxml/tinyxml.h	/^	void operator=( const TiXmlAttribute& base );	\/\/ not allowed.$/;"	p	class:TiXmlAttribute	access:private	signature:( const TiXmlAttribute& base )
TiXmlAttribute::operator ==	tinyxml/tinyxml.h	/^	bool operator==( const TiXmlAttribute& rhs ) const { return rhs.name == name; }$/;"	f	class:TiXmlAttribute	access:public	signature:( const TiXmlAttribute& rhs ) const
TiXmlAttribute::operator >	tinyxml/tinyxml.h	/^	bool operator>( const TiXmlAttribute& rhs )  const { return name > rhs.name; }$/;"	f	class:TiXmlAttribute	access:public	signature:( const TiXmlAttribute& rhs ) const
TiXmlAttribute::prev	tinyxml/tinyxml.h	/^	TiXmlAttribute*	prev;$/;"	m	class:TiXmlAttribute	access:private
TiXmlAttribute::value	tinyxml/tinyxml.h	/^	TIXML_STRING value;$/;"	m	class:TiXmlAttribute	access:private
TiXmlAttributeSet	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00903"><\/a>00903 <span class="keyword">class <\/span>TiXmlAttributeSet$/;"	c	class:TiXmlVisitor	file:	access:public
TiXmlAttributeSet	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00906"><\/a>00906     TiXmlAttributeSet();$/;"	p	class:TiXmlVisitor::TiXmlAttributeSet	file:	access:public	signature:()
TiXmlAttributeSet	tinyxml/tinyxml.cpp	/^TiXmlAttributeSet::TiXmlAttributeSet()$/;"	f	class:TiXmlAttributeSet	signature:()
TiXmlAttributeSet	tinyxml/tinyxml.h	/^	TiXmlAttributeSet( const TiXmlAttributeSet& );	\/\/ not allowed$/;"	p	class:TiXmlAttributeSet	access:private	signature:( const TiXmlAttributeSet& )
TiXmlAttributeSet	tinyxml/tinyxml.h	/^	TiXmlAttributeSet();$/;"	p	class:TiXmlAttributeSet	access:public	signature:()
TiXmlAttributeSet	tinyxml/tinyxml.h	/^class TiXmlAttributeSet$/;"	c
TiXmlAttributeSet::Add	tinyxml/tinyxml.cpp	/^void TiXmlAttributeSet::Add( TiXmlAttribute* addMe )$/;"	f	class:TiXmlAttributeSet	signature:( TiXmlAttribute* addMe )
TiXmlAttributeSet::Add	tinyxml/tinyxml.h	/^	void Add( TiXmlAttribute* attribute );$/;"	p	class:TiXmlAttributeSet	access:public	signature:( TiXmlAttribute* attribute )
TiXmlAttributeSet::Find	tinyxml/tinyxml.cpp	/^TiXmlAttribute* TiXmlAttributeSet::Find( const char* name ) const$/;"	f	class:TiXmlAttributeSet	signature:( const char* name ) const
TiXmlAttributeSet::Find	tinyxml/tinyxml.cpp	/^TiXmlAttribute* TiXmlAttributeSet::Find( const std::string& name ) const$/;"	f	class:TiXmlAttributeSet	signature:( const std::string& name ) const
TiXmlAttributeSet::Find	tinyxml/tinyxml.h	/^	TiXmlAttribute*	Find( const char* _name ) const;$/;"	p	class:TiXmlAttributeSet	access:public	signature:( const char* _name ) const
TiXmlAttributeSet::Find	tinyxml/tinyxml.h	/^	TiXmlAttribute*	Find( const std::string& _name ) const;$/;"	p	class:TiXmlAttributeSet	access:public	signature:( const std::string& _name ) const
TiXmlAttributeSet::FindOrCreate	tinyxml/tinyxml.cpp	/^TiXmlAttribute* TiXmlAttributeSet::FindOrCreate( const char* _name )$/;"	f	class:TiXmlAttributeSet	signature:( const char* _name )
TiXmlAttributeSet::FindOrCreate	tinyxml/tinyxml.cpp	/^TiXmlAttribute* TiXmlAttributeSet::FindOrCreate( const std::string& _name )$/;"	f	class:TiXmlAttributeSet	signature:( const std::string& _name )
TiXmlAttributeSet::FindOrCreate	tinyxml/tinyxml.h	/^	TiXmlAttribute* FindOrCreate( const char* _name );$/;"	p	class:TiXmlAttributeSet	access:public	signature:( const char* _name )
TiXmlAttributeSet::FindOrCreate	tinyxml/tinyxml.h	/^	TiXmlAttribute* FindOrCreate( const std::string& _name );$/;"	p	class:TiXmlAttributeSet	access:public	signature:( const std::string& _name )
TiXmlAttributeSet::First	tinyxml/tinyxml.h	/^	TiXmlAttribute* First()					{ return ( sentinel.next == &sentinel ) ? 0 : sentinel.next; }$/;"	f	class:TiXmlAttributeSet	access:public	signature:()
TiXmlAttributeSet::First	tinyxml/tinyxml.h	/^	const TiXmlAttribute* First()	const	{ return ( sentinel.next == &sentinel ) ? 0 : sentinel.next; }$/;"	f	class:TiXmlAttributeSet	access:public	signature:() const
TiXmlAttributeSet::Last	tinyxml/tinyxml.h	/^	TiXmlAttribute* Last()					{ return ( sentinel.prev == &sentinel ) ? 0 : sentinel.prev; }$/;"	f	class:TiXmlAttributeSet	access:public	signature:()
TiXmlAttributeSet::Last	tinyxml/tinyxml.h	/^	const TiXmlAttribute* Last() const		{ return ( sentinel.prev == &sentinel ) ? 0 : sentinel.prev; }$/;"	f	class:TiXmlAttributeSet	access:public	signature:() const
TiXmlAttributeSet::Remove	tinyxml/tinyxml.cpp	/^void TiXmlAttributeSet::Remove( TiXmlAttribute* removeMe )$/;"	f	class:TiXmlAttributeSet	signature:( TiXmlAttribute* removeMe )
TiXmlAttributeSet::Remove	tinyxml/tinyxml.h	/^	void Remove( TiXmlAttribute* attribute );$/;"	p	class:TiXmlAttributeSet	access:public	signature:( TiXmlAttribute* attribute )
TiXmlAttributeSet::TiXmlAttributeSet	tinyxml/tinyxml.cpp	/^TiXmlAttributeSet::TiXmlAttributeSet()$/;"	f	class:TiXmlAttributeSet	signature:()
TiXmlAttributeSet::TiXmlAttributeSet	tinyxml/tinyxml.h	/^	TiXmlAttributeSet( const TiXmlAttributeSet& );	\/\/ not allowed$/;"	p	class:TiXmlAttributeSet	access:private	signature:( const TiXmlAttributeSet& )
TiXmlAttributeSet::TiXmlAttributeSet	tinyxml/tinyxml.h	/^	TiXmlAttributeSet();$/;"	p	class:TiXmlAttributeSet	access:public	signature:()
TiXmlAttributeSet::operator =	tinyxml/tinyxml.h	/^	void operator=( const TiXmlAttributeSet& );	\/\/ not allowed (as TiXmlAttribute)$/;"	p	class:TiXmlAttributeSet	access:private	signature:( const TiXmlAttributeSet& )
TiXmlAttributeSet::sentinel	tinyxml/tinyxml.h	/^	TiXmlAttribute sentinel;$/;"	m	class:TiXmlAttributeSet	access:private
TiXmlAttributeSet::~TiXmlAttributeSet	tinyxml/tinyxml.cpp	/^TiXmlAttributeSet::~TiXmlAttributeSet()$/;"	f	class:TiXmlAttributeSet	signature:()
TiXmlAttributeSet::~TiXmlAttributeSet	tinyxml/tinyxml.h	/^	~TiXmlAttributeSet();$/;"	p	class:TiXmlAttributeSet	access:public	signature:()
TiXmlBase	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00194"><\/a><a class="code" href="classTiXmlBase.html">00194<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlBase.html" title="TiXmlBase is a base class for every class in TinyXml.">TiXmlBase<\/a>$/;"	c	class:TiXmlVisitor	file:	access:public
TiXmlBase	tinyxml/tinyxml.h	/^	TiXmlBase( const TiXmlBase& );				\/\/ not implemented.$/;"	p	class:TiXmlBase	access:private	signature:( const TiXmlBase& )
TiXmlBase	tinyxml/tinyxml.h	/^	TiXmlBase()	:	userData(0)		{}$/;"	f	class:TiXmlBase	access:public	signature:()
TiXmlBase	tinyxml/tinyxml.h	/^class TiXmlBase$/;"	c
TiXmlBase::Column	tinyxml/tinyxml.h	/^	int Column() const		{ return location.col + 1; }	\/\/\/< See Row()$/;"	f	class:TiXmlBase	access:public	signature:() const
TiXmlBase::ConvertUTF32ToUTF8	tinyxml/tinyxml.h	/^	static void ConvertUTF32ToUTF8( unsigned long input, char* output, int* length );$/;"	p	class:TiXmlBase	access:protected	signature:( unsigned long input, char* output, int* length )
TiXmlBase::ConvertUTF32ToUTF8	tinyxml/tinyxmlparser.cpp	/^void TiXmlBase::ConvertUTF32ToUTF8( unsigned long input, char* output, int* length )$/;"	f	class:TiXmlBase	signature:( unsigned long input, char* output, int* length )
TiXmlBase::EncodeString	tinyxml/tinyxml.cpp	/^void TiXmlBase::EncodeString( const TIXML_STRING& str, TIXML_STRING* outString )$/;"	f	class:TiXmlBase	signature:( const TIXML_STRING& str, TIXML_STRING* outString )
TiXmlBase::EncodeString	tinyxml/tinyxml.h	/^	static void EncodeString( const TIXML_STRING& str, TIXML_STRING* out );$/;"	p	class:TiXmlBase	access:public	signature:( const TIXML_STRING& str, TIXML_STRING* out )
TiXmlBase::Entity	tinyxml/tinyxml.h	/^	struct Entity$/;"	s	class:TiXmlBase	access:private
TiXmlBase::Entity::chr	tinyxml/tinyxml.h	/^		char		    chr;$/;"	m	struct:TiXmlBase::Entity	access:public
TiXmlBase::Entity::str	tinyxml/tinyxml.h	/^		const char*     str;$/;"	m	struct:TiXmlBase::Entity	access:public
TiXmlBase::Entity::strLength	tinyxml/tinyxml.h	/^		unsigned int	strLength;$/;"	m	struct:TiXmlBase::Entity	access:public
TiXmlBase::GetChar	tinyxml/tinyxml.h	/^	inline static const char* GetChar( const char* p, char* _value, int* length, TiXmlEncoding encoding )$/;"	f	class:TiXmlBase	access:protected	signature:( const char* p, char* _value, int* length, TiXmlEncoding encoding )
TiXmlBase::GetEntity	tinyxml/tinyxml.h	/^	static const char* GetEntity( const char* in, char* value, int* length, TiXmlEncoding encoding );$/;"	p	class:TiXmlBase	access:protected	signature:( const char* in, char* value, int* length, TiXmlEncoding encoding )
TiXmlBase::GetEntity	tinyxml/tinyxmlparser.cpp	/^const char* TiXmlBase::GetEntity( const char* p, char* value, int* length, TiXmlEncoding encoding )$/;"	f	class:TiXmlBase	signature:( const char* p, char* value, int* length, TiXmlEncoding encoding )
TiXmlBase::GetUserData	tinyxml/tinyxml.h	/^	const void* GetUserData() const 		{ return userData; }	\/\/\/< Get a pointer to arbitrary user data.$/;"	f	class:TiXmlBase	access:public	signature:() const
TiXmlBase::GetUserData	tinyxml/tinyxml.h	/^	void* GetUserData()						{ return userData; }	\/\/\/< Get a pointer to arbitrary user data.$/;"	f	class:TiXmlBase	access:public	signature:()
TiXmlBase::IsAlpha	tinyxml/tinyxml.h	/^	static int IsAlpha( unsigned char anyByte, TiXmlEncoding encoding );$/;"	p	class:TiXmlBase	access:protected	signature:( unsigned char anyByte, TiXmlEncoding encoding )
TiXmlBase::IsAlpha	tinyxml/tinyxmlparser.cpp	/^\/*static*\/ int TiXmlBase::IsAlpha( unsigned char anyByte, TiXmlEncoding \/*encoding*\/ )$/;"	f	class:TiXmlBase	signature:( unsigned char anyByte, TiXmlEncoding )
TiXmlBase::IsAlphaNum	tinyxml/tinyxml.h	/^	static int IsAlphaNum( unsigned char anyByte, TiXmlEncoding encoding );$/;"	p	class:TiXmlBase	access:protected	signature:( unsigned char anyByte, TiXmlEncoding encoding )
TiXmlBase::IsAlphaNum	tinyxml/tinyxmlparser.cpp	/^\/*static*\/ int TiXmlBase::IsAlphaNum( unsigned char anyByte, TiXmlEncoding \/*encoding*\/ )$/;"	f	class:TiXmlBase	signature:( unsigned char anyByte, TiXmlEncoding )
TiXmlBase::IsWhiteSpace	tinyxml/tinyxml.h	/^	inline static bool IsWhiteSpace( char c )		$/;"	f	class:TiXmlBase	access:protected	signature:( char c )
TiXmlBase::IsWhiteSpace	tinyxml/tinyxml.h	/^	inline static bool IsWhiteSpace( int c )$/;"	f	class:TiXmlBase	access:protected	signature:( int c )
TiXmlBase::IsWhiteSpaceCondensed	tinyxml/tinyxml.h	/^	static bool IsWhiteSpaceCondensed()						{ return condenseWhiteSpace; }$/;"	f	class:TiXmlBase	access:public	signature:()
TiXmlBase::MAX_ENTITY_LENGTH	tinyxml/tinyxml.h	/^		MAX_ENTITY_LENGTH = 6$/;"	e	enum:TiXmlBase::__anon5
TiXmlBase::NUM_ENTITY	tinyxml/tinyxml.h	/^		NUM_ENTITY = 5,$/;"	e	enum:TiXmlBase::__anon5
TiXmlBase::Parse	tinyxml/tinyxml.h	/^	virtual const char* Parse(	const char* p, $/;"	p	class:TiXmlBase	access:public	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )
TiXmlBase::Print	tinyxml/tinyxml.h	/^	virtual void Print( FILE* cfile, int depth ) const = 0;$/;"	p	class:TiXmlBase	access:public	signature:( FILE* cfile, int depth ) const
TiXmlBase::ReadName	tinyxml/tinyxml.h	/^	static const char* ReadName( const char* p, TIXML_STRING* name, TiXmlEncoding encoding );$/;"	p	class:TiXmlBase	access:protected	signature:( const char* p, TIXML_STRING* name, TiXmlEncoding encoding )
TiXmlBase::ReadName	tinyxml/tinyxmlparser.cpp	/^const char* TiXmlBase::ReadName( const char* p, TIXML_STRING * name, TiXmlEncoding encoding )$/;"	f	class:TiXmlBase	signature:( const char* p, TIXML_STRING * name, TiXmlEncoding encoding )
TiXmlBase::ReadText	tinyxml/tinyxml.h	/^	static const char* ReadText(	const char* in,				\/\/ where to start$/;"	p	class:TiXmlBase	access:protected	signature:( const char* in, TIXML_STRING* text, bool ignoreWhiteSpace, const char* endTag, bool ignoreCase, TiXmlEncoding encoding )
TiXmlBase::ReadText	tinyxml/tinyxmlparser.cpp	/^const char* TiXmlBase::ReadText(	const char* p, $/;"	f	class:TiXmlBase	signature:( const char* p, TIXML_STRING * text, bool trimWhiteSpace, const char* endTag, bool caseInsensitive, TiXmlEncoding encoding )
TiXmlBase::Row	tinyxml/tinyxml.h	/^	int Row() const			{ return location.row + 1; }$/;"	f	class:TiXmlBase	access:public	signature:() const
TiXmlBase::SetCondenseWhiteSpace	tinyxml/tinyxml.h	/^	static void SetCondenseWhiteSpace( bool condense )		{ condenseWhiteSpace = condense; }$/;"	f	class:TiXmlBase	access:public	signature:( bool condense )
TiXmlBase::SetUserData	tinyxml/tinyxml.h	/^	void  SetUserData( void* user )			{ userData = user; }	\/\/\/< Set a pointer to arbitrary user data.$/;"	f	class:TiXmlBase	access:public	signature:( void* user )
TiXmlBase::SkipWhiteSpace	tinyxml/tinyxml.h	/^	static const char* SkipWhiteSpace( const char*, TiXmlEncoding encoding );$/;"	p	class:TiXmlBase	access:protected	signature:( const char*, TiXmlEncoding encoding )
TiXmlBase::SkipWhiteSpace	tinyxml/tinyxmlparser.cpp	/^const char* TiXmlBase::SkipWhiteSpace( const char* p, TiXmlEncoding encoding )$/;"	f	class:TiXmlBase	signature:( const char* p, TiXmlEncoding encoding )
TiXmlBase::StreamTo	tinyxml/tinyxml.h	/^	static bool StreamTo( std::istream * in, int character, TIXML_STRING * tag );$/;"	p	class:TiXmlBase	access:protected	signature:( std::istream * in, int character, TIXML_STRING * tag )
TiXmlBase::StreamTo	tinyxml/tinyxmlparser.cpp	/^\/*static*\/ bool TiXmlBase::StreamTo( std::istream * in, int character, TIXML_STRING * tag )$/;"	f	class:TiXmlBase	signature:( std::istream * in, int character, TIXML_STRING * tag )
TiXmlBase::StreamWhiteSpace	tinyxml/tinyxml.h	/^	static bool	StreamWhiteSpace( std::istream * in, TIXML_STRING * tag );$/;"	p	class:TiXmlBase	access:protected	signature:( std::istream * in, TIXML_STRING * tag )
TiXmlBase::StreamWhiteSpace	tinyxml/tinyxmlparser.cpp	/^\/*static*\/ bool TiXmlBase::StreamWhiteSpace( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlBase	signature:( std::istream * in, TIXML_STRING * tag )
TiXmlBase::StringEqual	tinyxml/tinyxml.h	/^	static bool StringEqual(	const char* p,$/;"	p	class:TiXmlBase	access:protected	signature:( const char* p, const char* endTag, bool ignoreCase, TiXmlEncoding encoding )
TiXmlBase::StringEqual	tinyxml/tinyxmlparser.cpp	/^bool TiXmlBase::StringEqual( const char* p,$/;"	f	class:TiXmlBase	signature:( const char* p, const char* tag, bool ignoreCase, TiXmlEncoding encoding )
TiXmlBase::TIXML_ERROR	tinyxml/tinyxml.h	/^		TIXML_ERROR,$/;"	e	enum:TiXmlBase::__anon4
TiXmlBase::TIXML_ERROR_DOCUMENT_EMPTY	tinyxml/tinyxml.h	/^		TIXML_ERROR_DOCUMENT_EMPTY,$/;"	e	enum:TiXmlBase::__anon4
TiXmlBase::TIXML_ERROR_DOCUMENT_TOP_ONLY	tinyxml/tinyxml.h	/^		TIXML_ERROR_DOCUMENT_TOP_ONLY,$/;"	e	enum:TiXmlBase::__anon4
TiXmlBase::TIXML_ERROR_EMBEDDED_NULL	tinyxml/tinyxml.h	/^		TIXML_ERROR_EMBEDDED_NULL,$/;"	e	enum:TiXmlBase::__anon4
TiXmlBase::TIXML_ERROR_FAILED_TO_READ_ELEMENT_NAME	tinyxml/tinyxml.h	/^		TIXML_ERROR_FAILED_TO_READ_ELEMENT_NAME,$/;"	e	enum:TiXmlBase::__anon4
TiXmlBase::TIXML_ERROR_OPENING_FILE	tinyxml/tinyxml.h	/^		TIXML_ERROR_OPENING_FILE,$/;"	e	enum:TiXmlBase::__anon4
TiXmlBase::TIXML_ERROR_PARSING_CDATA	tinyxml/tinyxml.h	/^		TIXML_ERROR_PARSING_CDATA,$/;"	e	enum:TiXmlBase::__anon4
TiXmlBase::TIXML_ERROR_PARSING_COMMENT	tinyxml/tinyxml.h	/^		TIXML_ERROR_PARSING_COMMENT,$/;"	e	enum:TiXmlBase::__anon4
TiXmlBase::TIXML_ERROR_PARSING_DECLARATION	tinyxml/tinyxml.h	/^		TIXML_ERROR_PARSING_DECLARATION,$/;"	e	enum:TiXmlBase::__anon4
TiXmlBase::TIXML_ERROR_PARSING_ELEMENT	tinyxml/tinyxml.h	/^		TIXML_ERROR_PARSING_ELEMENT,$/;"	e	enum:TiXmlBase::__anon4
TiXmlBase::TIXML_ERROR_PARSING_EMPTY	tinyxml/tinyxml.h	/^		TIXML_ERROR_PARSING_EMPTY,$/;"	e	enum:TiXmlBase::__anon4
TiXmlBase::TIXML_ERROR_PARSING_UNKNOWN	tinyxml/tinyxml.h	/^		TIXML_ERROR_PARSING_UNKNOWN,$/;"	e	enum:TiXmlBase::__anon4
TiXmlBase::TIXML_ERROR_READING_ATTRIBUTES	tinyxml/tinyxml.h	/^		TIXML_ERROR_READING_ATTRIBUTES,$/;"	e	enum:TiXmlBase::__anon4
TiXmlBase::TIXML_ERROR_READING_ELEMENT_VALUE	tinyxml/tinyxml.h	/^		TIXML_ERROR_READING_ELEMENT_VALUE,$/;"	e	enum:TiXmlBase::__anon4
TiXmlBase::TIXML_ERROR_READING_END_TAG	tinyxml/tinyxml.h	/^		TIXML_ERROR_READING_END_TAG,$/;"	e	enum:TiXmlBase::__anon4
TiXmlBase::TIXML_ERROR_STRING_COUNT	tinyxml/tinyxml.h	/^		TIXML_ERROR_STRING_COUNT$/;"	e	enum:TiXmlBase::__anon4
TiXmlBase::TIXML_NO_ERROR	tinyxml/tinyxml.h	/^		TIXML_NO_ERROR = 0,$/;"	e	enum:TiXmlBase::__anon4
TiXmlBase::TiXmlBase	tinyxml/tinyxml.h	/^	TiXmlBase( const TiXmlBase& );				\/\/ not implemented.$/;"	p	class:TiXmlBase	access:private	signature:( const TiXmlBase& )
TiXmlBase::TiXmlBase	tinyxml/tinyxml.h	/^	TiXmlBase()	:	userData(0)		{}$/;"	f	class:TiXmlBase	access:public	signature:()
TiXmlBase::ToLower	tinyxml/tinyxml.h	/^	inline static int ToLower( int v, TiXmlEncoding encoding )$/;"	f	class:TiXmlBase	access:protected	signature:( int v, TiXmlEncoding encoding )
TiXmlBase::condenseWhiteSpace	tinyxml/tinyxml.cpp	/^bool TiXmlBase::condenseWhiteSpace = true;$/;"	m	class:TiXmlBase	file:
TiXmlBase::condenseWhiteSpace	tinyxml/tinyxml.h	/^	static bool condenseWhiteSpace;$/;"	m	class:TiXmlBase	access:private
TiXmlBase::entity	tinyxml/tinyxml.h	/^	static Entity entity[ NUM_ENTITY ];$/;"	m	class:TiXmlBase	access:private
TiXmlBase::entity	tinyxml/tinyxmlparser.cpp	/^TiXmlBase::Entity TiXmlBase::entity[ NUM_ENTITY ] = $/;"	m	class:TiXmlBase	file:
TiXmlBase::errorString	tinyxml/tinyxml.h	/^	static const char* errorString[ TIXML_ERROR_STRING_COUNT ];$/;"	m	class:TiXmlBase	access:protected
TiXmlBase::errorString	tinyxml/tinyxmlerror.cpp	/^const char* TiXmlBase::errorString[ TIXML_ERROR_STRING_COUNT ] =$/;"	m	class:TiXmlBase	file:
TiXmlBase::location	tinyxml/tinyxml.h	/^	TiXmlCursor location;$/;"	m	class:TiXmlBase	access:protected
TiXmlBase::operator =	tinyxml/tinyxml.h	/^	void operator=( const TiXmlBase& base );	\/\/ not allowed.$/;"	p	class:TiXmlBase	access:private	signature:( const TiXmlBase& base )
TiXmlBase::userData	tinyxml/tinyxml.h	/^	void*			userData;$/;"	m	class:TiXmlBase	access:protected
TiXmlBase::utf8ByteTable	tinyxml/tinyxml.h	/^	static const int utf8ByteTable[256];$/;"	m	class:TiXmlBase	access:public
TiXmlBase::utf8ByteTable	tinyxml/tinyxmlparser.cpp	/^const int TiXmlBase::utf8ByteTable[256] = $/;"	m	class:TiXmlBase	file:
TiXmlBase::~TiXmlBase	tinyxml/tinyxml.h	/^	virtual ~TiXmlBase()			{}$/;"	f	class:TiXmlBase	access:public	signature:()
TiXmlComment	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01155"><\/a><a class="code" href="classTiXmlComment.html">01155<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlComment.html" title="An XML comment.">TiXmlComment<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>$/;"	c	class:TiXmlVisitor	file:	inherits:TiXmlNode	access:public
TiXmlComment	tinyxml/tinyxml.cpp	/^TiXmlComment::TiXmlComment( const TiXmlComment& copy ) : TiXmlNode( TiXmlNode::TINYXML_COMMENT )$/;"	f	class:TiXmlComment	signature:( const TiXmlComment& copy )
TiXmlComment	tinyxml/tinyxml.h	/^	TiXmlComment( const TiXmlComment& );$/;"	p	class:TiXmlComment	access:public	signature:( const TiXmlComment& )
TiXmlComment	tinyxml/tinyxml.h	/^	TiXmlComment( const char* _value ) : TiXmlNode( TiXmlNode::TINYXML_COMMENT ) {$/;"	f	class:TiXmlComment	access:public	signature:( const char* _value )
TiXmlComment	tinyxml/tinyxml.h	/^	TiXmlComment() : TiXmlNode( TiXmlNode::TINYXML_COMMENT ) {}$/;"	f	class:TiXmlComment	access:public	signature:()
TiXmlComment	tinyxml/tinyxml.h	/^class TiXmlComment : public TiXmlNode$/;"	c	inherits:TiXmlNode
TiXmlComment::Accept	tinyxml/tinyxml.cpp	/^bool TiXmlComment::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlComment	signature:( TiXmlVisitor* visitor ) const
TiXmlComment::Accept	tinyxml/tinyxml.h	/^	virtual bool Accept( TiXmlVisitor* visitor ) const;$/;"	p	class:TiXmlComment	access:public	signature:( TiXmlVisitor* visitor ) const
TiXmlComment::Clone	tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlComment::Clone() const$/;"	f	class:TiXmlComment	signature:() const
TiXmlComment::Clone	tinyxml/tinyxml.h	/^	virtual TiXmlNode* Clone() const;$/;"	p	class:TiXmlComment	access:public	signature:() const
TiXmlComment::CopyTo	tinyxml/tinyxml.cpp	/^void TiXmlComment::CopyTo( TiXmlComment* target ) const$/;"	f	class:TiXmlComment	signature:( TiXmlComment* target ) const
TiXmlComment::CopyTo	tinyxml/tinyxml.h	/^	void CopyTo( TiXmlComment* target ) const;$/;"	p	class:TiXmlComment	access:protected	signature:( TiXmlComment* target ) const
TiXmlComment::Parse	tinyxml/tinyxml.h	/^	virtual const char* Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	p	class:TiXmlComment	access:public	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )
TiXmlComment::Parse	tinyxml/tinyxmlparser.cpp	/^const char* TiXmlComment::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlComment	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )
TiXmlComment::Print	tinyxml/tinyxml.cpp	/^void TiXmlComment::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlComment	signature:( FILE* cfile, int depth ) const
TiXmlComment::Print	tinyxml/tinyxml.h	/^	virtual void Print( FILE* cfile, int depth ) const;$/;"	p	class:TiXmlComment	access:public	signature:( FILE* cfile, int depth ) const
TiXmlComment::StreamIn	tinyxml/tinyxml.h	/^	virtual void StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	p	class:TiXmlComment	access:protected	signature:( std::istream * in, TIXML_STRING * tag )
TiXmlComment::StreamIn	tinyxml/tinyxmlparser.cpp	/^void TiXmlComment::StreamIn( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlComment	signature:( std::istream * in, TIXML_STRING * tag )
TiXmlComment::TiXmlComment	tinyxml/tinyxml.cpp	/^TiXmlComment::TiXmlComment( const TiXmlComment& copy ) : TiXmlNode( TiXmlNode::TINYXML_COMMENT )$/;"	f	class:TiXmlComment	signature:( const TiXmlComment& copy )
TiXmlComment::TiXmlComment	tinyxml/tinyxml.h	/^	TiXmlComment( const TiXmlComment& );$/;"	p	class:TiXmlComment	access:public	signature:( const TiXmlComment& )
TiXmlComment::TiXmlComment	tinyxml/tinyxml.h	/^	TiXmlComment( const char* _value ) : TiXmlNode( TiXmlNode::TINYXML_COMMENT ) {$/;"	f	class:TiXmlComment	access:public	signature:( const char* _value )
TiXmlComment::TiXmlComment	tinyxml/tinyxml.h	/^	TiXmlComment() : TiXmlNode( TiXmlNode::TINYXML_COMMENT ) {}$/;"	f	class:TiXmlComment	access:public	signature:()
TiXmlComment::ToComment	tinyxml/tinyxml.h	/^	virtual TiXmlComment*  ToComment() { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlComment	access:public	signature:()
TiXmlComment::ToComment	tinyxml/tinyxml.h	/^	virtual const TiXmlComment*  ToComment() const { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlComment	access:public	signature:() const
TiXmlComment::operator =	tinyxml/tinyxml.cpp	/^void TiXmlComment::operator=( const TiXmlComment& base )$/;"	f	class:TiXmlComment	signature:( const TiXmlComment& base )
TiXmlComment::operator =	tinyxml/tinyxml.h	/^	void operator=( const TiXmlComment& base );$/;"	p	class:TiXmlComment	access:public	signature:( const TiXmlComment& base )
TiXmlComment::~TiXmlComment	tinyxml/tinyxml.h	/^	virtual ~TiXmlComment()	{}$/;"	f	class:TiXmlComment	access:public	signature:()
TiXmlCursor	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00099"><\/a>00099 <span class="keyword">struct <\/span>TiXmlCursor$/;"	s	file:
TiXmlCursor	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00101"><\/a>00101     TiXmlCursor()       { Clear(); }$/;"	f	struct:TiXmlCursor	access:public	signature:()
TiXmlCursor	tinyxml/tinyxml.h	/^	TiXmlCursor()		{ Clear(); }$/;"	f	struct:TiXmlCursor	access:public	signature:()
TiXmlCursor	tinyxml/tinyxml.h	/^struct TiXmlCursor$/;"	s
TiXmlCursor::Clear	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00102"><\/a>00102     <span class="keywordtype">void<\/span> Clear()        { row = col = -1; }$/;"	f	struct:TiXmlCursor	access:public	signature:()
TiXmlCursor::Clear	tinyxml/tinyxml.h	/^	void Clear()		{ row = col = -1; }$/;"	f	struct:TiXmlCursor	access:public	signature:()
TiXmlCursor::TiXmlCursor	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00101"><\/a>00101     TiXmlCursor()       { Clear(); }$/;"	f	struct:TiXmlCursor	access:public	signature:()
TiXmlCursor::TiXmlCursor	tinyxml/tinyxml.h	/^	TiXmlCursor()		{ Clear(); }$/;"	f	struct:TiXmlCursor	access:public	signature:()
TiXmlCursor::col	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00105"><\/a>00105     <span class="keywordtype">int<\/span> col;    <span class="comment">\/\/ 0 based.<\/span>$/;"	m	struct:TiXmlCursor	file:	access:public
TiXmlCursor::col	tinyxml/tinyxml.h	/^	int col;	\/\/ 0 based.$/;"	m	struct:TiXmlCursor	access:public
TiXmlCursor::row	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00104"><\/a>00104     <span class="keywordtype">int<\/span> row;    <span class="comment">\/\/ 0 based.<\/span>$/;"	m	struct:TiXmlCursor	file:	access:public
TiXmlCursor::row	tinyxml/tinyxml.h	/^	int row;	\/\/ 0 based.$/;"	m	struct:TiXmlCursor	access:public
TiXmlDeclaration	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01278"><\/a><a class="code" href="classTiXmlDeclaration.html">01278<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlDeclaration.html" title="In correct XML the declaration is the first entry in the file.">TiXmlDeclaration<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>$/;"	c	class:TiXmlVisitor	file:	inherits:TiXmlNode	access:public
TiXmlDeclaration	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01292"><\/a>01292     <a class="code" href="classTiXmlDeclaration.html#aa0484d059bea0ea1acb47c9094382d79" title="Construct an empty declaration.">TiXmlDeclaration<\/a>(   <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _version,$/;"	p	class:TiXmlVisitor::TiXmlDeclaration	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* _version, <a name=”></a>01293 <span class=”>const</span> <span class=”>char</span>* _encoding, <a name=”></a>01294 <span class=”>const</span> <span class=”>char</span>* _standalone )
TiXmlDeclaration	tinyxml/tinyxml.cpp	/^TiXmlDeclaration::TiXmlDeclaration(	const std::string& _version,$/;"	f	class:TiXmlDeclaration	signature:( const std::string& _version, const std::string& _encoding, const std::string& _standalone )
TiXmlDeclaration	tinyxml/tinyxml.cpp	/^TiXmlDeclaration::TiXmlDeclaration( const TiXmlDeclaration& copy )$/;"	f	class:TiXmlDeclaration	signature:( const TiXmlDeclaration& copy )
TiXmlDeclaration	tinyxml/tinyxml.cpp	/^TiXmlDeclaration::TiXmlDeclaration( const char * _version,$/;"	f	class:TiXmlDeclaration	signature:( const char * _version, const char * _encoding, const char * _standalone )
TiXmlDeclaration	tinyxml/tinyxml.h	/^	TiXmlDeclaration(	const char* _version,$/;"	p	class:TiXmlDeclaration	access:public	signature:( const char* _version, const char* _encoding, const char* _standalone )
TiXmlDeclaration	tinyxml/tinyxml.h	/^	TiXmlDeclaration(	const std::string& _version,$/;"	p	class:TiXmlDeclaration	access:public	signature:( const std::string& _version, const std::string& _encoding, const std::string& _standalone )
TiXmlDeclaration	tinyxml/tinyxml.h	/^	TiXmlDeclaration( const TiXmlDeclaration& copy );$/;"	p	class:TiXmlDeclaration	access:public	signature:( const TiXmlDeclaration& copy )
TiXmlDeclaration	tinyxml/tinyxml.h	/^	TiXmlDeclaration()   : TiXmlNode( TiXmlNode::TINYXML_DECLARATION ) {}$/;"	f	class:TiXmlDeclaration	access:public	signature:()
TiXmlDeclaration	tinyxml/tinyxml.h	/^class TiXmlDeclaration : public TiXmlNode$/;"	c	inherits:TiXmlNode
TiXmlDeclaration::Accept	tinyxml/tinyxml.cpp	/^bool TiXmlDeclaration::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlDeclaration	signature:( TiXmlVisitor* visitor ) const
TiXmlDeclaration::Accept	tinyxml/tinyxml.h	/^	virtual bool Accept( TiXmlVisitor* visitor ) const;$/;"	p	class:TiXmlDeclaration	access:public	signature:( TiXmlVisitor* visitor ) const
TiXmlDeclaration::Clone	tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlDeclaration::Clone() const$/;"	f	class:TiXmlDeclaration	signature:() const
TiXmlDeclaration::Clone	tinyxml/tinyxml.h	/^	virtual TiXmlNode* Clone() const;$/;"	p	class:TiXmlDeclaration	access:public	signature:() const
TiXmlDeclaration::CopyTo	tinyxml/tinyxml.cpp	/^void TiXmlDeclaration::CopyTo( TiXmlDeclaration* target ) const$/;"	f	class:TiXmlDeclaration	signature:( TiXmlDeclaration* target ) const
TiXmlDeclaration::CopyTo	tinyxml/tinyxml.h	/^	void CopyTo( TiXmlDeclaration* target ) const;$/;"	p	class:TiXmlDeclaration	access:protected	signature:( TiXmlDeclaration* target ) const
TiXmlDeclaration::Encoding	tinyxml/tinyxml.h	/^	const char *Encoding() const		{ return encoding.c_str (); }$/;"	f	class:TiXmlDeclaration	access:public	signature:() const
TiXmlDeclaration::Parse	tinyxml/tinyxml.h	/^	virtual const char* Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	p	class:TiXmlDeclaration	access:public	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )
TiXmlDeclaration::Parse	tinyxml/tinyxmlparser.cpp	/^const char* TiXmlDeclaration::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding _encoding )$/;"	f	class:TiXmlDeclaration	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding _encoding )
TiXmlDeclaration::Print	tinyxml/tinyxml.cpp	/^void TiXmlDeclaration::Print( FILE* cfile, int \/*depth*\/, TIXML_STRING* str ) const$/;"	f	class:TiXmlDeclaration	signature:( FILE* cfile, int , TIXML_STRING* str ) const
TiXmlDeclaration::Print	tinyxml/tinyxml.h	/^	virtual void Print( FILE* cfile, int depth ) const {$/;"	f	class:TiXmlDeclaration	access:public	signature:( FILE* cfile, int depth ) const
TiXmlDeclaration::Print	tinyxml/tinyxml.h	/^	virtual void Print( FILE* cfile, int depth, TIXML_STRING* str ) const;$/;"	p	class:TiXmlDeclaration	access:public	signature:( FILE* cfile, int depth, TIXML_STRING* str ) const
TiXmlDeclaration::Standalone	tinyxml/tinyxml.h	/^	const char *Standalone() const		{ return standalone.c_str (); }$/;"	f	class:TiXmlDeclaration	access:public	signature:() const
TiXmlDeclaration::StreamIn	tinyxml/tinyxml.h	/^	virtual void StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	p	class:TiXmlDeclaration	access:protected	signature:( std::istream * in, TIXML_STRING * tag )
TiXmlDeclaration::StreamIn	tinyxml/tinyxmlparser.cpp	/^void TiXmlDeclaration::StreamIn( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlDeclaration	signature:( std::istream * in, TIXML_STRING * tag )
TiXmlDeclaration::TiXmlDeclaration	tinyxml/tinyxml.cpp	/^TiXmlDeclaration::TiXmlDeclaration(	const std::string& _version,$/;"	f	class:TiXmlDeclaration	signature:( const std::string& _version, const std::string& _encoding, const std::string& _standalone )
TiXmlDeclaration::TiXmlDeclaration	tinyxml/tinyxml.cpp	/^TiXmlDeclaration::TiXmlDeclaration( const TiXmlDeclaration& copy )$/;"	f	class:TiXmlDeclaration	signature:( const TiXmlDeclaration& copy )
TiXmlDeclaration::TiXmlDeclaration	tinyxml/tinyxml.cpp	/^TiXmlDeclaration::TiXmlDeclaration( const char * _version,$/;"	f	class:TiXmlDeclaration	signature:( const char * _version, const char * _encoding, const char * _standalone )
TiXmlDeclaration::TiXmlDeclaration	tinyxml/tinyxml.h	/^	TiXmlDeclaration(	const char* _version,$/;"	p	class:TiXmlDeclaration	access:public	signature:( const char* _version, const char* _encoding, const char* _standalone )
TiXmlDeclaration::TiXmlDeclaration	tinyxml/tinyxml.h	/^	TiXmlDeclaration(	const std::string& _version,$/;"	p	class:TiXmlDeclaration	access:public	signature:( const std::string& _version, const std::string& _encoding, const std::string& _standalone )
TiXmlDeclaration::TiXmlDeclaration	tinyxml/tinyxml.h	/^	TiXmlDeclaration( const TiXmlDeclaration& copy );$/;"	p	class:TiXmlDeclaration	access:public	signature:( const TiXmlDeclaration& copy )
TiXmlDeclaration::TiXmlDeclaration	tinyxml/tinyxml.h	/^	TiXmlDeclaration()   : TiXmlNode( TiXmlNode::TINYXML_DECLARATION ) {}$/;"	f	class:TiXmlDeclaration	access:public	signature:()
TiXmlDeclaration::ToDeclaration	tinyxml/tinyxml.h	/^	virtual TiXmlDeclaration*       ToDeclaration()       { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlDeclaration	access:public	signature:()
TiXmlDeclaration::ToDeclaration	tinyxml/tinyxml.h	/^	virtual const TiXmlDeclaration* ToDeclaration() const { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlDeclaration	access:public	signature:() const
TiXmlDeclaration::Version	tinyxml/tinyxml.h	/^	const char *Version() const			{ return version.c_str (); }$/;"	f	class:TiXmlDeclaration	access:public	signature:() const
TiXmlDeclaration::encoding	tinyxml/tinyxml.h	/^	TIXML_STRING encoding;$/;"	m	class:TiXmlDeclaration	access:private
TiXmlDeclaration::operator =	tinyxml/tinyxml.cpp	/^void TiXmlDeclaration::operator=( const TiXmlDeclaration& copy )$/;"	f	class:TiXmlDeclaration	signature:( const TiXmlDeclaration& copy )
TiXmlDeclaration::operator =	tinyxml/tinyxml.h	/^	void operator=( const TiXmlDeclaration& copy );$/;"	p	class:TiXmlDeclaration	access:public	signature:( const TiXmlDeclaration& copy )
TiXmlDeclaration::standalone	tinyxml/tinyxml.h	/^	TIXML_STRING standalone;$/;"	m	class:TiXmlDeclaration	access:private
TiXmlDeclaration::version	tinyxml/tinyxml.h	/^	TIXML_STRING version;$/;"	m	class:TiXmlDeclaration	access:private
TiXmlDeclaration::~TiXmlDeclaration	tinyxml/tinyxml.h	/^	virtual ~TiXmlDeclaration()	{}$/;"	f	class:TiXmlDeclaration	access:public	signature:()
TiXmlDocument	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01386"><\/a><a class="code" href="classTiXmlDocument.html">01386<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>$/;"	c	class:TiXmlVisitor	file:	inherits:TiXmlNode	access:public
TiXmlDocument	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01390"><\/a>01390     <a class="code" href="classTiXmlDocument.html#a9f5e84335708fde98400230f9f12659c" title="Create an empty document, that has no name.">TiXmlDocument<\/a>();$/;"	p	class:TiXmlVisitor::TiXmlDocument	file:	access:public	signature:()
TiXmlDocument	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01392"><\/a>01392     <a class="code" href="classTiXmlDocument.html#a9f5e84335708fde98400230f9f12659c" title="Create an empty document, that has no name.">TiXmlDocument<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * documentName );$/;"	p	class:TiXmlVisitor::TiXmlDocument	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span> * documentName )
TiXmlDocument	tinyxml/tinyxml.cpp	/^TiXmlDocument::TiXmlDocument( const TiXmlDocument& copy ) : TiXmlNode( TiXmlNode::TINYXML_DOCUMENT )$/;"	f	class:TiXmlDocument	signature:( const TiXmlDocument& copy )
TiXmlDocument	tinyxml/tinyxml.cpp	/^TiXmlDocument::TiXmlDocument( const char * documentName ) : TiXmlNode( TiXmlNode::TINYXML_DOCUMENT )$/;"	f	class:TiXmlDocument	signature:( const char * documentName )
TiXmlDocument	tinyxml/tinyxml.cpp	/^TiXmlDocument::TiXmlDocument( const std::string& documentName ) : TiXmlNode( TiXmlNode::TINYXML_DOCUMENT )$/;"	f	class:TiXmlDocument	signature:( const std::string& documentName )
TiXmlDocument	tinyxml/tinyxml.cpp	/^TiXmlDocument::TiXmlDocument() : TiXmlNode( TiXmlNode::TINYXML_DOCUMENT )$/;"	f	class:TiXmlDocument	signature:()
TiXmlDocument	tinyxml/tinyxml.h	/^	TiXmlDocument( const TiXmlDocument& copy );$/;"	p	class:TiXmlDocument	access:public	signature:( const TiXmlDocument& copy )
TiXmlDocument	tinyxml/tinyxml.h	/^	TiXmlDocument( const char * documentName );$/;"	p	class:TiXmlDocument	access:public	signature:( const char * documentName )
TiXmlDocument	tinyxml/tinyxml.h	/^	TiXmlDocument( const std::string& documentName );$/;"	p	class:TiXmlDocument	access:public	signature:( const std::string& documentName )
TiXmlDocument	tinyxml/tinyxml.h	/^	TiXmlDocument();$/;"	p	class:TiXmlDocument	access:public	signature:()
TiXmlDocument	tinyxml/tinyxml.h	/^class TiXmlDocument : public TiXmlNode$/;"	c	inherits:TiXmlNode
TiXmlDocument::Accept	tinyxml/tinyxml.cpp	/^bool TiXmlDocument::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlDocument	signature:( TiXmlVisitor* visitor ) const
TiXmlDocument::Accept	tinyxml/tinyxml.h	/^	virtual bool Accept( TiXmlVisitor* content ) const;$/;"	p	class:TiXmlDocument	access:public	signature:( TiXmlVisitor* content ) const
TiXmlDocument::ClearError	tinyxml/tinyxml.h	/^	void ClearError()						{	error = false; $/;"	f	class:TiXmlDocument	access:public	signature:()
TiXmlDocument::Clone	tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlDocument::Clone() const$/;"	f	class:TiXmlDocument	signature:() const
TiXmlDocument::Clone	tinyxml/tinyxml.h	/^	virtual TiXmlNode* Clone() const;$/;"	p	class:TiXmlDocument	access:protected	signature:() const
TiXmlDocument::CopyTo	tinyxml/tinyxml.cpp	/^void TiXmlDocument::CopyTo( TiXmlDocument* target ) const$/;"	f	class:TiXmlDocument	signature:( TiXmlDocument* target ) const
TiXmlDocument::CopyTo	tinyxml/tinyxml.h	/^	void CopyTo( TiXmlDocument* target ) const;$/;"	p	class:TiXmlDocument	access:private	signature:( TiXmlDocument* target ) const
TiXmlDocument::Error	tinyxml/tinyxml.h	/^	bool Error() const						{ return error; }$/;"	f	class:TiXmlDocument	access:public	signature:() const
TiXmlDocument::ErrorCol	tinyxml/tinyxml.h	/^	int ErrorCol() const	{ return errorLocation.col+1; }	\/\/\/< The column where the error occured. See ErrorRow()$/;"	f	class:TiXmlDocument	access:public	signature:() const
TiXmlDocument::ErrorDesc	tinyxml/tinyxml.h	/^	const char * ErrorDesc() const	{ return errorDesc.c_str (); }$/;"	f	class:TiXmlDocument	access:public	signature:() const
TiXmlDocument::ErrorId	tinyxml/tinyxml.h	/^	int ErrorId()	const				{ return errorId; }$/;"	f	class:TiXmlDocument	access:public	signature:() const
TiXmlDocument::ErrorRow	tinyxml/tinyxml.h	/^	int ErrorRow() const	{ return errorLocation.row+1; }$/;"	f	class:TiXmlDocument	access:public	signature:() const
TiXmlDocument::LoadFile	tinyxml/tinyxml.cpp	/^bool TiXmlDocument::LoadFile( FILE* file, TiXmlEncoding encoding )$/;"	f	class:TiXmlDocument	signature:( FILE* file, TiXmlEncoding encoding )
TiXmlDocument::LoadFile	tinyxml/tinyxml.cpp	/^bool TiXmlDocument::LoadFile( TiXmlEncoding encoding )$/;"	f	class:TiXmlDocument	signature:( TiXmlEncoding encoding )
TiXmlDocument::LoadFile	tinyxml/tinyxml.cpp	/^bool TiXmlDocument::LoadFile( const char* _filename, TiXmlEncoding encoding )$/;"	f	class:TiXmlDocument	signature:( const char* _filename, TiXmlEncoding encoding )
TiXmlDocument::LoadFile	tinyxml/tinyxml.h	/^	bool LoadFile( FILE*, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING );$/;"	p	class:TiXmlDocument	access:public	signature:( FILE*, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING )
TiXmlDocument::LoadFile	tinyxml/tinyxml.h	/^	bool LoadFile( TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING );$/;"	p	class:TiXmlDocument	access:public	signature:( TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING )
TiXmlDocument::LoadFile	tinyxml/tinyxml.h	/^	bool LoadFile( const char * filename, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING );$/;"	p	class:TiXmlDocument	access:public	signature:( const char * filename, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING )
TiXmlDocument::LoadFile	tinyxml/tinyxml.h	/^	bool LoadFile( const std::string& filename, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING )			\/\/\/< STL std::string version.$/;"	f	class:TiXmlDocument	access:public	signature:( const std::string& filename, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING )
TiXmlDocument::Parse	tinyxml/tinyxml.h	/^	virtual const char* Parse( const char* p, TiXmlParsingData* data = 0, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING );$/;"	p	class:TiXmlDocument	access:public	signature:( const char* p, TiXmlParsingData* data = 0, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING )
TiXmlDocument::Parse	tinyxml/tinyxmlparser.cpp	/^const char* TiXmlDocument::Parse( const char* p, TiXmlParsingData* prevData, TiXmlEncoding encoding )$/;"	f	class:TiXmlDocument	signature:( const char* p, TiXmlParsingData* prevData, TiXmlEncoding encoding )
TiXmlDocument::Print	tinyxml/tinyxml.cpp	/^void TiXmlDocument::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlDocument	signature:( FILE* cfile, int depth ) const
TiXmlDocument::Print	tinyxml/tinyxml.h	/^	virtual void Print( FILE* cfile, int depth = 0 ) const;$/;"	p	class:TiXmlDocument	access:public	signature:( FILE* cfile, int depth = 0 ) const
TiXmlDocument::Print	tinyxml/tinyxml.h	/^	void Print() const						{ Print( stdout, 0 ); }$/;"	f	class:TiXmlDocument	access:public	signature:() const
TiXmlDocument::RootElement	tinyxml/tinyxml.h	/^	TiXmlElement* RootElement()					{ return FirstChildElement(); }$/;"	f	class:TiXmlDocument	access:public	signature:()
TiXmlDocument::RootElement	tinyxml/tinyxml.h	/^	const TiXmlElement* RootElement() const		{ return FirstChildElement(); }$/;"	f	class:TiXmlDocument	access:public	signature:() const
TiXmlDocument::SaveFile	tinyxml/tinyxml.cpp	/^bool TiXmlDocument::SaveFile( FILE* fp ) const$/;"	f	class:TiXmlDocument	signature:( FILE* fp ) const
TiXmlDocument::SaveFile	tinyxml/tinyxml.cpp	/^bool TiXmlDocument::SaveFile( const char * filename ) const$/;"	f	class:TiXmlDocument	signature:( const char * filename ) const
TiXmlDocument::SaveFile	tinyxml/tinyxml.cpp	/^bool TiXmlDocument::SaveFile() const$/;"	f	class:TiXmlDocument	signature:() const
TiXmlDocument::SaveFile	tinyxml/tinyxml.h	/^	bool SaveFile( FILE* ) const;$/;"	p	class:TiXmlDocument	access:public	signature:( FILE* ) const
TiXmlDocument::SaveFile	tinyxml/tinyxml.h	/^	bool SaveFile( const char * filename ) const;$/;"	p	class:TiXmlDocument	access:public	signature:( const char * filename ) const
TiXmlDocument::SaveFile	tinyxml/tinyxml.h	/^	bool SaveFile( const std::string& filename ) const		\/\/\/< STL std::string version.$/;"	f	class:TiXmlDocument	access:public	signature:( const std::string& filename ) const
TiXmlDocument::SaveFile	tinyxml/tinyxml.h	/^	bool SaveFile() const;$/;"	p	class:TiXmlDocument	access:public	signature:() const
TiXmlDocument::SetError	tinyxml/tinyxml.h	/^	void SetError( int err, const char* errorLocation, TiXmlParsingData* prevData, TiXmlEncoding encoding );$/;"	p	class:TiXmlDocument	access:public	signature:( int err, const char* errorLocation, TiXmlParsingData* prevData, TiXmlEncoding encoding )
TiXmlDocument::SetError	tinyxml/tinyxmlparser.cpp	/^void TiXmlDocument::SetError( int err, const char* pError, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlDocument	signature:( int err, const char* pError, TiXmlParsingData* data, TiXmlEncoding encoding )
TiXmlDocument::SetTabSize	tinyxml/tinyxml.h	/^	void SetTabSize( int _tabsize )		{ tabsize = _tabsize; }$/;"	f	class:TiXmlDocument	access:public	signature:( int _tabsize )
TiXmlDocument::StreamIn	tinyxml/tinyxml.h	/^	virtual void StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	p	class:TiXmlDocument	access:protected	signature:( std::istream * in, TIXML_STRING * tag )
TiXmlDocument::StreamIn	tinyxml/tinyxmlparser.cpp	/^void TiXmlDocument::StreamIn( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlDocument	signature:( std::istream * in, TIXML_STRING * tag )
TiXmlDocument::TabSize	tinyxml/tinyxml.h	/^	int TabSize() const	{ return tabsize; }$/;"	f	class:TiXmlDocument	access:public	signature:() const
TiXmlDocument::TiXmlDocument	tinyxml/tinyxml.cpp	/^TiXmlDocument::TiXmlDocument( const TiXmlDocument& copy ) : TiXmlNode( TiXmlNode::TINYXML_DOCUMENT )$/;"	f	class:TiXmlDocument	signature:( const TiXmlDocument& copy )
TiXmlDocument::TiXmlDocument	tinyxml/tinyxml.cpp	/^TiXmlDocument::TiXmlDocument( const char * documentName ) : TiXmlNode( TiXmlNode::TINYXML_DOCUMENT )$/;"	f	class:TiXmlDocument	signature:( const char * documentName )
TiXmlDocument::TiXmlDocument	tinyxml/tinyxml.cpp	/^TiXmlDocument::TiXmlDocument( const std::string& documentName ) : TiXmlNode( TiXmlNode::TINYXML_DOCUMENT )$/;"	f	class:TiXmlDocument	signature:( const std::string& documentName )
TiXmlDocument::TiXmlDocument	tinyxml/tinyxml.cpp	/^TiXmlDocument::TiXmlDocument() : TiXmlNode( TiXmlNode::TINYXML_DOCUMENT )$/;"	f	class:TiXmlDocument	signature:()
TiXmlDocument::TiXmlDocument	tinyxml/tinyxml.h	/^	TiXmlDocument( const TiXmlDocument& copy );$/;"	p	class:TiXmlDocument	access:public	signature:( const TiXmlDocument& copy )
TiXmlDocument::TiXmlDocument	tinyxml/tinyxml.h	/^	TiXmlDocument( const char * documentName );$/;"	p	class:TiXmlDocument	access:public	signature:( const char * documentName )
TiXmlDocument::TiXmlDocument	tinyxml/tinyxml.h	/^	TiXmlDocument( const std::string& documentName );$/;"	p	class:TiXmlDocument	access:public	signature:( const std::string& documentName )
TiXmlDocument::TiXmlDocument	tinyxml/tinyxml.h	/^	TiXmlDocument();$/;"	p	class:TiXmlDocument	access:public	signature:()
TiXmlDocument::ToDocument	tinyxml/tinyxml.h	/^	virtual TiXmlDocument*          ToDocument()          { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlDocument	access:public	signature:()
TiXmlDocument::ToDocument	tinyxml/tinyxml.h	/^	virtual const TiXmlDocument*    ToDocument()    const { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlDocument	access:public	signature:() const
TiXmlDocument::error	tinyxml/tinyxml.h	/^	bool error;$/;"	m	class:TiXmlDocument	access:private
TiXmlDocument::errorDesc	tinyxml/tinyxml.h	/^	TIXML_STRING errorDesc;$/;"	m	class:TiXmlDocument	access:private
TiXmlDocument::errorId	tinyxml/tinyxml.h	/^	int  errorId;$/;"	m	class:TiXmlDocument	access:private
TiXmlDocument::errorLocation	tinyxml/tinyxml.h	/^	TiXmlCursor errorLocation;$/;"	m	class:TiXmlDocument	access:private
TiXmlDocument::operator =	tinyxml/tinyxml.cpp	/^void TiXmlDocument::operator=( const TiXmlDocument& copy )$/;"	f	class:TiXmlDocument	signature:( const TiXmlDocument& copy )
TiXmlDocument::operator =	tinyxml/tinyxml.h	/^	void operator=( const TiXmlDocument& copy );$/;"	p	class:TiXmlDocument	access:public	signature:( const TiXmlDocument& copy )
TiXmlDocument::tabsize	tinyxml/tinyxml.h	/^	int tabsize;$/;"	m	class:TiXmlDocument	access:private
TiXmlDocument::useMicrosoftBOM	tinyxml/tinyxml.h	/^	bool useMicrosoftBOM;		\/\/ the UTF-8 BOM were found when read. Note this, and try to write.$/;"	m	class:TiXmlDocument	access:private
TiXmlDocument::~TiXmlDocument	tinyxml/tinyxml.h	/^	virtual ~TiXmlDocument() {}$/;"	f	class:TiXmlDocument	access:public	signature:()
TiXmlElement	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00940"><\/a><a class="code" href="classTiXmlElement.html">00940<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>$/;"	c	class:TiXmlVisitor	file:	inherits:TiXmlNode	access:public
TiXmlElement	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00944"><\/a>00944     <a class="code" href="classTiXmlElement.html#a01bc3ab372d35da08efcbbe65ad90c60" title="Construct an element.">TiXmlElement<\/a> (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * in_value);$/;"	p	class:TiXmlVisitor::TiXmlElement	file:	access:public	signature:(<span class=”>const</span> <span class=”>char</span> * in_value)
TiXmlElement	tinyxml/tinyxml.cpp	/^TiXmlElement::TiXmlElement (const char * _value)$/;"	f	class:TiXmlElement	signature:(const char * _value)
TiXmlElement	tinyxml/tinyxml.cpp	/^TiXmlElement::TiXmlElement( const TiXmlElement& copy)$/;"	f	class:TiXmlElement	signature:( const TiXmlElement& copy)
TiXmlElement	tinyxml/tinyxml.cpp	/^TiXmlElement::TiXmlElement( const std::string& _value ) $/;"	f	class:TiXmlElement	signature:( const std::string& _value )
TiXmlElement	tinyxml/tinyxml.h	/^	TiXmlElement (const char * in_value);$/;"	p	class:TiXmlElement	access:public	signature:(const char * in_value)
TiXmlElement	tinyxml/tinyxml.h	/^	TiXmlElement( const TiXmlElement& );$/;"	p	class:TiXmlElement	access:public	signature:( const TiXmlElement& )
TiXmlElement	tinyxml/tinyxml.h	/^	TiXmlElement( const std::string& _value );$/;"	p	class:TiXmlElement	access:public	signature:( const std::string& _value )
TiXmlElement	tinyxml/tinyxml.h	/^class TiXmlElement : public TiXmlNode$/;"	c	inherits:TiXmlNode
TiXmlElement::Accept	tinyxml/tinyxml.cpp	/^bool TiXmlElement::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlElement	signature:( TiXmlVisitor* visitor ) const
TiXmlElement::Accept	tinyxml/tinyxml.h	/^	virtual bool Accept( TiXmlVisitor* visitor ) const;$/;"	p	class:TiXmlElement	access:public	signature:( TiXmlVisitor* visitor ) const
TiXmlElement::Attribute	tinyxml/tinyxml.cpp	/^const char* TiXmlElement::Attribute( const char* name ) const$/;"	f	class:TiXmlElement	signature:( const char* name ) const
TiXmlElement::Attribute	tinyxml/tinyxml.cpp	/^const char* TiXmlElement::Attribute( const char* name, double* d ) const$/;"	f	class:TiXmlElement	signature:( const char* name, double* d ) const
TiXmlElement::Attribute	tinyxml/tinyxml.cpp	/^const char* TiXmlElement::Attribute( const char* name, int* i ) const$/;"	f	class:TiXmlElement	signature:( const char* name, int* i ) const
TiXmlElement::Attribute	tinyxml/tinyxml.cpp	/^const std::string* TiXmlElement::Attribute( const std::string& name ) const$/;"	f	class:TiXmlElement	signature:( const std::string& name ) const
TiXmlElement::Attribute	tinyxml/tinyxml.cpp	/^const std::string* TiXmlElement::Attribute( const std::string& name, double* d ) const$/;"	f	class:TiXmlElement	signature:( const std::string& name, double* d ) const
TiXmlElement::Attribute	tinyxml/tinyxml.cpp	/^const std::string* TiXmlElement::Attribute( const std::string& name, int* i ) const$/;"	f	class:TiXmlElement	signature:( const std::string& name, int* i ) const
TiXmlElement::Attribute	tinyxml/tinyxml.h	/^	const char* Attribute( const char* name ) const;$/;"	p	class:TiXmlElement	access:public	signature:( const char* name ) const
TiXmlElement::Attribute	tinyxml/tinyxml.h	/^	const char* Attribute( const char* name, double* d ) const;$/;"	p	class:TiXmlElement	access:public	signature:( const char* name, double* d ) const
TiXmlElement::Attribute	tinyxml/tinyxml.h	/^	const char* Attribute( const char* name, int* i ) const;$/;"	p	class:TiXmlElement	access:public	signature:( const char* name, int* i ) const
TiXmlElement::Attribute	tinyxml/tinyxml.h	/^	const std::string* Attribute( const std::string& name ) const;$/;"	p	class:TiXmlElement	access:public	signature:( const std::string& name ) const
TiXmlElement::Attribute	tinyxml/tinyxml.h	/^	const std::string* Attribute( const std::string& name, double* d ) const;$/;"	p	class:TiXmlElement	access:public	signature:( const std::string& name, double* d ) const
TiXmlElement::Attribute	tinyxml/tinyxml.h	/^	const std::string* Attribute( const std::string& name, int* i ) const;$/;"	p	class:TiXmlElement	access:public	signature:( const std::string& name, int* i ) const
TiXmlElement::ClearThis	tinyxml/tinyxml.cpp	/^void TiXmlElement::ClearThis()$/;"	f	class:TiXmlElement	signature:()
TiXmlElement::ClearThis	tinyxml/tinyxml.h	/^	void ClearThis();	\/\/ like clear, but initializes 'this' object as well$/;"	p	class:TiXmlElement	access:protected	signature:()
TiXmlElement::Clone	tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlElement::Clone() const$/;"	f	class:TiXmlElement	signature:() const
TiXmlElement::Clone	tinyxml/tinyxml.h	/^	virtual TiXmlNode* Clone() const;$/;"	p	class:TiXmlElement	access:public	signature:() const
TiXmlElement::CopyTo	tinyxml/tinyxml.cpp	/^void TiXmlElement::CopyTo( TiXmlElement* target ) const$/;"	f	class:TiXmlElement	signature:( TiXmlElement* target ) const
TiXmlElement::CopyTo	tinyxml/tinyxml.h	/^	void CopyTo( TiXmlElement* target ) const;$/;"	p	class:TiXmlElement	access:protected	signature:( TiXmlElement* target ) const
TiXmlElement::FirstAttribute	tinyxml/tinyxml.h	/^	TiXmlAttribute* FirstAttribute() 				{ return attributeSet.First(); }$/;"	f	class:TiXmlElement	access:public	signature:()
TiXmlElement::FirstAttribute	tinyxml/tinyxml.h	/^	const TiXmlAttribute* FirstAttribute() const	{ return attributeSet.First(); }		\/\/\/< Access the first attribute in this element.$/;"	f	class:TiXmlElement	access:public	signature:() const
TiXmlElement::GetText	tinyxml/tinyxml.cpp	/^const char* TiXmlElement::GetText() const$/;"	f	class:TiXmlElement	signature:() const
TiXmlElement::GetText	tinyxml/tinyxml.h	/^	const char* GetText() const;$/;"	p	class:TiXmlElement	access:public	signature:() const
TiXmlElement::LastAttribute	tinyxml/tinyxml.h	/^	TiXmlAttribute* LastAttribute()					{ return attributeSet.Last(); }$/;"	f	class:TiXmlElement	access:public	signature:()
TiXmlElement::LastAttribute	tinyxml/tinyxml.h	/^	const TiXmlAttribute* LastAttribute()	const 	{ return attributeSet.Last(); }		\/\/\/< Access the last attribute in this element.$/;"	f	class:TiXmlElement	access:public	signature:() const
TiXmlElement::Parse	tinyxml/tinyxml.h	/^	virtual const char* Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	p	class:TiXmlElement	access:public	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )
TiXmlElement::Parse	tinyxml/tinyxmlparser.cpp	/^const char* TiXmlElement::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlElement	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )
TiXmlElement::Print	tinyxml/tinyxml.cpp	/^void TiXmlElement::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlElement	signature:( FILE* cfile, int depth ) const
TiXmlElement::Print	tinyxml/tinyxml.h	/^	virtual void Print( FILE* cfile, int depth ) const;$/;"	p	class:TiXmlElement	access:public	signature:( FILE* cfile, int depth ) const
TiXmlElement::QueryDoubleAttribute	tinyxml/tinyxml.cpp	/^int TiXmlElement::QueryDoubleAttribute( const char* name, double* dval ) const$/;"	f	class:TiXmlElement	signature:( const char* name, double* dval ) const
TiXmlElement::QueryDoubleAttribute	tinyxml/tinyxml.cpp	/^int TiXmlElement::QueryDoubleAttribute( const std::string& name, double* dval ) const$/;"	f	class:TiXmlElement	signature:( const std::string& name, double* dval ) const
TiXmlElement::QueryDoubleAttribute	tinyxml/tinyxml.h	/^	int QueryDoubleAttribute( const char* name, double* _value ) const;$/;"	p	class:TiXmlElement	access:public	signature:( const char* name, double* _value ) const
TiXmlElement::QueryDoubleAttribute	tinyxml/tinyxml.h	/^	int QueryDoubleAttribute( const std::string& name, double* _value ) const;$/;"	p	class:TiXmlElement	access:public	signature:( const std::string& name, double* _value ) const
TiXmlElement::QueryFloatAttribute	tinyxml/tinyxml.h	/^	int QueryFloatAttribute( const char* name, float* _value ) const {$/;"	f	class:TiXmlElement	access:public	signature:( const char* name, float* _value ) const
TiXmlElement::QueryIntAttribute	tinyxml/tinyxml.cpp	/^int TiXmlElement::QueryIntAttribute( const char* name, int* ival ) const$/;"	f	class:TiXmlElement	signature:( const char* name, int* ival ) const
TiXmlElement::QueryIntAttribute	tinyxml/tinyxml.cpp	/^int TiXmlElement::QueryIntAttribute( const std::string& name, int* ival ) const$/;"	f	class:TiXmlElement	signature:( const std::string& name, int* ival ) const
TiXmlElement::QueryIntAttribute	tinyxml/tinyxml.h	/^	int QueryIntAttribute( const char* name, int* _value ) const;$/;"	p	class:TiXmlElement	access:public	signature:( const char* name, int* _value ) const
TiXmlElement::QueryIntAttribute	tinyxml/tinyxml.h	/^	int QueryIntAttribute( const std::string& name, int* _value ) const;$/;"	p	class:TiXmlElement	access:public	signature:( const std::string& name, int* _value ) const
TiXmlElement::QueryStringAttribute	tinyxml/tinyxml.h	/^	int QueryStringAttribute( const char* name, std::string* _value ) const {$/;"	f	class:TiXmlElement	access:public	signature:( const char* name, std::string* _value ) const
TiXmlElement::QueryValueAttribute	tinyxml/tinyxml.h	/^	int QueryValueAttribute( const std::string& name, std::string* outValue ) const$/;"	f	class:TiXmlElement	access:public	signature:( const std::string& name, std::string* outValue ) const
TiXmlElement::QueryValueAttribute	tinyxml/tinyxml.h	/^	template< typename T > int QueryValueAttribute( const std::string& name, T* outValue ) const$/;"	f	class:TiXmlElement	access:public	signature:( const std::string& name, T* outValue ) const
TiXmlElement::ReadValue	tinyxml/tinyxml.h	/^	const char* ReadValue( const char* in, TiXmlParsingData* prevData, TiXmlEncoding encoding );$/;"	p	class:TiXmlElement	access:protected	signature:( const char* in, TiXmlParsingData* prevData, TiXmlEncoding encoding )
TiXmlElement::ReadValue	tinyxml/tinyxmlparser.cpp	/^const char* TiXmlElement::ReadValue( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlElement	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )
TiXmlElement::RemoveAttribute	tinyxml/tinyxml.cpp	/^void TiXmlElement::RemoveAttribute( const char * name )$/;"	f	class:TiXmlElement	signature:( const char * name )
TiXmlElement::RemoveAttribute	tinyxml/tinyxml.h	/^	void RemoveAttribute( const char * name );$/;"	p	class:TiXmlElement	access:public	signature:( const char * name )
TiXmlElement::RemoveAttribute	tinyxml/tinyxml.h	/^	void RemoveAttribute( const std::string& name )	{	RemoveAttribute (name.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlElement	access:public	signature:( const std::string& name )
TiXmlElement::SetAttribute	tinyxml/tinyxml.cpp	/^void TiXmlElement::SetAttribute( const char * cname, const char * cvalue )$/;"	f	class:TiXmlElement	signature:( const char * cname, const char * cvalue )
TiXmlElement::SetAttribute	tinyxml/tinyxml.cpp	/^void TiXmlElement::SetAttribute( const char * name, int val )$/;"	f	class:TiXmlElement	signature:( const char * name, int val )
TiXmlElement::SetAttribute	tinyxml/tinyxml.cpp	/^void TiXmlElement::SetAttribute( const std::string& _name, const std::string& _value )$/;"	f	class:TiXmlElement	signature:( const std::string& _name, const std::string& _value )
TiXmlElement::SetAttribute	tinyxml/tinyxml.cpp	/^void TiXmlElement::SetAttribute( const std::string& name, int val )$/;"	f	class:TiXmlElement	signature:( const std::string& name, int val )
TiXmlElement::SetAttribute	tinyxml/tinyxml.h	/^	void SetAttribute( const char * name, int value );$/;"	p	class:TiXmlElement	access:public	signature:( const char * name, int value )
TiXmlElement::SetAttribute	tinyxml/tinyxml.h	/^	void SetAttribute( const char* name, const char * _value );$/;"	p	class:TiXmlElement	access:public	signature:( const char* name, const char * _value )
TiXmlElement::SetAttribute	tinyxml/tinyxml.h	/^	void SetAttribute( const std::string& name, const std::string& _value );$/;"	p	class:TiXmlElement	access:public	signature:( const std::string& name, const std::string& _value )
TiXmlElement::SetAttribute	tinyxml/tinyxml.h	/^	void SetAttribute( const std::string& name, int _value );$/;"	p	class:TiXmlElement	access:public	signature:( const std::string& name, int _value )
TiXmlElement::SetDoubleAttribute	tinyxml/tinyxml.cpp	/^void TiXmlElement::SetDoubleAttribute( const char * name, double val )$/;"	f	class:TiXmlElement	signature:( const char * name, double val )
TiXmlElement::SetDoubleAttribute	tinyxml/tinyxml.cpp	/^void TiXmlElement::SetDoubleAttribute( const std::string& name, double val )$/;"	f	class:TiXmlElement	signature:( const std::string& name, double val )
TiXmlElement::SetDoubleAttribute	tinyxml/tinyxml.h	/^	void SetDoubleAttribute( const char * name, double value );$/;"	p	class:TiXmlElement	access:public	signature:( const char * name, double value )
TiXmlElement::SetDoubleAttribute	tinyxml/tinyxml.h	/^	void SetDoubleAttribute( const std::string& name, double value );$/;"	p	class:TiXmlElement	access:public	signature:( const std::string& name, double value )
TiXmlElement::StreamIn	tinyxml/tinyxml.h	/^	virtual void StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	p	class:TiXmlElement	access:protected	signature:( std::istream * in, TIXML_STRING * tag )
TiXmlElement::StreamIn	tinyxml/tinyxmlparser.cpp	/^void TiXmlElement::StreamIn (std::istream * in, TIXML_STRING * tag)$/;"	f	class:TiXmlElement	signature:(std::istream * in, TIXML_STRING * tag)
TiXmlElement::TiXmlElement	tinyxml/tinyxml.cpp	/^TiXmlElement::TiXmlElement (const char * _value)$/;"	f	class:TiXmlElement	signature:(const char * _value)
TiXmlElement::TiXmlElement	tinyxml/tinyxml.cpp	/^TiXmlElement::TiXmlElement( const TiXmlElement& copy)$/;"	f	class:TiXmlElement	signature:( const TiXmlElement& copy)
TiXmlElement::TiXmlElement	tinyxml/tinyxml.cpp	/^TiXmlElement::TiXmlElement( const std::string& _value ) $/;"	f	class:TiXmlElement	signature:( const std::string& _value )
TiXmlElement::TiXmlElement	tinyxml/tinyxml.h	/^	TiXmlElement (const char * in_value);$/;"	p	class:TiXmlElement	access:public	signature:(const char * in_value)
TiXmlElement::TiXmlElement	tinyxml/tinyxml.h	/^	TiXmlElement( const TiXmlElement& );$/;"	p	class:TiXmlElement	access:public	signature:( const TiXmlElement& )
TiXmlElement::TiXmlElement	tinyxml/tinyxml.h	/^	TiXmlElement( const std::string& _value );$/;"	p	class:TiXmlElement	access:public	signature:( const std::string& _value )
TiXmlElement::ToElement	tinyxml/tinyxml.h	/^	virtual TiXmlElement*           ToElement()	          { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlElement	access:public	signature:()
TiXmlElement::ToElement	tinyxml/tinyxml.h	/^	virtual const TiXmlElement*     ToElement()     const { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlElement	access:public	signature:() const
TiXmlElement::attributeSet	tinyxml/tinyxml.h	/^	TiXmlAttributeSet attributeSet;$/;"	m	class:TiXmlElement	access:private
TiXmlElement::operator =	tinyxml/tinyxml.cpp	/^void TiXmlElement::operator=( const TiXmlElement& base )$/;"	f	class:TiXmlElement	signature:( const TiXmlElement& base )
TiXmlElement::operator =	tinyxml/tinyxml.h	/^	void operator=( const TiXmlElement& base );$/;"	p	class:TiXmlElement	access:public	signature:( const TiXmlElement& base )
TiXmlElement::~TiXmlElement	tinyxml/tinyxml.cpp	/^TiXmlElement::~TiXmlElement()$/;"	f	class:TiXmlElement	signature:()
TiXmlElement::~TiXmlElement	tinyxml/tinyxml.h	/^	virtual ~TiXmlElement();$/;"	p	class:TiXmlElement	access:public	signature:()
TiXmlEncoding	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00163"><\/a>00163 <span class="keyword">enum<\/span> TiXmlEncoding$/;"	g	class:TiXmlVisitor	file:	access:public
TiXmlEncoding	tinyxml/tinyxml.h	/^enum TiXmlEncoding$/;"	g
TiXmlFOpen	tinyxml/tinyxml.cpp	/^FILE* TiXmlFOpen( const char* filename, const char* mode )$/;"	f	signature:( const char* filename, const char* mode )
TiXmlFOpen	tinyxml/tinyxml.cpp	/^FILE* TiXmlFOpen( const char* filename, const char* mode );$/;"	p	file:	signature:( const char* filename, const char* mode )
TiXmlHandle	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01631"><\/a><a class="code" href="classTiXmlHandle.html">01631<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlHandle.html" title="A TiXmlHandle is a class that wraps a node pointer with null checks; this is an incredibly...">TiXmlHandle<\/a>$/;"	c	class:TiXmlVisitor	file:	access:public
TiXmlHandle	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01635"><\/a><a class="code" href="classTiXmlHandle.html#aba18fd7bdefb942ecdea4bf4b8e29ec8">01635<\/a>     <a class="code" href="classTiXmlHandle.html#aba18fd7bdefb942ecdea4bf4b8e29ec8" title="Create a handle from any node (at any depth of the tree.) This can be a null pointer...">TiXmlHandle<\/a>( <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* _node )                 { this-&gt;node = _node; }$/;"	f	class:TiXmlVisitor::TiXmlHandle	access:public	signature:( <a class=” href=” title=”>TiXmlNode</a>* _node )
TiXmlHandle	tinyxml/tinyxml.h	/^	TiXmlHandle( TiXmlNode* _node )					{ this->node = _node; }$/;"	f	class:TiXmlHandle	access:public	signature:( TiXmlNode* _node )
TiXmlHandle	tinyxml/tinyxml.h	/^	TiXmlHandle( const TiXmlHandle& ref )			{ this->node = ref.node; }$/;"	f	class:TiXmlHandle	access:public	signature:( const TiXmlHandle& ref )
TiXmlHandle	tinyxml/tinyxml.h	/^class TiXmlHandle$/;"	c
TiXmlHandle::Child	tinyxml/tinyxml.cpp	/^TiXmlHandle TiXmlHandle::Child( const char* value, int count ) const$/;"	f	class:TiXmlHandle	signature:( const char* value, int count ) const
TiXmlHandle::Child	tinyxml/tinyxml.cpp	/^TiXmlHandle TiXmlHandle::Child( int count ) const$/;"	f	class:TiXmlHandle	signature:( int count ) const
TiXmlHandle::Child	tinyxml/tinyxml.h	/^	TiXmlHandle Child( const char* value, int index ) const;$/;"	p	class:TiXmlHandle	access:public	signature:( const char* value, int index ) const
TiXmlHandle::Child	tinyxml/tinyxml.h	/^	TiXmlHandle Child( const std::string& _value, int index ) const			{ return Child( _value.c_str(), index ); }$/;"	f	class:TiXmlHandle	access:public	signature:( const std::string& _value, int index ) const
TiXmlHandle::Child	tinyxml/tinyxml.h	/^	TiXmlHandle Child( int index ) const;$/;"	p	class:TiXmlHandle	access:public	signature:( int index ) const
TiXmlHandle::ChildElement	tinyxml/tinyxml.cpp	/^TiXmlHandle TiXmlHandle::ChildElement( const char* value, int count ) const$/;"	f	class:TiXmlHandle	signature:( const char* value, int count ) const
TiXmlHandle::ChildElement	tinyxml/tinyxml.cpp	/^TiXmlHandle TiXmlHandle::ChildElement( int count ) const$/;"	f	class:TiXmlHandle	signature:( int count ) const
TiXmlHandle::ChildElement	tinyxml/tinyxml.h	/^	TiXmlHandle ChildElement( const char* value, int index ) const;$/;"	p	class:TiXmlHandle	access:public	signature:( const char* value, int index ) const
TiXmlHandle::ChildElement	tinyxml/tinyxml.h	/^	TiXmlHandle ChildElement( const std::string& _value, int index ) const	{ return ChildElement( _value.c_str(), index ); }$/;"	f	class:TiXmlHandle	access:public	signature:( const std::string& _value, int index ) const
TiXmlHandle::ChildElement	tinyxml/tinyxml.h	/^	TiXmlHandle ChildElement( int index ) const;$/;"	p	class:TiXmlHandle	access:public	signature:( int index ) const
TiXmlHandle::Element	tinyxml/tinyxml.h	/^	TiXmlElement* Element() const	{ return ToElement(); }$/;"	f	class:TiXmlHandle	access:public	signature:() const
TiXmlHandle::FirstChild	tinyxml/tinyxml.cpp	/^TiXmlHandle TiXmlHandle::FirstChild( const char * value ) const$/;"	f	class:TiXmlHandle	signature:( const char * value ) const
TiXmlHandle::FirstChild	tinyxml/tinyxml.cpp	/^TiXmlHandle TiXmlHandle::FirstChild() const$/;"	f	class:TiXmlHandle	signature:() const
TiXmlHandle::FirstChild	tinyxml/tinyxml.h	/^	TiXmlHandle FirstChild( const char * value ) const;$/;"	p	class:TiXmlHandle	access:public	signature:( const char * value ) const
TiXmlHandle::FirstChild	tinyxml/tinyxml.h	/^	TiXmlHandle FirstChild( const std::string& _value ) const				{ return FirstChild( _value.c_str() ); }$/;"	f	class:TiXmlHandle	access:public	signature:( const std::string& _value ) const
TiXmlHandle::FirstChild	tinyxml/tinyxml.h	/^	TiXmlHandle FirstChild() const;$/;"	p	class:TiXmlHandle	access:public	signature:() const
TiXmlHandle::FirstChildElement	tinyxml/tinyxml.cpp	/^TiXmlHandle TiXmlHandle::FirstChildElement( const char * value ) const$/;"	f	class:TiXmlHandle	signature:( const char * value ) const
TiXmlHandle::FirstChildElement	tinyxml/tinyxml.cpp	/^TiXmlHandle TiXmlHandle::FirstChildElement() const$/;"	f	class:TiXmlHandle	signature:() const
TiXmlHandle::FirstChildElement	tinyxml/tinyxml.h	/^	TiXmlHandle FirstChildElement( const char * value ) const;$/;"	p	class:TiXmlHandle	access:public	signature:( const char * value ) const
TiXmlHandle::FirstChildElement	tinyxml/tinyxml.h	/^	TiXmlHandle FirstChildElement( const std::string& _value ) const		{ return FirstChildElement( _value.c_str() ); }$/;"	f	class:TiXmlHandle	access:public	signature:( const std::string& _value ) const
TiXmlHandle::FirstChildElement	tinyxml/tinyxml.h	/^	TiXmlHandle FirstChildElement() const;$/;"	p	class:TiXmlHandle	access:public	signature:() const
TiXmlHandle::Node	tinyxml/tinyxml.h	/^	TiXmlNode* Node() const			{ return ToNode(); } $/;"	f	class:TiXmlHandle	access:public	signature:() const
TiXmlHandle::Text	tinyxml/tinyxml.h	/^	TiXmlText* Text() const			{ return ToText(); }$/;"	f	class:TiXmlHandle	access:public	signature:() const
TiXmlHandle::TiXmlHandle	tinyxml/tinyxml.h	/^	TiXmlHandle( TiXmlNode* _node )					{ this->node = _node; }$/;"	f	class:TiXmlHandle	access:public	signature:( TiXmlNode* _node )
TiXmlHandle::TiXmlHandle	tinyxml/tinyxml.h	/^	TiXmlHandle( const TiXmlHandle& ref )			{ this->node = ref.node; }$/;"	f	class:TiXmlHandle	access:public	signature:( const TiXmlHandle& ref )
TiXmlHandle::ToElement	tinyxml/tinyxml.h	/^	TiXmlElement* ToElement() const		{ return ( ( node && node->ToElement() ) ? node->ToElement() : 0 ); }$/;"	f	class:TiXmlHandle	access:public	signature:() const
TiXmlHandle::ToNode	tinyxml/tinyxml.h	/^	TiXmlNode* ToNode() const			{ return node; } $/;"	f	class:TiXmlHandle	access:public	signature:() const
TiXmlHandle::ToText	tinyxml/tinyxml.h	/^	TiXmlText* ToText() const			{ return ( ( node && node->ToText() ) ? node->ToText() : 0 ); }$/;"	f	class:TiXmlHandle	access:public	signature:() const
TiXmlHandle::ToUnknown	tinyxml/tinyxml.h	/^	TiXmlUnknown* ToUnknown() const		{ return ( ( node && node->ToUnknown() ) ? node->ToUnknown() : 0 ); }$/;"	f	class:TiXmlHandle	access:public	signature:() const
TiXmlHandle::Unknown	tinyxml/tinyxml.h	/^	TiXmlUnknown* Unknown() const	{ return ToUnknown(); }$/;"	f	class:TiXmlHandle	access:public	signature:() const
TiXmlHandle::node	tinyxml/tinyxml.h	/^	TiXmlNode* node;$/;"	m	class:TiXmlHandle	access:private
TiXmlHandle::operator =	tinyxml/tinyxml.h	/^	TiXmlHandle operator=( const TiXmlHandle& ref ) { this->node = ref.node; return *this; }$/;"	f	class:TiXmlHandle	access:public	signature:( const TiXmlHandle& ref )
TiXmlNode	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00423"><\/a><a class="code" href="classTiXmlNode.html">00423<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlBase.html" title="TiXmlBase is a base class for every class in TinyXml.">TiXmlBase<\/a>$/;"	c	class:TiXmlVisitor	file:	inherits:TiXmlBase	access:public
TiXmlNode	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00741"><\/a>00741     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>( <a class="code" href="classTiXmlNode.html#a836eded4920ab9e9ef28496f48cd95a2" title="The types of XML nodes supported by TinyXml.">NodeType<\/a> _type );$/;"	p	class:TiXmlVisitor::TiXmlNode	file:	access:protected	signature:( <a class=” href=” title=”>NodeType</a> _type )
TiXmlNode	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01159"><\/a><a class="code" href="classTiXmlComment.html#aaa3252031d3e8bd3a2bf51a1c61201b7">01159<\/a>     <a class="code" href="classTiXmlComment.html#aaa3252031d3e8bd3a2bf51a1c61201b7" title="Constructs an empty comment.">TiXmlComment<\/a>() : <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>( <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>::TINYXML_COMMENT ) {}$/;"	f	class:TiXmlVisitor::TiXmlComment	access:public	signature:( <a class=” href=” title=”>TiXmlNode</a>::TINYXML_COMMENT )
TiXmlNode	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01161"><\/a><a class="code" href="classTiXmlComment.html#a37e7802ef17bc03ebe5ae79bf0713d47">01161<\/a>     <a class="code" href="classTiXmlComment.html#a37e7802ef17bc03ebe5ae79bf0713d47" title="Construct a comment from text.">TiXmlComment<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _value ) : <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>( <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>::TINYXML_COMMENT ) {$/;"	f	class:TiXmlVisitor::TiXmlComment	access:public	signature:( <a class=” href=” title=”>TiXmlNode</a>::TINYXML_COMMENT )
TiXmlNode	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01282"><\/a><a class="code" href="classTiXmlDeclaration.html#aa0484d059bea0ea1acb47c9094382d79">01282<\/a>     <a class="code" href="classTiXmlDeclaration.html#aa0484d059bea0ea1acb47c9094382d79" title="Construct an empty declaration.">TiXmlDeclaration<\/a>()   : <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>( <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>::TINYXML_DECLARATION ) {}$/;"	f	class:TiXmlVisitor::TiXmlDeclaration	access:public	signature:( <a class=” href=” title=”>TiXmlNode</a>::TINYXML_DECLARATION )
TiXmlNode	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01350"><\/a>01350     <a class="code" href="classTiXmlUnknown.html" title="Any tag that tinyXml doesn&amp;#39;t recognize is saved as an unknown.">TiXmlUnknown<\/a>() : <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>( TiXmlNode::TINYXML_UNKNOWN )    {}$/;"	f	class:TiXmlVisitor::TiXmlUnknown	access:public	signature:( TiXmlNode::TINYXML_UNKNOWN )
TiXmlNode	tinyxml/tinyxml.cpp	/^TiXmlNode::TiXmlNode( NodeType _type ) : TiXmlBase()$/;"	f	class:TiXmlNode	signature:( NodeType _type )
TiXmlNode	tinyxml/tinyxml.h	/^	TiXmlNode( NodeType _type );$/;"	p	class:TiXmlNode	access:protected	signature:( NodeType _type )
TiXmlNode	tinyxml/tinyxml.h	/^	TiXmlNode( const TiXmlNode& );				\/\/ not implemented.$/;"	p	class:TiXmlNode	access:private	signature:( const TiXmlNode& )
TiXmlNode	tinyxml/tinyxml.h	/^class TiXmlNode : public TiXmlBase$/;"	c	inherits:TiXmlBase
TiXmlNode::Accept	tinyxml/tinyxml.h	/^	virtual bool Accept( TiXmlVisitor* visitor ) const = 0;$/;"	p	class:TiXmlNode	access:public	signature:( TiXmlVisitor* visitor ) const
TiXmlNode::Clear	tinyxml/tinyxml.cpp	/^void TiXmlNode::Clear()$/;"	f	class:TiXmlNode	signature:()
TiXmlNode::Clear	tinyxml/tinyxml.h	/^	void Clear();$/;"	p	class:TiXmlNode	access:public	signature:()
TiXmlNode::Clone	tinyxml/tinyxml.h	/^	virtual TiXmlNode* Clone() const = 0;$/;"	p	class:TiXmlNode	access:public	signature:() const
TiXmlNode::CopyTo	tinyxml/tinyxml.cpp	/^void TiXmlNode::CopyTo( TiXmlNode* target ) const$/;"	f	class:TiXmlNode	signature:( TiXmlNode* target ) const
TiXmlNode::CopyTo	tinyxml/tinyxml.h	/^	void CopyTo( TiXmlNode* target ) const;$/;"	p	class:TiXmlNode	access:protected	signature:( TiXmlNode* target ) const
TiXmlNode::FirstChild	tinyxml/tinyxml.cpp	/^const TiXmlNode* TiXmlNode::FirstChild( const char * _value ) const$/;"	f	class:TiXmlNode	signature:( const char * _value ) const
TiXmlNode::FirstChild	tinyxml/tinyxml.h	/^	TiXmlNode* FirstChild( const char * _value ) {$/;"	f	class:TiXmlNode	access:public	signature:( const char * _value )
TiXmlNode::FirstChild	tinyxml/tinyxml.h	/^	TiXmlNode* FirstChild( const std::string& _value )				{	return FirstChild (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value )
TiXmlNode::FirstChild	tinyxml/tinyxml.h	/^	TiXmlNode* FirstChild()						{ return firstChild; }$/;"	f	class:TiXmlNode	access:public	signature:()
TiXmlNode::FirstChild	tinyxml/tinyxml.h	/^	const TiXmlNode* FirstChild( const char * value ) const;			\/\/\/< The first child of this node with the matching 'value'. Will be null if none found.$/;"	p	class:TiXmlNode	access:public	signature:( const char * value ) const
TiXmlNode::FirstChild	tinyxml/tinyxml.h	/^	const TiXmlNode* FirstChild( const std::string& _value ) const	{	return FirstChild (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value ) const
TiXmlNode::FirstChild	tinyxml/tinyxml.h	/^	const TiXmlNode* FirstChild()	const		{ return firstChild; }	\/\/\/< The first child of this node. Will be null if there are no children.$/;"	f	class:TiXmlNode	access:public	signature:() const
TiXmlNode::FirstChildElement	tinyxml/tinyxml.cpp	/^const TiXmlElement* TiXmlNode::FirstChildElement( const char * _value ) const$/;"	f	class:TiXmlNode	signature:( const char * _value ) const
TiXmlNode::FirstChildElement	tinyxml/tinyxml.cpp	/^const TiXmlElement* TiXmlNode::FirstChildElement() const$/;"	f	class:TiXmlNode	signature:() const
TiXmlNode::FirstChildElement	tinyxml/tinyxml.h	/^	TiXmlElement* FirstChildElement( const char * _value ) {$/;"	f	class:TiXmlNode	access:public	signature:( const char * _value )
TiXmlNode::FirstChildElement	tinyxml/tinyxml.h	/^	TiXmlElement* FirstChildElement( const std::string& _value )				{	return FirstChildElement (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value )
TiXmlNode::FirstChildElement	tinyxml/tinyxml.h	/^	TiXmlElement* FirstChildElement() {$/;"	f	class:TiXmlNode	access:public	signature:()
TiXmlNode::FirstChildElement	tinyxml/tinyxml.h	/^	const TiXmlElement* FirstChildElement( const char * _value ) const;$/;"	p	class:TiXmlNode	access:public	signature:( const char * _value ) const
TiXmlNode::FirstChildElement	tinyxml/tinyxml.h	/^	const TiXmlElement* FirstChildElement( const std::string& _value ) const	{	return FirstChildElement (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value ) const
TiXmlNode::FirstChildElement	tinyxml/tinyxml.h	/^	const TiXmlElement* FirstChildElement()	const;$/;"	p	class:TiXmlNode	access:public	signature:() const
TiXmlNode::GetDocument	tinyxml/tinyxml.cpp	/^const TiXmlDocument* TiXmlNode::GetDocument() const$/;"	f	class:TiXmlNode	signature:() const
TiXmlNode::GetDocument	tinyxml/tinyxml.h	/^	TiXmlDocument* GetDocument() {$/;"	f	class:TiXmlNode	access:public	signature:()
TiXmlNode::GetDocument	tinyxml/tinyxml.h	/^	const TiXmlDocument* GetDocument() const;$/;"	p	class:TiXmlNode	access:public	signature:() const
TiXmlNode::Identify	tinyxml/tinyxml.h	/^	TiXmlNode* Identify( const char* start, TiXmlEncoding encoding );$/;"	p	class:TiXmlNode	access:protected	signature:( const char* start, TiXmlEncoding encoding )
TiXmlNode::Identify	tinyxml/tinyxmlparser.cpp	/^TiXmlNode* TiXmlNode::Identify( const char* p, TiXmlEncoding encoding )$/;"	f	class:TiXmlNode	signature:( const char* p, TiXmlEncoding encoding )
TiXmlNode::InsertAfterChild	tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlNode::InsertAfterChild( TiXmlNode* afterThis, const TiXmlNode& addThis )$/;"	f	class:TiXmlNode	signature:( TiXmlNode* afterThis, const TiXmlNode& addThis )
TiXmlNode::InsertAfterChild	tinyxml/tinyxml.h	/^	TiXmlNode* InsertAfterChild(  TiXmlNode* afterThis, const TiXmlNode& addThis );$/;"	p	class:TiXmlNode	access:public	signature:( TiXmlNode* afterThis, const TiXmlNode& addThis )
TiXmlNode::InsertBeforeChild	tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlNode::InsertBeforeChild( TiXmlNode* beforeThis, const TiXmlNode& addThis )$/;"	f	class:TiXmlNode	signature:( TiXmlNode* beforeThis, const TiXmlNode& addThis )
TiXmlNode::InsertBeforeChild	tinyxml/tinyxml.h	/^	TiXmlNode* InsertBeforeChild( TiXmlNode* beforeThis, const TiXmlNode& addThis );$/;"	p	class:TiXmlNode	access:public	signature:( TiXmlNode* beforeThis, const TiXmlNode& addThis )
TiXmlNode::InsertEndChild	tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlNode::InsertEndChild( const TiXmlNode& addThis )$/;"	f	class:TiXmlNode	signature:( const TiXmlNode& addThis )
TiXmlNode::InsertEndChild	tinyxml/tinyxml.h	/^	TiXmlNode* InsertEndChild( const TiXmlNode& addThis );$/;"	p	class:TiXmlNode	access:public	signature:( const TiXmlNode& addThis )
TiXmlNode::IterateChildren	tinyxml/tinyxml.cpp	/^const TiXmlNode* TiXmlNode::IterateChildren( const TiXmlNode* previous ) const$/;"	f	class:TiXmlNode	signature:( const TiXmlNode* previous ) const
TiXmlNode::IterateChildren	tinyxml/tinyxml.cpp	/^const TiXmlNode* TiXmlNode::IterateChildren( const char * val, const TiXmlNode* previous ) const$/;"	f	class:TiXmlNode	signature:( const char * val, const TiXmlNode* previous ) const
TiXmlNode::IterateChildren	tinyxml/tinyxml.h	/^	TiXmlNode* IterateChildren( const TiXmlNode* previous ) {$/;"	f	class:TiXmlNode	access:public	signature:( const TiXmlNode* previous )
TiXmlNode::IterateChildren	tinyxml/tinyxml.h	/^	TiXmlNode* IterateChildren( const char * _value, const TiXmlNode* previous ) {$/;"	f	class:TiXmlNode	access:public	signature:( const char * _value, const TiXmlNode* previous )
TiXmlNode::IterateChildren	tinyxml/tinyxml.h	/^	TiXmlNode* IterateChildren( const std::string& _value, const TiXmlNode* previous ) {	return IterateChildren (_value.c_str (), previous);	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value, const TiXmlNode* previous )
TiXmlNode::IterateChildren	tinyxml/tinyxml.h	/^	const TiXmlNode* IterateChildren( const TiXmlNode* previous ) const;$/;"	p	class:TiXmlNode	access:public	signature:( const TiXmlNode* previous ) const
TiXmlNode::IterateChildren	tinyxml/tinyxml.h	/^	const TiXmlNode* IterateChildren( const char * value, const TiXmlNode* previous ) const;$/;"	p	class:TiXmlNode	access:public	signature:( const char * value, const TiXmlNode* previous ) const
TiXmlNode::IterateChildren	tinyxml/tinyxml.h	/^	const TiXmlNode* IterateChildren( const std::string& _value, const TiXmlNode* previous ) const	{	return IterateChildren (_value.c_str (), previous);	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value, const TiXmlNode* previous ) const
TiXmlNode::LastChild	tinyxml/tinyxml.cpp	/^const TiXmlNode* TiXmlNode::LastChild( const char * _value ) const$/;"	f	class:TiXmlNode	signature:( const char * _value ) const
TiXmlNode::LastChild	tinyxml/tinyxml.h	/^	TiXmlNode* LastChild( const char * _value ) {$/;"	f	class:TiXmlNode	access:public	signature:( const char * _value )
TiXmlNode::LastChild	tinyxml/tinyxml.h	/^	TiXmlNode* LastChild( const std::string& _value )				{	return LastChild (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value )
TiXmlNode::LastChild	tinyxml/tinyxml.h	/^	TiXmlNode* LastChild()	{ return lastChild; }$/;"	f	class:TiXmlNode	access:public	signature:()
TiXmlNode::LastChild	tinyxml/tinyxml.h	/^	const TiXmlNode* LastChild( const char * value ) const;			\/\/\/ The last child of this node matching 'value'. Will be null if there are no children.$/;"	p	class:TiXmlNode	access:public	signature:( const char * value ) const
TiXmlNode::LastChild	tinyxml/tinyxml.h	/^	const TiXmlNode* LastChild( const std::string& _value ) const	{	return LastChild (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value ) const
TiXmlNode::LastChild	tinyxml/tinyxml.h	/^	const TiXmlNode* LastChild() const	{ return lastChild; }		\/\/\/ The last child of this node. Will be null if there are no children.$/;"	f	class:TiXmlNode	access:public	signature:() const
TiXmlNode::LinkEndChild	tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlNode::LinkEndChild( TiXmlNode* node )$/;"	f	class:TiXmlNode	signature:( TiXmlNode* node )
TiXmlNode::LinkEndChild	tinyxml/tinyxml.h	/^	TiXmlNode* LinkEndChild( TiXmlNode* addThis );$/;"	p	class:TiXmlNode	access:public	signature:( TiXmlNode* addThis )
TiXmlNode::NextSibling	tinyxml/tinyxml.cpp	/^const TiXmlNode* TiXmlNode::NextSibling( const char * _value ) const $/;"	f	class:TiXmlNode	signature:( const char * _value ) const
TiXmlNode::NextSibling	tinyxml/tinyxml.h	/^	TiXmlNode* NextSibling( const char* _next ) {$/;"	f	class:TiXmlNode	access:public	signature:( const char* _next )
TiXmlNode::NextSibling	tinyxml/tinyxml.h	/^	TiXmlNode* NextSibling( const std::string& _value) 					{	return NextSibling (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value)
TiXmlNode::NextSibling	tinyxml/tinyxml.h	/^	TiXmlNode* NextSibling()							{ return next; }$/;"	f	class:TiXmlNode	access:public	signature:()
TiXmlNode::NextSibling	tinyxml/tinyxml.h	/^	const TiXmlNode* NextSibling( const char * ) const;$/;"	p	class:TiXmlNode	access:public	signature:( const char * ) const
TiXmlNode::NextSibling	tinyxml/tinyxml.h	/^	const TiXmlNode* NextSibling( const std::string& _value) const		{	return NextSibling (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value) const
TiXmlNode::NextSibling	tinyxml/tinyxml.h	/^	const TiXmlNode* NextSibling() const				{ return next; }$/;"	f	class:TiXmlNode	access:public	signature:() const
TiXmlNode::NextSiblingElement	tinyxml/tinyxml.cpp	/^const TiXmlElement* TiXmlNode::NextSiblingElement( const char * _value ) const$/;"	f	class:TiXmlNode	signature:( const char * _value ) const
TiXmlNode::NextSiblingElement	tinyxml/tinyxml.cpp	/^const TiXmlElement* TiXmlNode::NextSiblingElement() const$/;"	f	class:TiXmlNode	signature:() const
TiXmlNode::NextSiblingElement	tinyxml/tinyxml.h	/^	TiXmlElement* NextSiblingElement( const char *_next ) {$/;"	f	class:TiXmlNode	access:public	signature:( const char *_next )
TiXmlNode::NextSiblingElement	tinyxml/tinyxml.h	/^	TiXmlElement* NextSiblingElement( const std::string& _value)				{	return NextSiblingElement (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value)
TiXmlNode::NextSiblingElement	tinyxml/tinyxml.h	/^	TiXmlElement* NextSiblingElement() {$/;"	f	class:TiXmlNode	access:public	signature:()
TiXmlNode::NextSiblingElement	tinyxml/tinyxml.h	/^	const TiXmlElement* NextSiblingElement( const char * ) const;$/;"	p	class:TiXmlNode	access:public	signature:( const char * ) const
TiXmlNode::NextSiblingElement	tinyxml/tinyxml.h	/^	const TiXmlElement* NextSiblingElement( const std::string& _value) const	{	return NextSiblingElement (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value) const
TiXmlNode::NextSiblingElement	tinyxml/tinyxml.h	/^	const TiXmlElement* NextSiblingElement() const;$/;"	p	class:TiXmlNode	access:public	signature:() const
TiXmlNode::NoChildren	tinyxml/tinyxml.h	/^	bool NoChildren() const						{ return !firstChild; }$/;"	f	class:TiXmlNode	access:public	signature:() const
TiXmlNode::NodeType	tinyxml/tinyxml.h	/^	enum NodeType$/;"	g	class:TiXmlNode	access:public
TiXmlNode::Parent	tinyxml/tinyxml.h	/^	TiXmlNode* Parent()							{ return parent; }$/;"	f	class:TiXmlNode	access:public	signature:()
TiXmlNode::Parent	tinyxml/tinyxml.h	/^	const TiXmlNode* Parent() const				{ return parent; }$/;"	f	class:TiXmlNode	access:public	signature:() const
TiXmlNode::PreviousSibling	tinyxml/tinyxml.cpp	/^const TiXmlNode* TiXmlNode::PreviousSibling( const char * _value ) const$/;"	f	class:TiXmlNode	signature:( const char * _value ) const
TiXmlNode::PreviousSibling	tinyxml/tinyxml.h	/^	TiXmlNode* PreviousSibling( const char *_prev ) {$/;"	f	class:TiXmlNode	access:public	signature:( const char *_prev )
TiXmlNode::PreviousSibling	tinyxml/tinyxml.h	/^	TiXmlNode* PreviousSibling( const std::string& _value ) 			{	return PreviousSibling (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value )
TiXmlNode::PreviousSibling	tinyxml/tinyxml.h	/^	TiXmlNode* PreviousSibling()						{ return prev; }$/;"	f	class:TiXmlNode	access:public	signature:()
TiXmlNode::PreviousSibling	tinyxml/tinyxml.h	/^	const TiXmlNode* PreviousSibling( const char * ) const;$/;"	p	class:TiXmlNode	access:public	signature:( const char * ) const
TiXmlNode::PreviousSibling	tinyxml/tinyxml.h	/^	const TiXmlNode* PreviousSibling( const std::string& _value ) const	{	return PreviousSibling (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value ) const
TiXmlNode::PreviousSibling	tinyxml/tinyxml.h	/^	const TiXmlNode* PreviousSibling() const			{ return prev; }$/;"	f	class:TiXmlNode	access:public	signature:() const
TiXmlNode::RemoveChild	tinyxml/tinyxml.cpp	/^bool TiXmlNode::RemoveChild( TiXmlNode* removeThis )$/;"	f	class:TiXmlNode	signature:( TiXmlNode* removeThis )
TiXmlNode::RemoveChild	tinyxml/tinyxml.h	/^	bool RemoveChild( TiXmlNode* removeThis );$/;"	p	class:TiXmlNode	access:public	signature:( TiXmlNode* removeThis )
TiXmlNode::ReplaceChild	tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlNode::ReplaceChild( TiXmlNode* replaceThis, const TiXmlNode& withThis )$/;"	f	class:TiXmlNode	signature:( TiXmlNode* replaceThis, const TiXmlNode& withThis )
TiXmlNode::ReplaceChild	tinyxml/tinyxml.h	/^	TiXmlNode* ReplaceChild( TiXmlNode* replaceThis, const TiXmlNode& withThis );$/;"	p	class:TiXmlNode	access:public	signature:( TiXmlNode* replaceThis, const TiXmlNode& withThis )
TiXmlNode::SetValue	tinyxml/tinyxml.h	/^	void SetValue( const std::string& _value )	{ value = _value; }$/;"	f	class:TiXmlNode	access:public	signature:( const std::string& _value )
TiXmlNode::SetValue	tinyxml/tinyxml.h	/^	void SetValue(const char * _value) { value = _value;}$/;"	f	class:TiXmlNode	access:public	signature:(const char * _value)
TiXmlNode::StreamIn	tinyxml/tinyxml.h	/^	virtual void StreamIn( std::istream* in, TIXML_STRING* tag ) = 0;$/;"	p	class:TiXmlNode	access:protected	signature:( std::istream* in, TIXML_STRING* tag )
TiXmlNode::TINYXML_COMMENT	tinyxml/tinyxml.h	/^		TINYXML_COMMENT,$/;"	e	enum:TiXmlNode::NodeType
TiXmlNode::TINYXML_DECLARATION	tinyxml/tinyxml.h	/^		TINYXML_DECLARATION,$/;"	e	enum:TiXmlNode::NodeType
TiXmlNode::TINYXML_DOCUMENT	tinyxml/tinyxml.h	/^		TINYXML_DOCUMENT,$/;"	e	enum:TiXmlNode::NodeType
TiXmlNode::TINYXML_ELEMENT	tinyxml/tinyxml.h	/^		TINYXML_ELEMENT,$/;"	e	enum:TiXmlNode::NodeType
TiXmlNode::TINYXML_TEXT	tinyxml/tinyxml.h	/^		TINYXML_TEXT,$/;"	e	enum:TiXmlNode::NodeType
TiXmlNode::TINYXML_TYPECOUNT	tinyxml/tinyxml.h	/^		TINYXML_TYPECOUNT$/;"	e	enum:TiXmlNode::NodeType
TiXmlNode::TINYXML_UNKNOWN	tinyxml/tinyxml.h	/^		TINYXML_UNKNOWN,$/;"	e	enum:TiXmlNode::NodeType
TiXmlNode::TiXmlNode	tinyxml/tinyxml.cpp	/^TiXmlNode::TiXmlNode( NodeType _type ) : TiXmlBase()$/;"	f	class:TiXmlNode	signature:( NodeType _type )
TiXmlNode::TiXmlNode	tinyxml/tinyxml.h	/^	TiXmlNode( NodeType _type );$/;"	p	class:TiXmlNode	access:protected	signature:( NodeType _type )
TiXmlNode::TiXmlNode	tinyxml/tinyxml.h	/^	TiXmlNode( const TiXmlNode& );				\/\/ not implemented.$/;"	p	class:TiXmlNode	access:private	signature:( const TiXmlNode& )
TiXmlNode::ToComment	tinyxml/tinyxml.h	/^	virtual TiXmlComment*           ToComment()     { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode	access:public	signature:()
TiXmlNode::ToComment	tinyxml/tinyxml.h	/^	virtual const TiXmlComment*     ToComment()     const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode	access:public	signature:() const
TiXmlNode::ToDeclaration	tinyxml/tinyxml.h	/^	virtual TiXmlDeclaration*       ToDeclaration() { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode	access:public	signature:()
TiXmlNode::ToDeclaration	tinyxml/tinyxml.h	/^	virtual const TiXmlDeclaration* ToDeclaration() const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode	access:public	signature:() const
TiXmlNode::ToDocument	tinyxml/tinyxml.h	/^	virtual TiXmlDocument*          ToDocument()    { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode	access:public	signature:()
TiXmlNode::ToDocument	tinyxml/tinyxml.h	/^	virtual const TiXmlDocument*    ToDocument()    const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode	access:public	signature:() const
TiXmlNode::ToElement	tinyxml/tinyxml.h	/^	virtual TiXmlElement*           ToElement()	    { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode	access:public	signature:()
TiXmlNode::ToElement	tinyxml/tinyxml.h	/^	virtual const TiXmlElement*     ToElement()     const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode	access:public	signature:() const
TiXmlNode::ToText	tinyxml/tinyxml.h	/^	virtual TiXmlText*	            ToText()        { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode	access:public	signature:()
TiXmlNode::ToText	tinyxml/tinyxml.h	/^	virtual const TiXmlText*        ToText()        const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode	access:public	signature:() const
TiXmlNode::ToUnknown	tinyxml/tinyxml.h	/^	virtual TiXmlUnknown*           ToUnknown()	    { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode	access:public	signature:()
TiXmlNode::ToUnknown	tinyxml/tinyxml.h	/^	virtual const TiXmlUnknown*     ToUnknown()     const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode	access:public	signature:() const
TiXmlNode::Type	tinyxml/tinyxml.h	/^	int Type() const	{ return type; }$/;"	f	class:TiXmlNode	access:public	signature:() const
TiXmlNode::Value	tinyxml/tinyxml.h	/^	const char *Value() const { return value.c_str (); }$/;"	f	class:TiXmlNode	access:public	signature:() const
TiXmlNode::ValueStr	tinyxml/tinyxml.h	/^	const std::string& ValueStr() const { return value; }$/;"	f	class:TiXmlNode	access:public	signature:() const
TiXmlNode::ValueTStr	tinyxml/tinyxml.h	/^	const TIXML_STRING& ValueTStr() const { return value; }$/;"	f	class:TiXmlNode	access:public	signature:() const
TiXmlNode::firstChild	tinyxml/tinyxml.h	/^	TiXmlNode*		firstChild;$/;"	m	class:TiXmlNode	access:protected
TiXmlNode::lastChild	tinyxml/tinyxml.h	/^	TiXmlNode*		lastChild;$/;"	m	class:TiXmlNode	access:protected
TiXmlNode::next	tinyxml/tinyxml.h	/^	TiXmlNode*		next;$/;"	m	class:TiXmlNode	access:protected
TiXmlNode::operator <<	tinyxml/tinyxml.h	/^		friend std::string& operator<< (std::string& out, const TiXmlNode& base );$/;"	p	class:TiXmlNode	access:friend	signature:(std::string& out, const TiXmlNode& base )
TiXmlNode::operator <<	tinyxml/tinyxml.h	/^	    friend std::ostream& operator<< (std::ostream& out, const TiXmlNode& base);$/;"	p	class:TiXmlNode	access:friend	signature:(std::ostream& out, const TiXmlNode& base)
TiXmlNode::operator =	tinyxml/tinyxml.h	/^	void operator=( const TiXmlNode& base );	\/\/ not allowed.$/;"	p	class:TiXmlNode	access:private	signature:( const TiXmlNode& base )
TiXmlNode::operator >>	tinyxml/tinyxml.h	/^	    friend std::istream& operator >> (std::istream& in, TiXmlNode& base);$/;"	p	class:TiXmlNode	access:friend	signature:(std::istream& in, TiXmlNode& base)
TiXmlNode::parent	tinyxml/tinyxml.h	/^	TiXmlNode*		parent;$/;"	m	class:TiXmlNode	access:protected
TiXmlNode::prev	tinyxml/tinyxml.h	/^	TiXmlNode*		prev;$/;"	m	class:TiXmlNode	access:protected
TiXmlNode::type	tinyxml/tinyxml.h	/^	NodeType		type;$/;"	m	class:TiXmlNode	access:protected
TiXmlNode::value	tinyxml/tinyxml.h	/^	TIXML_STRING	value;$/;"	m	class:TiXmlNode	access:protected
TiXmlNode::~TiXmlNode	tinyxml/tinyxml.cpp	/^TiXmlNode::~TiXmlNode()$/;"	f	class:TiXmlNode	signature:()
TiXmlNode::~TiXmlNode	tinyxml/tinyxml.h	/^	virtual ~TiXmlNode();$/;"	p	class:TiXmlNode	access:public	signature:()
TiXmlOutStream	tinyxml/docs/tinystr_8h_source.html	/^<a name="l00298"><\/a>00298 <span class="keyword">class <\/span>TiXmlOutStream : <span class="keyword">public<\/span> TiXmlString$/;"	c	file:	inherits:TiXmlString
TiXmlOutStream	tinyxml/tinystr.h	/^class TiXmlOutStream : public TiXmlString$/;"	c	inherits:TiXmlString
TiXmlOutStream::amp	tinyxml/docs/tinystr_8h_source.html	/^<a name="l00303"><\/a>00303     TiXmlOutStream &amp; operator &lt;&lt; (<span class="keyword">const<\/span> TiXmlString &amp; in)$/;"	m	class:TiXmlOutStream	file:	access:public
TiXmlOutStream::amp	tinyxml/docs/tinystr_8h_source.html	/^<a name="l00310"><\/a>00310     TiXmlOutStream &amp; operator &lt;&lt; (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * in)$/;"	m	class:TiXmlOutStream	file:	access:public
TiXmlOutStream::lt	tinyxml/docs/tinystr_8h_source.html	/^<a name="l00303"><\/a>00303     TiXmlOutStream &amp; operator &lt;&lt; (<span class="keyword">const<\/span> TiXmlString &amp; in)$/;"	m	class:TiXmlOutStream	file:	access:public
TiXmlOutStream::lt	tinyxml/docs/tinystr_8h_source.html	/^<a name="l00310"><\/a>00310     TiXmlOutStream &amp; operator &lt;&lt; (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * in)$/;"	m	class:TiXmlOutStream	file:	access:public
TiXmlOutStream::operator <<	tinyxml/tinystr.h	/^	TiXmlOutStream & operator << (const TiXmlString & in)$/;"	f	class:TiXmlOutStream	access:public	signature:(const TiXmlString & in)
TiXmlOutStream::operator <<	tinyxml/tinystr.h	/^	TiXmlOutStream & operator << (const char * in)$/;"	f	class:TiXmlOutStream	access:public	signature:(const char * in)
TiXmlParsingData	tinyxml/tinyxmlparser.cpp	/^	TiXmlParsingData( const char* start, int _tabsize, int row, int col )$/;"	f	class:TiXmlParsingData	file:	access:private	signature:( const char* start, int _tabsize, int row, int col )
TiXmlParsingData	tinyxml/tinyxmlparser.cpp	/^class TiXmlParsingData$/;"	c	file:
TiXmlParsingData::Cursor	tinyxml/tinyxmlparser.cpp	/^	const TiXmlCursor& Cursor()	{ return cursor; }$/;"	f	class:TiXmlParsingData	access:public	signature:()
TiXmlParsingData::Stamp	tinyxml/tinyxmlparser.cpp	/^	void Stamp( const char* now, TiXmlEncoding encoding );$/;"	p	class:TiXmlParsingData	file:	access:public	signature:( const char* now, TiXmlEncoding encoding )
TiXmlParsingData::Stamp	tinyxml/tinyxmlparser.cpp	/^void TiXmlParsingData::Stamp( const char* now, TiXmlEncoding encoding )$/;"	f	class:TiXmlParsingData	signature:( const char* now, TiXmlEncoding encoding )
TiXmlParsingData::TiXmlParsingData	tinyxml/tinyxmlparser.cpp	/^	TiXmlParsingData( const char* start, int _tabsize, int row, int col )$/;"	f	class:TiXmlParsingData	file:	access:private	signature:( const char* start, int _tabsize, int row, int col )
TiXmlParsingData::cursor	tinyxml/tinyxmlparser.cpp	/^	TiXmlCursor		cursor;$/;"	m	class:TiXmlParsingData	file:	access:private
TiXmlParsingData::stamp	tinyxml/tinyxmlparser.cpp	/^	const char*		stamp;$/;"	m	class:TiXmlParsingData	file:	access:private
TiXmlParsingData::tabsize	tinyxml/tinyxmlparser.cpp	/^	int				tabsize;$/;"	m	class:TiXmlParsingData	file:	access:private
TiXmlPrinter	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01730"><\/a><a class="code" href="classTiXmlPrinter.html">01730<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlPrinter.html" title="Print to memory functionality.">TiXmlPrinter<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlVisitor.html" title="Implements the interface to the &amp;quot;Visitor pattern&amp;quot; (see the Accept() method...">TiXmlVisitor<\/a>$/;"	c	class:TiXmlVisitor	file:	inherits:TiXmlVisitor	access:public
TiXmlPrinter	tinyxml/tinyxml.h	/^	TiXmlPrinter() : depth( 0 ), simpleTextPrint( false ),$/;"	f	class:TiXmlPrinter	access:public	signature:()
TiXmlPrinter	tinyxml/tinyxml.h	/^class TiXmlPrinter : public TiXmlVisitor$/;"	c	inherits:TiXmlVisitor
TiXmlPrinter::CStr	tinyxml/tinyxml.h	/^	const char* CStr()								{ return buffer.c_str(); }$/;"	f	class:TiXmlPrinter	access:public	signature:()
TiXmlPrinter::DoIndent	tinyxml/tinyxml.h	/^	void DoIndent()	{$/;"	f	class:TiXmlPrinter	access:private	signature:()
TiXmlPrinter::DoLineBreak	tinyxml/tinyxml.h	/^	void DoLineBreak() {$/;"	f	class:TiXmlPrinter	access:private	signature:()
TiXmlPrinter::Indent	tinyxml/tinyxml.h	/^	const char* Indent()							{ return indent.c_str(); }$/;"	f	class:TiXmlPrinter	access:public	signature:()
TiXmlPrinter::LineBreak	tinyxml/tinyxml.h	/^	const char* LineBreak()							{ return lineBreak.c_str(); }$/;"	f	class:TiXmlPrinter	access:public	signature:()
TiXmlPrinter::SetIndent	tinyxml/tinyxml.h	/^	void SetIndent( const char* _indent )			{ indent = _indent ? _indent : "" ; }$/;"	f	class:TiXmlPrinter	access:public	signature:( const char* _indent )
TiXmlPrinter::SetLineBreak	tinyxml/tinyxml.h	/^	void SetLineBreak( const char* _lineBreak )		{ lineBreak = _lineBreak ? _lineBreak : ""; }$/;"	f	class:TiXmlPrinter	access:public	signature:( const char* _lineBreak )
TiXmlPrinter::SetStreamPrinting	tinyxml/tinyxml.h	/^	void SetStreamPrinting()						{ indent = "";$/;"	f	class:TiXmlPrinter	access:public	signature:()
TiXmlPrinter::Size	tinyxml/tinyxml.h	/^	size_t Size()									{ return buffer.size(); }$/;"	f	class:TiXmlPrinter	access:public	signature:()
TiXmlPrinter::Str	tinyxml/tinyxml.h	/^	const std::string& Str()						{ return buffer; }$/;"	f	class:TiXmlPrinter	access:public	signature:()
TiXmlPrinter::TiXmlPrinter	tinyxml/tinyxml.h	/^	TiXmlPrinter() : depth( 0 ), simpleTextPrint( false ),$/;"	f	class:TiXmlPrinter	access:public	signature:()
TiXmlPrinter::Visit	tinyxml/tinyxml.cpp	/^bool TiXmlPrinter::Visit( const TiXmlComment& comment )$/;"	f	class:TiXmlPrinter	signature:( const TiXmlComment& comment )
TiXmlPrinter::Visit	tinyxml/tinyxml.cpp	/^bool TiXmlPrinter::Visit( const TiXmlDeclaration& declaration )$/;"	f	class:TiXmlPrinter	signature:( const TiXmlDeclaration& declaration )
TiXmlPrinter::Visit	tinyxml/tinyxml.cpp	/^bool TiXmlPrinter::Visit( const TiXmlText& text )$/;"	f	class:TiXmlPrinter	signature:( const TiXmlText& text )
TiXmlPrinter::Visit	tinyxml/tinyxml.cpp	/^bool TiXmlPrinter::Visit( const TiXmlUnknown& unknown )$/;"	f	class:TiXmlPrinter	signature:( const TiXmlUnknown& unknown )
TiXmlPrinter::Visit	tinyxml/tinyxml.h	/^	virtual bool Visit( const TiXmlComment& comment );$/;"	p	class:TiXmlPrinter	access:public	signature:( const TiXmlComment& comment )
TiXmlPrinter::Visit	tinyxml/tinyxml.h	/^	virtual bool Visit( const TiXmlDeclaration& declaration );$/;"	p	class:TiXmlPrinter	access:public	signature:( const TiXmlDeclaration& declaration )
TiXmlPrinter::Visit	tinyxml/tinyxml.h	/^	virtual bool Visit( const TiXmlText& text );$/;"	p	class:TiXmlPrinter	access:public	signature:( const TiXmlText& text )
TiXmlPrinter::Visit	tinyxml/tinyxml.h	/^	virtual bool Visit( const TiXmlUnknown& unknown );$/;"	p	class:TiXmlPrinter	access:public	signature:( const TiXmlUnknown& unknown )
TiXmlPrinter::VisitEnter	tinyxml/tinyxml.cpp	/^bool TiXmlPrinter::VisitEnter( const TiXmlDocument& )$/;"	f	class:TiXmlPrinter	signature:( const TiXmlDocument& )
TiXmlPrinter::VisitEnter	tinyxml/tinyxml.cpp	/^bool TiXmlPrinter::VisitEnter( const TiXmlElement& element, const TiXmlAttribute* firstAttribute )$/;"	f	class:TiXmlPrinter	signature:( const TiXmlElement& element, const TiXmlAttribute* firstAttribute )
TiXmlPrinter::VisitEnter	tinyxml/tinyxml.h	/^	virtual bool VisitEnter( const TiXmlDocument& doc );$/;"	p	class:TiXmlPrinter	access:public	signature:( const TiXmlDocument& doc )
TiXmlPrinter::VisitEnter	tinyxml/tinyxml.h	/^	virtual bool VisitEnter( const TiXmlElement& element, const TiXmlAttribute* firstAttribute );$/;"	p	class:TiXmlPrinter	access:public	signature:( const TiXmlElement& element, const TiXmlAttribute* firstAttribute )
TiXmlPrinter::VisitExit	tinyxml/tinyxml.cpp	/^bool TiXmlPrinter::VisitExit( const TiXmlDocument& )$/;"	f	class:TiXmlPrinter	signature:( const TiXmlDocument& )
TiXmlPrinter::VisitExit	tinyxml/tinyxml.cpp	/^bool TiXmlPrinter::VisitExit( const TiXmlElement& element )$/;"	f	class:TiXmlPrinter	signature:( const TiXmlElement& element )
TiXmlPrinter::VisitExit	tinyxml/tinyxml.h	/^	virtual bool VisitExit( const TiXmlDocument& doc );$/;"	p	class:TiXmlPrinter	access:public	signature:( const TiXmlDocument& doc )
TiXmlPrinter::VisitExit	tinyxml/tinyxml.h	/^	virtual bool VisitExit( const TiXmlElement& element );$/;"	p	class:TiXmlPrinter	access:public	signature:( const TiXmlElement& element )
TiXmlPrinter::buffer	tinyxml/tinyxml.h	/^	TIXML_STRING buffer;$/;"	m	class:TiXmlPrinter	access:private
TiXmlPrinter::depth	tinyxml/tinyxml.h	/^	int depth;$/;"	m	class:TiXmlPrinter	access:private
TiXmlPrinter::indent	tinyxml/tinyxml.h	/^	TIXML_STRING indent;$/;"	m	class:TiXmlPrinter	access:private
TiXmlPrinter::lineBreak	tinyxml/tinyxml.h	/^	TIXML_STRING lineBreak;$/;"	m	class:TiXmlPrinter	access:private
TiXmlPrinter::simpleTextPrint	tinyxml/tinyxml.h	/^	bool simpleTextPrint;$/;"	m	class:TiXmlPrinter	access:private
TiXmlString	tinyxml/tinystr.h	/^	TIXML_EXPLICIT TiXmlString ( const char * copy) : rep_(0)$/;"	f	class:TiXmlString	access:public	signature:( const char * copy)
TiXmlString	tinyxml/tinystr.h	/^	TIXML_EXPLICIT TiXmlString ( const char * str, size_type len) : rep_(0)$/;"	f	class:TiXmlString	access:public	signature:( const char * str, size_type len)
TiXmlString	tinyxml/tinystr.h	/^	TiXmlString ( const TiXmlString & copy) : rep_(0)$/;"	f	class:TiXmlString	access:public	signature:( const TiXmlString & copy)
TiXmlString	tinyxml/tinystr.h	/^	TiXmlString () : rep_(&nullrep_)$/;"	f	class:TiXmlString	access:public	signature:()
TiXmlString	tinyxml/tinystr.h	/^class TiXmlString$/;"	c
TiXmlString::Rep	tinyxml/tinystr.h	/^	struct Rep$/;"	s	class:TiXmlString	access:private
TiXmlString::Rep::capacity	tinyxml/tinystr.h	/^		size_type size, capacity;$/;"	m	struct:TiXmlString::Rep	access:public
TiXmlString::Rep::size	tinyxml/tinystr.h	/^		size_type size, capacity;$/;"	m	struct:TiXmlString::Rep	access:public
TiXmlString::Rep::str	tinyxml/tinystr.h	/^		char str[1];$/;"	m	struct:TiXmlString::Rep	access:public
TiXmlString::TiXmlString	tinyxml/tinystr.h	/^	TIXML_EXPLICIT TiXmlString ( const char * copy) : rep_(0)$/;"	f	class:TiXmlString	access:public	signature:( const char * copy)
TiXmlString::TiXmlString	tinyxml/tinystr.h	/^	TIXML_EXPLICIT TiXmlString ( const char * str, size_type len) : rep_(0)$/;"	f	class:TiXmlString	access:public	signature:( const char * str, size_type len)
TiXmlString::TiXmlString	tinyxml/tinystr.h	/^	TiXmlString ( const TiXmlString & copy) : rep_(0)$/;"	f	class:TiXmlString	access:public	signature:( const TiXmlString & copy)
TiXmlString::TiXmlString	tinyxml/tinystr.h	/^	TiXmlString () : rep_(&nullrep_)$/;"	f	class:TiXmlString	access:public	signature:()
TiXmlString::append	tinyxml/tinystr.cpp	/^TiXmlString& TiXmlString::append(const char* str, size_type len)$/;"	f	class:TiXmlString	signature:(const char* str, size_type len)
TiXmlString::append	tinyxml/tinystr.h	/^	TiXmlString& append (const char* str, size_type len);$/;"	p	class:TiXmlString	access:public	signature:(const char* str, size_type len)
TiXmlString::assign	tinyxml/tinystr.cpp	/^TiXmlString& TiXmlString::assign(const char* str, size_type len)$/;"	f	class:TiXmlString	signature:(const char* str, size_type len)
TiXmlString::assign	tinyxml/tinystr.h	/^	TiXmlString& assign (const char* str, size_type len);$/;"	p	class:TiXmlString	access:public	signature:(const char* str, size_type len)
TiXmlString::at	tinyxml/tinystr.h	/^	const char& at (size_type index) const$/;"	f	class:TiXmlString	access:public	signature:(size_type index) const
TiXmlString::c_str	tinyxml/tinystr.h	/^	const char * c_str () const { return rep_->str; }$/;"	f	class:TiXmlString	access:public	signature:() const
TiXmlString::capacity	tinyxml/tinystr.h	/^	size_type capacity () const { return rep_->capacity; }$/;"	f	class:TiXmlString	access:public	signature:() const
TiXmlString::clear	tinyxml/tinystr.h	/^	void clear ()$/;"	f	class:TiXmlString	access:public	signature:()
TiXmlString::data	tinyxml/tinystr.h	/^	const char * data () const { return rep_->str; }$/;"	f	class:TiXmlString	access:public	signature:() const
TiXmlString::empty	tinyxml/tinystr.h	/^	bool empty () const { return rep_->size == 0; }$/;"	f	class:TiXmlString	access:public	signature:() const
TiXmlString::find	tinyxml/tinystr.h	/^	size_type find (char lookup) const$/;"	f	class:TiXmlString	access:public	signature:(char lookup) const
TiXmlString::find	tinyxml/tinystr.h	/^	size_type find (char tofind, size_type offset) const$/;"	f	class:TiXmlString	access:public	signature:(char tofind, size_type offset) const
TiXmlString::finish	tinyxml/tinystr.h	/^	char* finish() const { return rep_->str + rep_->size; }$/;"	f	class:TiXmlString	access:private	signature:() const
TiXmlString::init	tinyxml/tinystr.h	/^	void init(size_type sz) { init(sz, sz); }$/;"	f	class:TiXmlString	access:private	signature:(size_type sz)
TiXmlString::init	tinyxml/tinystr.h	/^	void init(size_type sz, size_type cap)$/;"	f	class:TiXmlString	access:private	signature:(size_type sz, size_type cap)
TiXmlString::length	tinyxml/tinystr.h	/^	size_type length () const { return rep_->size; }$/;"	f	class:TiXmlString	access:public	signature:() const
TiXmlString::npos	tinyxml/tinystr.cpp	/^const TiXmlString::size_type TiXmlString::npos = static_cast< TiXmlString::size_type >(-1);$/;"	m	class:TiXmlString	file:
TiXmlString::npos	tinyxml/tinystr.h	/^	static const size_type npos; \/\/ = -1;$/;"	m	class:TiXmlString	access:public
TiXmlString::nullrep_	tinyxml/tinystr.cpp	/^TiXmlString::Rep TiXmlString::nullrep_ = { 0, 0, { '\\0' } };$/;"	m	class:TiXmlString	file:
TiXmlString::nullrep_	tinyxml/tinystr.h	/^	static Rep nullrep_;$/;"	m	class:TiXmlString	access:private
TiXmlString::operator +=	tinyxml/tinystr.h	/^	TiXmlString& operator += (char single)$/;"	f	class:TiXmlString	access:public	signature:(char single)
TiXmlString::operator +=	tinyxml/tinystr.h	/^	TiXmlString& operator += (const TiXmlString & suffix)$/;"	f	class:TiXmlString	access:public	signature:(const TiXmlString & suffix)
TiXmlString::operator +=	tinyxml/tinystr.h	/^	TiXmlString& operator += (const char * suffix)$/;"	f	class:TiXmlString	access:public	signature:(const char * suffix)
TiXmlString::operator =	tinyxml/tinystr.h	/^	TiXmlString& operator = (const TiXmlString & copy)$/;"	f	class:TiXmlString	access:public	signature:(const TiXmlString & copy)
TiXmlString::operator =	tinyxml/tinystr.h	/^	TiXmlString& operator = (const char * copy)$/;"	f	class:TiXmlString	access:public	signature:(const char * copy)
TiXmlString::operator []	tinyxml/tinystr.h	/^	char& operator [] (size_type index) const$/;"	f	class:TiXmlString	access:public	signature:(size_type index) const
TiXmlString::quit	tinyxml/tinystr.h	/^	void quit()$/;"	f	class:TiXmlString	access:private	signature:()
TiXmlString::rep_	tinyxml/tinystr.h	/^	Rep * rep_;$/;"	m	class:TiXmlString	access:private
TiXmlString::reserve	tinyxml/tinystr.cpp	/^void TiXmlString::reserve (size_type cap)$/;"	f	class:TiXmlString	signature:(size_type cap)
TiXmlString::reserve	tinyxml/tinystr.h	/^	void reserve (size_type cap);$/;"	p	class:TiXmlString	access:public	signature:(size_type cap)
TiXmlString::set_size	tinyxml/tinystr.h	/^	void set_size(size_type sz) { rep_->str[ rep_->size = sz ] = '\\0'; }$/;"	f	class:TiXmlString	access:private	signature:(size_type sz)
TiXmlString::size	tinyxml/tinystr.h	/^	size_type size () const { return rep_->size; }$/;"	f	class:TiXmlString	access:public	signature:() const
TiXmlString::size_type	tinyxml/tinystr.h	/^  	typedef size_t size_type;$/;"	t	class:TiXmlString	access:public
TiXmlString::start	tinyxml/tinystr.h	/^	char* start() const { return rep_->str; }$/;"	f	class:TiXmlString	access:private	signature:() const
TiXmlString::swap	tinyxml/tinystr.h	/^	void swap (TiXmlString& other)$/;"	f	class:TiXmlString	access:public	signature:(TiXmlString& other)
TiXmlString::~TiXmlString	tinyxml/tinystr.h	/^	~TiXmlString ()$/;"	f	class:TiXmlString	access:public	signature:()
TiXmlText	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01205"><\/a><a class="code" href="classTiXmlText.html">01205<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlText.html" title="XML text.">TiXmlText<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>$/;"	c	class:TiXmlVisitor	file:	inherits:TiXmlNode	access:public
TiXmlText	tinyxml/tinyxml.h	/^	TiXmlText (const char * initValue ) : TiXmlNode (TiXmlNode::TINYXML_TEXT)$/;"	f	class:TiXmlText	access:public	signature:(const char * initValue )
TiXmlText	tinyxml/tinyxml.h	/^	TiXmlText( const TiXmlText& copy ) : TiXmlNode( TiXmlNode::TINYXML_TEXT )	{ copy.CopyTo( this ); }$/;"	f	class:TiXmlText	access:public	signature:( const TiXmlText& copy )
TiXmlText	tinyxml/tinyxml.h	/^	TiXmlText( const std::string& initValue ) : TiXmlNode (TiXmlNode::TINYXML_TEXT)$/;"	f	class:TiXmlText	access:public	signature:( const std::string& initValue )
TiXmlText	tinyxml/tinyxml.h	/^class TiXmlText : public TiXmlNode$/;"	c	inherits:TiXmlNode
TiXmlText::Accept	tinyxml/tinyxml.cpp	/^bool TiXmlText::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlText	signature:( TiXmlVisitor* visitor ) const
TiXmlText::Accept	tinyxml/tinyxml.h	/^	virtual bool Accept( TiXmlVisitor* content ) const;$/;"	p	class:TiXmlText	access:public	signature:( TiXmlVisitor* content ) const
TiXmlText::Blank	tinyxml/tinyxml.h	/^	bool Blank() const;	\/\/ returns true if all white space and new lines$/;"	p	class:TiXmlText	access:protected	signature:() const
TiXmlText::Blank	tinyxml/tinyxmlparser.cpp	/^bool TiXmlText::Blank() const$/;"	f	class:TiXmlText	signature:() const
TiXmlText::CDATA	tinyxml/tinyxml.h	/^	bool CDATA() const				{ return cdata; }$/;"	f	class:TiXmlText	access:public	signature:() const
TiXmlText::Clone	tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlText::Clone() const$/;"	f	class:TiXmlText	signature:() const
TiXmlText::Clone	tinyxml/tinyxml.h	/^	virtual TiXmlNode* Clone() const;$/;"	p	class:TiXmlText	access:protected	signature:() const
TiXmlText::CopyTo	tinyxml/tinyxml.cpp	/^void TiXmlText::CopyTo( TiXmlText* target ) const$/;"	f	class:TiXmlText	signature:( TiXmlText* target ) const
TiXmlText::CopyTo	tinyxml/tinyxml.h	/^	void CopyTo( TiXmlText* target ) const;$/;"	p	class:TiXmlText	access:protected	signature:( TiXmlText* target ) const
TiXmlText::Parse	tinyxml/tinyxml.h	/^	virtual const char* Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	p	class:TiXmlText	access:public	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )
TiXmlText::Parse	tinyxml/tinyxmlparser.cpp	/^const char* TiXmlText::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlText	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )
TiXmlText::Print	tinyxml/tinyxml.cpp	/^void TiXmlText::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlText	signature:( FILE* cfile, int depth ) const
TiXmlText::Print	tinyxml/tinyxml.h	/^	virtual void Print( FILE* cfile, int depth ) const;$/;"	p	class:TiXmlText	access:public	signature:( FILE* cfile, int depth ) const
TiXmlText::SetCDATA	tinyxml/tinyxml.h	/^	void SetCDATA( bool _cdata )	{ cdata = _cdata; }$/;"	f	class:TiXmlText	access:public	signature:( bool _cdata )
TiXmlText::StreamIn	tinyxml/tinyxml.h	/^	virtual void StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	p	class:TiXmlText	access:protected	signature:( std::istream * in, TIXML_STRING * tag )
TiXmlText::StreamIn	tinyxml/tinyxmlparser.cpp	/^void TiXmlText::StreamIn( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlText	signature:( std::istream * in, TIXML_STRING * tag )
TiXmlText::TiXmlText	tinyxml/tinyxml.h	/^	TiXmlText (const char * initValue ) : TiXmlNode (TiXmlNode::TINYXML_TEXT)$/;"	f	class:TiXmlText	access:public	signature:(const char * initValue )
TiXmlText::TiXmlText	tinyxml/tinyxml.h	/^	TiXmlText( const TiXmlText& copy ) : TiXmlNode( TiXmlNode::TINYXML_TEXT )	{ copy.CopyTo( this ); }$/;"	f	class:TiXmlText	access:public	signature:( const TiXmlText& copy )
TiXmlText::TiXmlText	tinyxml/tinyxml.h	/^	TiXmlText( const std::string& initValue ) : TiXmlNode (TiXmlNode::TINYXML_TEXT)$/;"	f	class:TiXmlText	access:public	signature:( const std::string& initValue )
TiXmlText::ToText	tinyxml/tinyxml.h	/^	virtual TiXmlText*       ToText()       { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlText	access:public	signature:()
TiXmlText::ToText	tinyxml/tinyxml.h	/^	virtual const TiXmlText* ToText() const { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlText	access:public	signature:() const
TiXmlText::cdata	tinyxml/tinyxml.h	/^	bool cdata;			\/\/ true if this should be input and output as a CDATA style text element$/;"	m	class:TiXmlText	access:private
TiXmlText::operator =	tinyxml/tinyxml.h	/^	void operator=( const TiXmlText& base )							 	{ base.CopyTo( this ); }$/;"	f	class:TiXmlText	access:public	signature:( const TiXmlText& base )
TiXmlText::~TiXmlText	tinyxml/tinyxml.h	/^	virtual ~TiXmlText() {}$/;"	f	class:TiXmlText	access:public	signature:()
TiXmlUnknown	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01347"><\/a><a class="code" href="classTiXmlUnknown.html">01347<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlUnknown.html" title="Any tag that tinyXml doesn&amp;#39;t recognize is saved as an unknown.">TiXmlUnknown<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>$/;"	c	class:TiXmlVisitor	file:	inherits:TiXmlNode	access:public
TiXmlUnknown	tinyxml/tinyxml.h	/^	TiXmlUnknown( const TiXmlUnknown& copy ) : TiXmlNode( TiXmlNode::TINYXML_UNKNOWN )		{ copy.CopyTo( this ); }$/;"	f	class:TiXmlUnknown	access:public	signature:( const TiXmlUnknown& copy )
TiXmlUnknown	tinyxml/tinyxml.h	/^	TiXmlUnknown() : TiXmlNode( TiXmlNode::TINYXML_UNKNOWN )	{}$/;"	f	class:TiXmlUnknown	access:public	signature:()
TiXmlUnknown	tinyxml/tinyxml.h	/^class TiXmlUnknown : public TiXmlNode$/;"	c	inherits:TiXmlNode
TiXmlUnknown::Accept	tinyxml/tinyxml.cpp	/^bool TiXmlUnknown::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlUnknown	signature:( TiXmlVisitor* visitor ) const
TiXmlUnknown::Accept	tinyxml/tinyxml.h	/^	virtual bool Accept( TiXmlVisitor* content ) const;$/;"	p	class:TiXmlUnknown	access:public	signature:( TiXmlVisitor* content ) const
TiXmlUnknown::Clone	tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlUnknown::Clone() const$/;"	f	class:TiXmlUnknown	signature:() const
TiXmlUnknown::Clone	tinyxml/tinyxml.h	/^	virtual TiXmlNode* Clone() const;$/;"	p	class:TiXmlUnknown	access:public	signature:() const
TiXmlUnknown::CopyTo	tinyxml/tinyxml.cpp	/^void TiXmlUnknown::CopyTo( TiXmlUnknown* target ) const$/;"	f	class:TiXmlUnknown	signature:( TiXmlUnknown* target ) const
TiXmlUnknown::CopyTo	tinyxml/tinyxml.h	/^	void CopyTo( TiXmlUnknown* target ) const;$/;"	p	class:TiXmlUnknown	access:protected	signature:( TiXmlUnknown* target ) const
TiXmlUnknown::Parse	tinyxml/tinyxml.h	/^	virtual const char* Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	p	class:TiXmlUnknown	access:public	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )
TiXmlUnknown::Parse	tinyxml/tinyxmlparser.cpp	/^const char* TiXmlUnknown::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlUnknown	signature:( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )
TiXmlUnknown::Print	tinyxml/tinyxml.cpp	/^void TiXmlUnknown::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlUnknown	signature:( FILE* cfile, int depth ) const
TiXmlUnknown::Print	tinyxml/tinyxml.h	/^	virtual void Print( FILE* cfile, int depth ) const;$/;"	p	class:TiXmlUnknown	access:public	signature:( FILE* cfile, int depth ) const
TiXmlUnknown::StreamIn	tinyxml/tinyxml.h	/^	virtual void StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	p	class:TiXmlUnknown	access:protected	signature:( std::istream * in, TIXML_STRING * tag )
TiXmlUnknown::StreamIn	tinyxml/tinyxmlparser.cpp	/^void TiXmlUnknown::StreamIn( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlUnknown	signature:( std::istream * in, TIXML_STRING * tag )
TiXmlUnknown::TiXmlUnknown	tinyxml/tinyxml.h	/^	TiXmlUnknown( const TiXmlUnknown& copy ) : TiXmlNode( TiXmlNode::TINYXML_UNKNOWN )		{ copy.CopyTo( this ); }$/;"	f	class:TiXmlUnknown	access:public	signature:( const TiXmlUnknown& copy )
TiXmlUnknown::TiXmlUnknown	tinyxml/tinyxml.h	/^	TiXmlUnknown() : TiXmlNode( TiXmlNode::TINYXML_UNKNOWN )	{}$/;"	f	class:TiXmlUnknown	access:public	signature:()
TiXmlUnknown::ToUnknown	tinyxml/tinyxml.h	/^	virtual TiXmlUnknown*           ToUnknown()	    { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlUnknown	access:public	signature:()
TiXmlUnknown::ToUnknown	tinyxml/tinyxml.h	/^	virtual const TiXmlUnknown*     ToUnknown()     const { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlUnknown	access:public	signature:() const
TiXmlUnknown::operator =	tinyxml/tinyxml.h	/^	void operator=( const TiXmlUnknown& copy )										{ copy.CopyTo( this ); }$/;"	f	class:TiXmlUnknown	access:public	signature:( const TiXmlUnknown& copy )
TiXmlUnknown::~TiXmlUnknown	tinyxml/tinyxml.h	/^	virtual ~TiXmlUnknown() {}$/;"	f	class:TiXmlUnknown	access:public	signature:()
TiXmlVisitor	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00128"><\/a><a class="code" href="classTiXmlVisitor.html">00128<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlVisitor.html" title="Implements the interface to the &amp;quot;Visitor pattern&amp;quot; (see the Accept() method...">TiXmlVisitor<\/a>$/;"	c	file:
TiXmlVisitor	tinyxml/tinyxml.h	/^class TiXmlVisitor$/;"	c
TiXmlVisitor::TIXML_DEFAULT_ENCODING	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00170"><\/a>00170 <span class="keyword">const<\/span> TiXmlEncoding TIXML_DEFAULT_ENCODING = TIXML_ENCODING_UNKNOWN;$/;"	m	class:TiXmlVisitor	file:	access:public
TiXmlVisitor::TIXML_ENCODING_LEGACY	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00167"><\/a>00167     TIXML_ENCODING_LEGACY$/;"	e	enum:TiXmlVisitor::TiXmlEncoding	file:
TiXmlVisitor::TIXML_ENCODING_UNKNOWN	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00165"><\/a>00165     TIXML_ENCODING_UNKNOWN,$/;"	e	enum:TiXmlVisitor::TiXmlEncoding	file:
TiXmlVisitor::TIXML_ENCODING_UTF8	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00166"><\/a>00166     TIXML_ENCODING_UTF8,$/;"	e	enum:TiXmlVisitor::TiXmlEncoding	file:
TiXmlVisitor::TIXML_NO_ATTRIBUTE	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00157"><\/a>00157     TIXML_NO_ATTRIBUTE,$/;"	e	enum:TiXmlVisitor::__anon6	file:
TiXmlVisitor::TIXML_SUCCESS	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00156"><\/a>00156     TIXML_SUCCESS,$/;"	e	enum:TiXmlVisitor::__anon6	file:
TiXmlVisitor::TIXML_WRONG_TYPE	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00158"><\/a>00158     TIXML_WRONG_TYPE$/;"	e	enum:TiXmlVisitor::__anon6	file:
TiXmlVisitor::TiXmlAttribute	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00779"><\/a><a class="code" href="classTiXmlAttribute.html">00779<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlBase.html" title="TiXmlBase is a base class for every class in TinyXml.">TiXmlBase<\/a>$/;"	c	class:TiXmlVisitor	file:	inherits:TiXmlBase	access:public
TiXmlVisitor::TiXmlAttribute::Next	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00850"><\/a>00850     <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* <a class="code" href="classTiXmlAttribute.html#a1c78e92e223a40843f644ba48ef69f67" title="Get the next sibling attribute in the DOM. Returns null at end.">Next<\/a>() {$/;"	f	class:TiXmlVisitor::TiXmlAttribute	access:public	signature:()
TiXmlVisitor::TiXmlAttribute::Parse	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00867"><\/a>00867     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* Parse( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	p	class:TiXmlVisitor::TiXmlAttribute	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* p, TiXmlParsingData* data, TiXmlEncoding encoding )
TiXmlVisitor::TiXmlAttribute::Previous	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00856"><\/a>00856     <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* <a class="code" href="classTiXmlAttribute.html#a6ebbfe333fe76cd834bd6cbcca3130cf" title="Get the previous sibling attribute in the DOM. Returns null at beginning.">Previous<\/a>() {$/;"	f	class:TiXmlVisitor::TiXmlAttribute	access:public	signature:()
TiXmlVisitor::TiXmlAttribute::SetDocument	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00877"><\/a>00877     <span class="keywordtype">void<\/span> SetDocument( <a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a>* doc )  { document = doc; }$/;"	f	class:TiXmlVisitor::TiXmlAttribute	access:public	signature:( <a class=” href=” title=”>TiXmlDocument</a>* doc )
TiXmlVisitor::TiXmlAttribute::SetDoubleValue	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00839"><\/a>00839     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlAttribute.html#a0316da31373496c4368ad549bf711394" title="Set the value from a double.">SetDoubleValue<\/a>( <span class="keywordtype">double<\/span> _value );                               $/;"	p	class:TiXmlVisitor::TiXmlAttribute	file:	access:public	signature:( <span class=”>double</span> _value )
TiXmlVisitor::TiXmlAttribute::SetIntValue	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00838"><\/a>00838     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlAttribute.html#a7e065df640116a62ea4f4b7da5449cc8" title="Set the value from an integer.">SetIntValue<\/a>( <span class="keywordtype">int<\/span> _value );                                     $/;"	p	class:TiXmlVisitor::TiXmlAttribute	file:	access:public	signature:( <span class=”>int</span> _value )
TiXmlVisitor::TiXmlAttribute::SetName	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00835"><\/a><a class="code" href="classTiXmlAttribute.html#ab7fa3d21ff8d7c5764cf9af15b667a99">00835<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlAttribute.html#ab7fa3d21ff8d7c5764cf9af15b667a99" title="Set the name of this attribute.">SetName<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _name )   { name = _name; }               $/;"	f	class:TiXmlVisitor::TiXmlAttribute	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* _name )
TiXmlVisitor::TiXmlAttribute::SetValue	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00836"><\/a><a class="code" href="classTiXmlAttribute.html#a2dae44178f668b3cb48101be4f2236a0">00836<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlAttribute.html#a2dae44178f668b3cb48101be4f2236a0" title="Set the value.">SetValue<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _value ) { value = _value; }             $/;"	f	class:TiXmlVisitor::TiXmlAttribute	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* _value )
TiXmlVisitor::TiXmlAttribute::amp	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00820"><\/a>00820     <span class="keyword">const<\/span> TIXML_STRING&amp; NameTStr()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> name; }$/;"	m	class:TiXmlVisitor::TiXmlAttribute	file:	access:public
TiXmlVisitor::TiXmlAttribute::amp	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00861"><\/a>00861     <span class="keywordtype">bool<\/span> operator&lt;( <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>&amp; rhs )<span class="keyword">  const <\/span>{ <span class="keywordflow">return<\/span> name &lt; rhs.name; }$/;"	m	class:TiXmlVisitor::TiXmlAttribute	file:	access:public
TiXmlVisitor::TiXmlAttribute::amp	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00862"><\/a>00862     <span class="keywordtype">bool<\/span> operator&gt;( <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>&amp; rhs )<span class="keyword">  const <\/span>{ <span class="keywordflow">return<\/span> name &gt; rhs.name; }$/;"	m	class:TiXmlVisitor::TiXmlAttribute	file:	access:public
TiXmlVisitor::TiXmlAttribute::document	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00883"><\/a>00883     <a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a>*  document;   <span class="comment">\/\/ A pointer back to a document, for error reporting.<\/span>$/;"	m	class:TiXmlVisitor::TiXmlAttribute	file:	access:private
TiXmlVisitor::TiXmlAttribute::gt	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00862"><\/a>00862     <span class="keywordtype">bool<\/span> operator&gt;( <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>&amp; rhs )<span class="keyword">  const <\/span>{ <span class="keywordflow">return<\/span> name &gt; rhs.name; }$/;"	m	class:TiXmlVisitor::TiXmlAttribute	file:	access:public
TiXmlVisitor::TiXmlAttribute::lt	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00861"><\/a>00861     <span class="keywordtype">bool<\/span> operator&lt;( <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>&amp; rhs )<span class="keyword">  const <\/span>{ <span class="keywordflow">return<\/span> name &lt; rhs.name; }$/;"	m	class:TiXmlVisitor::TiXmlAttribute	file:	access:public
TiXmlVisitor::TiXmlAttribute::name	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00786"><\/a>00786     {$/;"	m	class:TiXmlVisitor::TiXmlAttribute	file:	access:public
TiXmlVisitor::TiXmlAttribute::name	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00884"><\/a>00884     TIXML_STRING name;$/;"	m	class:TiXmlVisitor::TiXmlAttribute	file:	access:private
TiXmlVisitor::TiXmlAttribute::next	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00887"><\/a>00887     <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* next;$/;"	m	class:TiXmlVisitor::TiXmlAttribute	file:	access:private
TiXmlVisitor::TiXmlAttribute::prev	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00886"><\/a>00886     <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* prev;$/;"	m	class:TiXmlVisitor::TiXmlAttribute	file:	access:private
TiXmlVisitor::TiXmlAttribute::value	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00885"><\/a>00885     TIXML_STRING value;$/;"	m	class:TiXmlVisitor::TiXmlAttribute	file:	access:private
TiXmlVisitor::TiXmlAttributeSet	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00903"><\/a>00903 <span class="keyword">class <\/span>TiXmlAttributeSet$/;"	c	class:TiXmlVisitor	file:	access:public
TiXmlVisitor::TiXmlAttributeSet::Add	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00909"><\/a>00909     <span class="keywordtype">void<\/span> Add( <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* attribute );$/;"	p	class:TiXmlVisitor::TiXmlAttributeSet	file:	access:public	signature:( <a class=” href=” title=”>TiXmlAttribute</a>* attribute )
TiXmlVisitor::TiXmlAttributeSet::FindOrCreate	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00918"><\/a>00918     <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* FindOrCreate( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _name );$/;"	p	class:TiXmlVisitor::TiXmlAttributeSet	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* _name )
TiXmlVisitor::TiXmlAttributeSet::Remove	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00910"><\/a>00910     <span class="keywordtype">void<\/span> Remove( <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* attribute );$/;"	p	class:TiXmlVisitor::TiXmlAttributeSet	file:	access:public	signature:( <a class=” href=” title=”>TiXmlAttribute</a>* attribute )
TiXmlVisitor::TiXmlAttributeSet::TiXmlAttributeSet	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00906"><\/a>00906     TiXmlAttributeSet();$/;"	p	class:TiXmlVisitor::TiXmlAttributeSet	file:	access:public	signature:()
TiXmlVisitor::TiXmlAttributeSet::sentinel	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00932"><\/a>00932     <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a> sentinel;$/;"	m	class:TiXmlVisitor::TiXmlAttributeSet	file:	access:private
TiXmlVisitor::TiXmlAttributeSet::~TiXmlAttributeSet	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00907"><\/a>00907     ~TiXmlAttributeSet();$/;"	p	class:TiXmlVisitor::TiXmlAttributeSet	file:	access:public	signature:()
TiXmlVisitor::TiXmlBase	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00194"><\/a><a class="code" href="classTiXmlBase.html">00194<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlBase.html" title="TiXmlBase is a base class for every class in TinyXml.">TiXmlBase<\/a>$/;"	c	class:TiXmlVisitor	file:	access:public
TiXmlVisitor::TiXmlBase::Entity	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00400"><\/a>00400     <span class="keyword">struct <\/span>Entity$/;"	s	class:TiXmlVisitor::TiXmlBase	file:	access:private
TiXmlVisitor::TiXmlBase::Entity::chr	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00404"><\/a>00404         <span class="keywordtype">char<\/span>            chr;$/;"	m	struct:TiXmlVisitor::TiXmlBase::Entity	file:	access:public
TiXmlVisitor::TiXmlBase::Entity::str	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00402"><\/a>00402         <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>*     str;$/;"	m	struct:TiXmlVisitor::TiXmlBase::Entity	file:	access:public
TiXmlVisitor::TiXmlBase::Entity::strLength	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00403"><\/a>00403         <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span>    strLength;$/;"	m	struct:TiXmlVisitor::TiXmlBase::Entity	file:	access:public
TiXmlVisitor::TiXmlBase::GetEntity	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00323"><\/a>00323     <span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* GetEntity( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* in, <span class="keywordtype">char<\/span>* value, <span class="keywordtype">int<\/span>* length, TiXmlEncoding encoding );$/;"	p	class:TiXmlVisitor::TiXmlBase	file:	access:protected	signature:( <span class=”>const</span> <span class=”>char</span>* in, <span class=”>char</span>* value, <span class=”>int</span>* length, TiXmlEncoding encoding )
TiXmlVisitor::TiXmlBase::IsAlpha	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00380"><\/a>00380     <span class="keyword">static<\/span> <span class="keywordtype">int<\/span> IsAlpha( <span class="keywordtype">unsigned<\/span> <span class="keywordtype">char<\/span> anyByte, TiXmlEncoding encoding );$/;"	p	class:TiXmlVisitor::TiXmlBase	file:	access:protected	signature:( <span class=”>unsigned</span> <span class=”>char</span> anyByte, TiXmlEncoding encoding )
TiXmlVisitor::TiXmlBase::IsAlphaNum	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00381"><\/a>00381     <span class="keyword">static<\/span> <span class="keywordtype">int<\/span> IsAlphaNum( <span class="keywordtype">unsigned<\/span> <span class="keywordtype">char<\/span> anyByte, TiXmlEncoding encoding );$/;"	p	class:TiXmlVisitor::TiXmlBase	file:	access:protected	signature:( <span class=”>unsigned</span> <span class=”>char</span> anyByte, TiXmlEncoding encoding )
TiXmlVisitor::TiXmlBase::IsWhiteSpaceCondensed	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00224"><\/a><a class="code" href="classTiXmlBase.html#ad4b1472531c647a25b1840a87ae42438">00224<\/a>     <span class="keyword">static<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlBase.html#ad4b1472531c647a25b1840a87ae42438" title="Return the current white space setting.">IsWhiteSpaceCondensed<\/a>()                     { <span class="keywordflow">return<\/span> condenseWhiteSpace; }$/;"	f	class:TiXmlVisitor::TiXmlBase	access:public	signature:()
TiXmlVisitor::TiXmlBase::MAX_ENTITY_LENGTH	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00409"><\/a>00409         MAX_ENTITY_LENGTH = 6$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon8	file:
TiXmlVisitor::TiXmlBase::NUM_ENTITY	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00408"><\/a>00408         NUM_ENTITY = 5,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon8	file:
TiXmlVisitor::TiXmlBase::Parse	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00255"><\/a>00255     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* <a class="code" href="classTiXmlDocument.html#a17ebabe36926ef398e78dec0d0ad0378" title="Parse the given null terminated block of xml data.">Parse<\/a>(  <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, $/;"	p	class:TiXmlVisitor::TiXmlBase	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* p, <a name=”></a>00256 TiXmlParsingData* data, <a name=”></a>00257 TiXmlEncoding encoding <span class=”> </span> )
TiXmlVisitor::TiXmlBase::ReadName	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00310"><\/a>00310     <span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* ReadName( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TIXML_STRING* name, TiXmlEncoding encoding );$/;"	p	class:TiXmlVisitor::TiXmlBase	file:	access:protected	signature:( <span class=”>const</span> <span class=”>char</span>* p, TIXML_STRING* name, TiXmlEncoding encoding )
TiXmlVisitor::TiXmlBase::ReadText	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00315"><\/a>00315     <span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* ReadText(    <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* in,             <span class="comment">\/\/ where to start<\/span>$/;"	p	class:TiXmlVisitor::TiXmlBase	file:	access:protected	signature:( <span class=”>const</span> <span class=”>char</span>* in, <span class=”> <a name=”></a>00316 TIXML_STRING* text, <span class=”> <a name=”></a>00317 <span class=”>bool</span> ignoreWhiteSpace, <span class=”> <a name=”></a>00318 <span class=”>const</span> <span class=”>char</span>* endTag, <span class=”> <a name=”></a>00319 <span class=”>bool</span> ignoreCase, <span class=”> <a name=”></a>00320 TiXmlEncoding encoding )
TiXmlVisitor::TiXmlBase::SetCondenseWhiteSpace	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00221"><\/a><a class="code" href="classTiXmlBase.html#a0f799ec645bfb8d8a969e83478f379c1">00221<\/a>     <span class="keyword">static<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlBase.html#a0f799ec645bfb8d8a969e83478f379c1" title="The world does not agree on whether white space should be kept or not.">SetCondenseWhiteSpace<\/a>( <span class="keywordtype">bool<\/span> condense )      { condenseWhiteSpace = condense; }$/;"	f	class:TiXmlVisitor::TiXmlBase	access:public	signature:( <span class=”>bool</span> condense )
TiXmlVisitor::TiXmlBase::SkipWhiteSpace	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00288"><\/a>00288     <span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* SkipWhiteSpace( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>*, TiXmlEncoding encoding );$/;"	p	class:TiXmlVisitor::TiXmlBase	file:	access:protected	signature:( <span class=”>const</span> <span class=”>char</span>*, TiXmlEncoding encoding )
TiXmlVisitor::TiXmlBase::StreamTo	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00303"><\/a>00303     <span class="keyword">static<\/span> <span class="keywordtype">bool<\/span> StreamTo( std::istream * in, <span class="keywordtype">int<\/span> character, TIXML_STRING * tag );$/;"	p	class:TiXmlVisitor::TiXmlBase	file:	access:protected	signature:( std::istream * in, <span class=”>int</span> character, TIXML_STRING * tag )
TiXmlVisitor::TiXmlBase::TIXML_ERROR	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00267"><\/a>00267         TIXML_ERROR,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TiXmlVisitor::TiXmlBase::TIXML_ERROR_DOCUMENT_EMPTY	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00278"><\/a>00278         TIXML_ERROR_DOCUMENT_EMPTY,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TiXmlVisitor::TiXmlBase::TIXML_ERROR_DOCUMENT_TOP_ONLY	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00281"><\/a>00281         TIXML_ERROR_DOCUMENT_TOP_ONLY,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TiXmlVisitor::TiXmlBase::TIXML_ERROR_EMBEDDED_NULL	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00279"><\/a>00279         TIXML_ERROR_EMBEDDED_NULL,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TiXmlVisitor::TiXmlBase::TIXML_ERROR_FAILED_TO_READ_ELEMENT_NAME	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00270"><\/a>00270         TIXML_ERROR_FAILED_TO_READ_ELEMENT_NAME,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TiXmlVisitor::TiXmlBase::TIXML_ERROR_OPENING_FILE	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00268"><\/a>00268         TIXML_ERROR_OPENING_FILE,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TiXmlVisitor::TiXmlBase::TIXML_ERROR_PARSING_CDATA	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00280"><\/a>00280         TIXML_ERROR_PARSING_CDATA,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TiXmlVisitor::TiXmlBase::TIXML_ERROR_PARSING_COMMENT	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00276"><\/a>00276         TIXML_ERROR_PARSING_COMMENT,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TiXmlVisitor::TiXmlBase::TIXML_ERROR_PARSING_DECLARATION	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00277"><\/a>00277         TIXML_ERROR_PARSING_DECLARATION,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TiXmlVisitor::TiXmlBase::TIXML_ERROR_PARSING_ELEMENT	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00269"><\/a>00269         TIXML_ERROR_PARSING_ELEMENT,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TiXmlVisitor::TiXmlBase::TIXML_ERROR_PARSING_EMPTY	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00273"><\/a>00273         TIXML_ERROR_PARSING_EMPTY,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TiXmlVisitor::TiXmlBase::TIXML_ERROR_PARSING_UNKNOWN	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00275"><\/a>00275         TIXML_ERROR_PARSING_UNKNOWN,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TiXmlVisitor::TiXmlBase::TIXML_ERROR_READING_ATTRIBUTES	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00272"><\/a>00272         TIXML_ERROR_READING_ATTRIBUTES,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TiXmlVisitor::TiXmlBase::TIXML_ERROR_READING_ELEMENT_VALUE	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00271"><\/a>00271         TIXML_ERROR_READING_ELEMENT_VALUE,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TiXmlVisitor::TiXmlBase::TIXML_ERROR_READING_END_TAG	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00274"><\/a>00274         TIXML_ERROR_READING_END_TAG,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TiXmlVisitor::TiXmlBase::TIXML_ERROR_STRING_COUNT	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00283"><\/a>00283         TIXML_ERROR_STRING_COUNT$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TiXmlVisitor::TiXmlBase::TIXML_NO_ERROR	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00266"><\/a>00266         TIXML_NO_ERROR = 0,$/;"	e	enum:TiXmlVisitor::TiXmlBase::__anon7	file:
TiXmlVisitor::TiXmlBase::condenseWhiteSpace	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00413"><\/a>00413     <span class="keyword">static<\/span> <span class="keywordtype">bool<\/span> condenseWhiteSpace;$/;"	m	class:TiXmlVisitor::TiXmlBase	file:	access:private
TiXmlVisitor::TiXmlBase::entity	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00412"><\/a>00412     <span class="keyword">static<\/span> Entity entity[ NUM_ENTITY ];$/;"	m	class:TiXmlVisitor::TiXmlBase	file:	access:private
TiXmlVisitor::TiXmlBase::errorString	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00371"><\/a>00371     <span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* errorString[ TIXML_ERROR_STRING_COUNT ];$/;"	m	class:TiXmlVisitor::TiXmlBase	file:	access:protected
TiXmlVisitor::TiXmlBase::location	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00373"><\/a>00373     TiXmlCursor location;$/;"	m	class:TiXmlVisitor::TiXmlBase	file:	access:protected
TiXmlVisitor::TiXmlBase::name	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00291"><\/a>00291     { $/;"	m	class:TiXmlVisitor::TiXmlBase	file:	access:protected
TiXmlVisitor::TiXmlBase::name	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00328"><\/a>00328     {$/;"	m	class:TiXmlVisitor::TiXmlBase	file:	access:protected
TiXmlVisitor::TiXmlBase::name	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00383"><\/a>00383     {$/;"	m	class:TiXmlVisitor::TiXmlBase	file:	access:protected
TiXmlVisitor::TiXmlBase::userData	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00376"><\/a><a class="code" href="classTiXmlBase.html#ab242c01590191f644569fa89a080d97c">00376<\/a>     <span class="keywordtype">void<\/span>*           <a class="code" href="classTiXmlBase.html#ab242c01590191f644569fa89a080d97c" title="Field containing a generic user pointer.">userData<\/a>;$/;"	m	class:TiXmlVisitor::TiXmlBase	file:	access:protected
TiXmlVisitor::TiXmlComment	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01155"><\/a><a class="code" href="classTiXmlComment.html">01155<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlComment.html" title="An XML comment.">TiXmlComment<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>$/;"	c	class:TiXmlVisitor	file:	inherits:TiXmlNode	access:public
TiXmlVisitor::TiXmlComment::Parse	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01177"><\/a>01177     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* Parse( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	p	class:TiXmlVisitor::TiXmlComment	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* p, TiXmlParsingData* data, TiXmlEncoding encoding )
TiXmlVisitor::TiXmlComment::StreamIn	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01191"><\/a>01191 <span class="preprocessor"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	p	class:TiXmlVisitor::TiXmlComment	file:	access:protected	signature:( std::istream * in, TIXML_STRING * tag )
TiXmlVisitor::TiXmlComment::TiXmlNode	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01159"><\/a><a class="code" href="classTiXmlComment.html#aaa3252031d3e8bd3a2bf51a1c61201b7">01159<\/a>     <a class="code" href="classTiXmlComment.html#aaa3252031d3e8bd3a2bf51a1c61201b7" title="Constructs an empty comment.">TiXmlComment<\/a>() : <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>( <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>::TINYXML_COMMENT ) {}$/;"	f	class:TiXmlVisitor::TiXmlComment	access:public	signature:( <a class=” href=” title=”>TiXmlNode</a>::TINYXML_COMMENT )
TiXmlVisitor::TiXmlComment::TiXmlNode	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01161"><\/a><a class="code" href="classTiXmlComment.html#a37e7802ef17bc03ebe5ae79bf0713d47">01161<\/a>     <a class="code" href="classTiXmlComment.html#a37e7802ef17bc03ebe5ae79bf0713d47" title="Construct a comment from text.">TiXmlComment<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _value ) : <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>( <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>::TINYXML_COMMENT ) {$/;"	f	class:TiXmlVisitor::TiXmlComment	access:public	signature:( <a class=” href=” title=”>TiXmlNode</a>::TINYXML_COMMENT )
TiXmlVisitor::TiXmlDeclaration	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01278"><\/a><a class="code" href="classTiXmlDeclaration.html">01278<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlDeclaration.html" title="In correct XML the declaration is the first entry in the file.">TiXmlDeclaration<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>$/;"	c	class:TiXmlVisitor	file:	inherits:TiXmlNode	access:public
TiXmlVisitor::TiXmlDeclaration::StreamIn	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01329"><\/a>01329 <span class="preprocessor"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	p	class:TiXmlVisitor::TiXmlDeclaration	file:	access:protected	signature:( std::istream * in, TIXML_STRING * tag )
TiXmlVisitor::TiXmlDeclaration::TiXmlDeclaration	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01292"><\/a>01292     <a class="code" href="classTiXmlDeclaration.html#aa0484d059bea0ea1acb47c9094382d79" title="Construct an empty declaration.">TiXmlDeclaration<\/a>(   <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _version,$/;"	p	class:TiXmlVisitor::TiXmlDeclaration	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* _version, <a name=”></a>01293 <span class=”>const</span> <span class=”>char</span>* _encoding, <a name=”></a>01294 <span class=”>const</span> <span class=”>char</span>* _standalone )
TiXmlVisitor::TiXmlDeclaration::TiXmlNode	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01282"><\/a><a class="code" href="classTiXmlDeclaration.html#aa0484d059bea0ea1acb47c9094382d79">01282<\/a>     <a class="code" href="classTiXmlDeclaration.html#aa0484d059bea0ea1acb47c9094382d79" title="Construct an empty declaration.">TiXmlDeclaration<\/a>()   : <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>( <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>::TINYXML_DECLARATION ) {}$/;"	f	class:TiXmlVisitor::TiXmlDeclaration	access:public	signature:( <a class=” href=” title=”>TiXmlNode</a>::TINYXML_DECLARATION )
TiXmlVisitor::TiXmlDeclaration::encoding	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01335"><\/a>01335     TIXML_STRING encoding;$/;"	m	class:TiXmlVisitor::TiXmlDeclaration	file:	access:private
TiXmlVisitor::TiXmlDeclaration::standalone	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01336"><\/a>01336     TIXML_STRING standalone;$/;"	m	class:TiXmlVisitor::TiXmlDeclaration	file:	access:private
TiXmlVisitor::TiXmlDeclaration::version	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01334"><\/a>01334     TIXML_STRING version;$/;"	m	class:TiXmlVisitor::TiXmlDeclaration	file:	access:private
TiXmlVisitor::TiXmlDocument	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01386"><\/a><a class="code" href="classTiXmlDocument.html">01386<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>$/;"	c	class:TiXmlVisitor	file:	inherits:TiXmlNode	access:public
TiXmlVisitor::TiXmlDocument::LoadFile	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01412"><\/a>01412     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlDocument.html#a4c852a889c02cf251117fd1d9fe1845f" title="Load a file using the current document value.">LoadFile<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * filename, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING );$/;"	p	class:TiXmlVisitor::TiXmlDocument	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span> * filename, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING )
TiXmlVisitor::TiXmlDocument::LoadFile	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01420"><\/a>01420     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlDocument.html#a4c852a889c02cf251117fd1d9fe1845f" title="Load a file using the current document value.">LoadFile<\/a>( FILE*, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING );$/;"	p	class:TiXmlVisitor::TiXmlDocument	file:	access:public	signature:( FILE*, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING )
TiXmlVisitor::TiXmlDocument::Parse	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01439"><\/a>01439     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* <a class="code" href="classTiXmlDocument.html#a17ebabe36926ef398e78dec0d0ad0378" title="Parse the given null terminated block of xml data.">Parse<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TiXmlParsingData* data = 0, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING );$/;"	p	class:TiXmlVisitor::TiXmlDocument	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* p, TiXmlParsingData* data = 0, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING )
TiXmlVisitor::TiXmlDocument::SetError	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01523"><\/a>01523     <span class="keywordtype">void<\/span> SetError( <span class="keywordtype">int<\/span> err, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* errorLocation, TiXmlParsingData* prevData, TiXmlEncoding encoding );$/;"	p	class:TiXmlVisitor::TiXmlDocument	file:	access:public	signature:( <span class=”>int</span> err, <span class=”>const</span> <span class=”>char</span>* errorLocation, TiXmlParsingData* prevData, TiXmlEncoding encoding )
TiXmlVisitor::TiXmlDocument::StreamIn	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01536"><\/a>01536 <span class="preprocessor"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	p	class:TiXmlVisitor::TiXmlDocument	file:	access:protected	signature:( std::istream * in, TIXML_STRING * tag )
TiXmlVisitor::TiXmlDocument::TiXmlDocument	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01390"><\/a>01390     <a class="code" href="classTiXmlDocument.html#a9f5e84335708fde98400230f9f12659c" title="Create an empty document, that has no name.">TiXmlDocument<\/a>();$/;"	p	class:TiXmlVisitor::TiXmlDocument	file:	access:public	signature:()
TiXmlVisitor::TiXmlDocument::TiXmlDocument	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01392"><\/a>01392     <a class="code" href="classTiXmlDocument.html#a9f5e84335708fde98400230f9f12659c" title="Create an empty document, that has no name.">TiXmlDocument<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * documentName );$/;"	p	class:TiXmlVisitor::TiXmlDocument	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span> * documentName )
TiXmlVisitor::TiXmlDocument::error	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01542"><\/a>01542     <span class="keywordtype">bool<\/span> error;$/;"	m	class:TiXmlVisitor::TiXmlDocument	file:	access:private
TiXmlVisitor::TiXmlDocument::errorDesc	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01544"><\/a>01544     TIXML_STRING errorDesc;$/;"	m	class:TiXmlVisitor::TiXmlDocument	file:	access:private
TiXmlVisitor::TiXmlDocument::errorId	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01543"><\/a>01543     <span class="keywordtype">int<\/span>  errorId;$/;"	m	class:TiXmlVisitor::TiXmlDocument	file:	access:private
TiXmlVisitor::TiXmlDocument::errorLocation	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01546"><\/a>01546     TiXmlCursor errorLocation;$/;"	m	class:TiXmlVisitor::TiXmlDocument	file:	access:private
TiXmlVisitor::TiXmlDocument::tabsize	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01545"><\/a>01545     <span class="keywordtype">int<\/span> tabsize;$/;"	m	class:TiXmlVisitor::TiXmlDocument	file:	access:private
TiXmlVisitor::TiXmlDocument::useMicrosoftBOM	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01547"><\/a>01547     <span class="keywordtype">bool<\/span> useMicrosoftBOM;       <span class="comment">\/\/ the UTF-8 BOM were found when read. Note this, and try to write.<\/span>$/;"	m	class:TiXmlVisitor::TiXmlDocument	file:	access:private
TiXmlVisitor::TiXmlElement	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00940"><\/a><a class="code" href="classTiXmlElement.html">00940<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>$/;"	c	class:TiXmlVisitor	file:	inherits:TiXmlNode	access:public
TiXmlVisitor::TiXmlElement::ClearThis	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01136"><\/a>01136     <span class="keywordtype">void<\/span> ClearThis();   <span class="comment">\/\/ like clear, but initializes &#39;this&#39; object as well<\/span>$/;"	p	class:TiXmlVisitor::TiXmlElement	file:	access:protected	signature:()
TiXmlVisitor::TiXmlElement::Parse	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01124"><\/a>01124     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* Parse( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	p	class:TiXmlVisitor::TiXmlElement	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* p, TiXmlParsingData* data, TiXmlEncoding encoding )
TiXmlVisitor::TiXmlElement::ReadValue	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01146"><\/a>01146     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* ReadValue( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* in, TiXmlParsingData* prevData, TiXmlEncoding encoding );$/;"	p	class:TiXmlVisitor::TiXmlElement	file:	access:protected	signature:( <span class=”>const</span> <span class=”>char</span>* in, TiXmlParsingData* prevData, TiXmlEncoding encoding )
TiXmlVisitor::TiXmlElement::RemoveAttribute	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01072"><\/a>01072     <span class="keywordtype">void<\/span> RemoveAttribute( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * name );$/;"	p	class:TiXmlVisitor::TiXmlElement	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span> * name )
TiXmlVisitor::TiXmlElement::SetAttribute	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01043"><\/a>01043     <span class="keywordtype">void<\/span> SetAttribute( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* name, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _value );$/;"	p	class:TiXmlVisitor::TiXmlElement	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* name, <span class=”>const</span> <span class=”>char</span> * _value )
TiXmlVisitor::TiXmlElement::SetAttribute	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01063"><\/a>01063     <span class="keywordtype">void<\/span> SetAttribute( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * name, <span class="keywordtype">int<\/span> value );$/;"	p	class:TiXmlVisitor::TiXmlElement	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span> * name, <span class=”>int</span> value )
TiXmlVisitor::TiXmlElement::SetDoubleAttribute	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01068"><\/a>01068     <span class="keywordtype">void<\/span> SetDoubleAttribute( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * name, <span class="keywordtype">double<\/span> value );$/;"	p	class:TiXmlVisitor::TiXmlElement	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span> * name, <span class=”>double</span> value )
TiXmlVisitor::TiXmlElement::StreamIn	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01140"><\/a>01140 <span class="preprocessor"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	p	class:TiXmlVisitor::TiXmlElement	file:	access:protected	signature:( std::istream * in, TIXML_STRING * tag )
TiXmlVisitor::TiXmlElement::TiXmlElement	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00944"><\/a>00944     <a class="code" href="classTiXmlElement.html#a01bc3ab372d35da08efcbbe65ad90c60" title="Construct an element.">TiXmlElement<\/a> (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * in_value);$/;"	p	class:TiXmlVisitor::TiXmlElement	file:	access:public	signature:(<span class=”>const</span> <span class=”>char</span> * in_value)
TiXmlVisitor::TiXmlElement::attributeSet	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01149"><\/a>01149     TiXmlAttributeSet attributeSet;$/;"	m	class:TiXmlVisitor::TiXmlElement	file:	access:private
TiXmlVisitor::TiXmlElement::gt	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01017"><\/a><a class="code" href="classTiXmlElement.html#ae3b9a03b0a56663a40801c7256683576">01017<\/a>     <span class="keyword">template<\/span>&lt; <span class="keyword">typename<\/span> T &gt; <span class="keywordtype">int<\/span> QueryValueAttribute( <span class="keyword">const<\/span> std::string&amp; name, T* outValue )<span class="keyword"> const<\/span>$/;"	m	class:TiXmlVisitor::TiXmlElement	file:	access:public
TiXmlVisitor::TiXmlEncoding	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00163"><\/a>00163 <span class="keyword">enum<\/span> TiXmlEncoding$/;"	g	class:TiXmlVisitor	file:	access:public
TiXmlVisitor::TiXmlHandle	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01631"><\/a><a class="code" href="classTiXmlHandle.html">01631<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlHandle.html" title="A TiXmlHandle is a class that wraps a node pointer with null checks; this is an incredibly...">TiXmlHandle<\/a>$/;"	c	class:TiXmlVisitor	file:	access:public
TiXmlVisitor::TiXmlHandle::TiXmlHandle	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01635"><\/a><a class="code" href="classTiXmlHandle.html#aba18fd7bdefb942ecdea4bf4b8e29ec8">01635<\/a>     <a class="code" href="classTiXmlHandle.html#aba18fd7bdefb942ecdea4bf4b8e29ec8" title="Create a handle from any node (at any depth of the tree.) This can be a null pointer...">TiXmlHandle<\/a>( <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* _node )                 { this-&gt;node = _node; }$/;"	f	class:TiXmlVisitor::TiXmlHandle	access:public	signature:( <a class=” href=” title=”>TiXmlNode</a>* _node )
TiXmlVisitor::TiXmlNode	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00423"><\/a><a class="code" href="classTiXmlNode.html">00423<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlBase.html" title="TiXmlBase is a base class for every class in TinyXml.">TiXmlBase<\/a>$/;"	c	class:TiXmlVisitor	file:	inherits:TiXmlBase	access:public
TiXmlVisitor::TiXmlNode::FirstChild	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00526"><\/a><a class="code" href="classTiXmlNode.html#abc8bf32be6419ec453a731868de19554">00526<\/a>     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#abc8bf32be6419ec453a731868de19554" title="The first child of this node with the matching &amp;#39;value&amp;#39;. Will be null if none...">FirstChild<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _value ) {$/;"	f	class:TiXmlVisitor::TiXmlNode	access:public	signature:( <span class=”>const</span> <span class=”>char</span> * _value )
TiXmlVisitor::TiXmlNode::FirstChildElement	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00665"><\/a>00665     <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#af4fb652f6bd79ae0d5ce7d0f7d3c0fba" title="Convenience function to get through elements.">FirstChildElement<\/a>() {$/;"	f	class:TiXmlVisitor::TiXmlNode	access:public	signature:()
TiXmlVisitor::TiXmlNode::FirstChildElement	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00671"><\/a>00671     <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#af4fb652f6bd79ae0d5ce7d0f7d3c0fba" title="Convenience function to get through elements.">FirstChildElement<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _value ) {$/;"	f	class:TiXmlVisitor::TiXmlNode	access:public	signature:( <span class=”>const</span> <span class=”>char</span> * _value )
TiXmlVisitor::TiXmlNode::GetDocument	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00690"><\/a>00690     <a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a>* <a class="code" href="classTiXmlNode.html#a80e397fa973cf5323e33b07154b024f3" title="Return a pointer to the Document this node lives in.">GetDocument<\/a>() {$/;"	f	class:TiXmlVisitor::TiXmlNode	access:public	signature:()
TiXmlVisitor::TiXmlNode::Identify	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00753"><\/a>00753     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* Identify( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* start, TiXmlEncoding encoding );$/;"	p	class:TiXmlVisitor::TiXmlNode	file:	access:protected	signature:( <span class=”>const</span> <span class=”>char</span>* start, TiXmlEncoding encoding )
TiXmlVisitor::TiXmlNode::InsertAfterChild	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00603"><\/a>00603     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#ad9b75e54ec19301c8b4d5ff583d0b3d5" title="Add a new node related to this.">InsertAfterChild<\/a>(  <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* afterThis, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; addThis );$/;"	p	class:TiXmlVisitor::TiXmlNode	file:	access:public	signature:( <a class=” href=” title=”>TiXmlNode</a>* afterThis, <span class=”>const</span> <a class=” href=” title=”>TiXmlNode</a>&amp; addThis )
TiXmlVisitor::TiXmlNode::InsertBeforeChild	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00598"><\/a>00598     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a0c146fa2fff0157b681594102f48cbc7" title="Add a new node related to this.">InsertBeforeChild<\/a>( <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* beforeThis, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; addThis );$/;"	p	class:TiXmlVisitor::TiXmlNode	file:	access:public	signature:( <a class=” href=” title=”>TiXmlNode</a>* beforeThis, <span class=”>const</span> <a class=” href=” title=”>TiXmlNode</a>&amp; addThis )
TiXmlVisitor::TiXmlNode::IterateChildren	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00563"><\/a>00563     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a8621196ba3705fa226bef4a761cc51b6" title="An alternate way to walk the children of a node.">IterateChildren<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* previous ) {$/;"	f	class:TiXmlVisitor::TiXmlNode	access:public	signature:( <span class=”>const</span> <a class=” href=” title=”>TiXmlNode</a>* previous )
TiXmlVisitor::TiXmlNode::IterateChildren	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00569"><\/a>00569     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a8621196ba3705fa226bef4a761cc51b6" title="An alternate way to walk the children of a node.">IterateChildren<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _value, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* previous ) {$/;"	f	class:TiXmlVisitor::TiXmlNode	access:public	signature:( <span class=”>const</span> <span class=”>char</span> * _value, <span class=”>const</span> <a class=” href=” title=”>TiXmlNode</a>* previous )
TiXmlVisitor::TiXmlNode::LastChild	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00535"><\/a><a class="code" href="classTiXmlNode.html#abad5bf1059c48127b958711ef89e8e5d">00535<\/a>     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#abad5bf1059c48127b958711ef89e8e5d" title="The last child of this node matching &amp;#39;value&amp;#39;. Will be null if there are no...">LastChild<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _value ) {$/;"	f	class:TiXmlVisitor::TiXmlNode	access:public	signature:( <span class=”>const</span> <span class=”>char</span> * _value )
TiXmlVisitor::TiXmlNode::LinkEndChild	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00593"><\/a>00593     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a5d29442ae46de6d0168429156197bfc6" title="Add a new node related to this.">LinkEndChild<\/a>( <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* addThis );$/;"	p	class:TiXmlVisitor::TiXmlNode	file:	access:public	signature:( <a class=” href=” title=”>TiXmlNode</a>* addThis )
TiXmlVisitor::TiXmlNode::NextSibling	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00636"><\/a>00636     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#af854baeba384f5fe9859f5aee03b548e" title="Navigate to a sibling node.">NextSibling<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _next ) {$/;"	f	class:TiXmlVisitor::TiXmlNode	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* _next )
TiXmlVisitor::TiXmlNode::NextSiblingElement	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00645"><\/a>00645     <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#a73acf929d49d10bd0e5fb3d31b0372d1" title="Convenience function to get through elements.">NextSiblingElement<\/a>() {$/;"	f	class:TiXmlVisitor::TiXmlNode	access:public	signature:()
TiXmlVisitor::TiXmlNode::NextSiblingElement	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00654"><\/a>00654     <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#a73acf929d49d10bd0e5fb3d31b0372d1" title="Convenience function to get through elements.">NextSiblingElement<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *_next ) {$/;"	f	class:TiXmlVisitor::TiXmlNode	access:public	signature:( <span class=”>const</span> <span class=”>char</span> *_next )
TiXmlVisitor::TiXmlNode::NodeType	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00462"><\/a><a class="code" href="classTiXmlNode.html#a836eded4920ab9e9ef28496f48cd95a2">00462<\/a>     <span class="keyword">enum<\/span> <a class="code" href="classTiXmlNode.html#a836eded4920ab9e9ef28496f48cd95a2" title="The types of XML nodes supported by TinyXml.">NodeType<\/a>$/;"	g	class:TiXmlVisitor::TiXmlNode	file:	access:public
TiXmlVisitor::TiXmlNode::Parent	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00519"><\/a><a class="code" href="classTiXmlNode.html#ab643043132ffd794f8602685d34a982e">00519<\/a>     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#ab643043132ffd794f8602685d34a982e" title="One step up the DOM.">Parent<\/a>()                         { <span class="keywordflow">return<\/span> parent; }$/;"	f	class:TiXmlVisitor::TiXmlNode	access:public	signature:()
TiXmlVisitor::TiXmlNode::PreviousSibling	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00619"><\/a>00619     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#ac2cd892768726270e511b2ab32de4d10" title="Navigate to a sibling node.">PreviousSibling<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *_prev ) {$/;"	f	class:TiXmlVisitor::TiXmlNode	access:public	signature:( <span class=”>const</span> <span class=”>char</span> *_prev )
TiXmlVisitor::TiXmlNode::RemoveChild	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00611"><\/a>00611     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlNode.html#ae19d8510efc90596552f4feeac9a8fbf" title="Delete a child of this node.">RemoveChild<\/a>( <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* removeThis );$/;"	p	class:TiXmlVisitor::TiXmlNode	file:	access:public	signature:( <a class=” href=” title=”>TiXmlNode</a>* removeThis )
TiXmlVisitor::TiXmlNode::ReplaceChild	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00608"><\/a>00608     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a0c49e739a17b9938050c22cd89617fbd" title="Replace a child of this node.">ReplaceChild<\/a>( <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* replaceThis, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; withThis );$/;"	p	class:TiXmlVisitor::TiXmlNode	file:	access:public	signature:( <a class=” href=” title=”>TiXmlNode</a>* replaceThis, <span class=”>const</span> <a class=” href=” title=”>TiXmlNode</a>&amp; withThis )
TiXmlVisitor::TiXmlNode::StreamIn	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00749"><\/a>00749     <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream* in, TIXML_STRING* tag ) = 0;$/;"	p	class:TiXmlVisitor::TiXmlNode	file:	access:protected	signature:( std::istream* in, TIXML_STRING* tag )
TiXmlVisitor::TiXmlNode::TINYXML_COMMENT	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00466"><\/a>00466         TINYXML_COMMENT,$/;"	e	enum:TiXmlVisitor::TiXmlNode::NodeType	file:
TiXmlVisitor::TiXmlNode::TINYXML_DECLARATION	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00469"><\/a>00469         TINYXML_DECLARATION,$/;"	e	enum:TiXmlVisitor::TiXmlNode::NodeType	file:
TiXmlVisitor::TiXmlNode::TINYXML_DOCUMENT	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00464"><\/a>00464         TINYXML_DOCUMENT,$/;"	e	enum:TiXmlVisitor::TiXmlNode::NodeType	file:
TiXmlVisitor::TiXmlNode::TINYXML_ELEMENT	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00465"><\/a>00465         TINYXML_ELEMENT,$/;"	e	enum:TiXmlVisitor::TiXmlNode::NodeType	file:
TiXmlVisitor::TiXmlNode::TINYXML_TEXT	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00468"><\/a>00468         TINYXML_TEXT,$/;"	e	enum:TiXmlVisitor::TiXmlNode::NodeType	file:
TiXmlVisitor::TiXmlNode::TINYXML_TYPECOUNT	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00470"><\/a>00470         TINYXML_TYPECOUNT$/;"	e	enum:TiXmlVisitor::TiXmlNode::NodeType	file:
TiXmlVisitor::TiXmlNode::TINYXML_UNKNOWN	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00467"><\/a>00467         TINYXML_UNKNOWN,$/;"	e	enum:TiXmlVisitor::TiXmlNode::NodeType	file:
TiXmlVisitor::TiXmlNode::TiXmlNode	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00741"><\/a>00741     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>( <a class="code" href="classTiXmlNode.html#a836eded4920ab9e9ef28496f48cd95a2" title="The types of XML nodes supported by TinyXml.">NodeType<\/a> _type );$/;"	p	class:TiXmlVisitor::TiXmlNode	file:	access:protected	signature:( <a class=” href=” title=”>NodeType</a> _type )
TiXmlVisitor::TiXmlNode::amp	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00434"><\/a>00434         <span class="keyword">friend<\/span> std::istream&amp; <a class="code" href="classTiXmlNode.html#ab57bd426563c926844f65a78412e18b9" title="An input stream operator, for every class.">operator &gt;&gt; <\/a>(std::istream&amp; in, <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base);$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:public
TiXmlVisitor::TiXmlNode::amp	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00452"><\/a>00452         <span class="keyword">friend<\/span> std::ostream&amp; <a class="code" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7" title="An output stream operator, for every class.">operator&lt;&lt; <\/a>(std::ostream&amp; out, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base);$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:public
TiXmlVisitor::TiXmlNode::amp	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00455"><\/a>00455         <span class="keyword">friend<\/span> std::string&amp; <a class="code" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7" title="An output stream operator, for every class.">operator&lt;&lt; <\/a>(std::string&amp; out, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base );$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:public
TiXmlVisitor::TiXmlNode::base	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00434"><\/a>00434         <span class="keyword">friend<\/span> std::istream&amp; <a class="code" href="classTiXmlNode.html#ab57bd426563c926844f65a78412e18b9" title="An input stream operator, for every class.">operator &gt;&gt; <\/a>(std::istream&amp; in, <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base);$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:public
TiXmlVisitor::TiXmlNode::base	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00452"><\/a>00452         <span class="keyword">friend<\/span> std::ostream&amp; <a class="code" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7" title="An output stream operator, for every class.">operator&lt;&lt; <\/a>(std::ostream&amp; out, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base);$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:public
TiXmlVisitor::TiXmlNode::base	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00455"><\/a>00455         <span class="keyword">friend<\/span> std::string&amp; <a class="code" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7" title="An output stream operator, for every class.">operator&lt;&lt; <\/a>(std::string&amp; out, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base );$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:public
TiXmlVisitor::TiXmlNode::firstChild	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00758"><\/a>00758     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>*      firstChild;$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:protected
TiXmlVisitor::TiXmlNode::gt	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00434"><\/a>00434         <span class="keyword">friend<\/span> std::istream&amp; <a class="code" href="classTiXmlNode.html#ab57bd426563c926844f65a78412e18b9" title="An input stream operator, for every class.">operator &gt;&gt; <\/a>(std::istream&amp; in, <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base);$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:public
TiXmlVisitor::TiXmlNode::in	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00434"><\/a>00434         <span class="keyword">friend<\/span> std::istream&amp; <a class="code" href="classTiXmlNode.html#ab57bd426563c926844f65a78412e18b9" title="An input stream operator, for every class.">operator &gt;&gt; <\/a>(std::istream&amp; in, <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base);$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:public
TiXmlVisitor::TiXmlNode::lastChild	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00759"><\/a>00759     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>*      lastChild;$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:protected
TiXmlVisitor::TiXmlNode::lt	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00452"><\/a>00452         <span class="keyword">friend<\/span> std::ostream&amp; <a class="code" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7" title="An output stream operator, for every class.">operator&lt;&lt; <\/a>(std::ostream&amp; out, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base);$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:public
TiXmlVisitor::TiXmlNode::lt	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00455"><\/a>00455         <span class="keyword">friend<\/span> std::string&amp; <a class="code" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7" title="An output stream operator, for every class.">operator&lt;&lt; <\/a>(std::string&amp; out, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base );$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:public
TiXmlVisitor::TiXmlNode::next	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00764"><\/a>00764     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>*      next;$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:protected
TiXmlVisitor::TiXmlNode::out	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00452"><\/a>00452         <span class="keyword">friend<\/span> std::ostream&amp; <a class="code" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7" title="An output stream operator, for every class.">operator&lt;&lt; <\/a>(std::ostream&amp; out, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base);$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:public
TiXmlVisitor::TiXmlNode::out	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00455"><\/a>00455         <span class="keyword">friend<\/span> std::string&amp; <a class="code" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7" title="An output stream operator, for every class.">operator&lt;&lt; <\/a>(std::string&amp; out, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base );$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:public
TiXmlVisitor::TiXmlNode::parent	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00755"><\/a>00755     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>*      parent;$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:protected
TiXmlVisitor::TiXmlNode::prev	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00763"><\/a>00763     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>*      prev;$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:protected
TiXmlVisitor::TiXmlNode::type	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00756"><\/a>00756     <a class="code" href="classTiXmlNode.html#a836eded4920ab9e9ef28496f48cd95a2" title="The types of XML nodes supported by TinyXml.">NodeType<\/a>        type;$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:protected
TiXmlVisitor::TiXmlNode::value	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00761"><\/a>00761     TIXML_STRING    value;$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:protected
TiXmlVisitor::TiXmlPrinter	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01730"><\/a><a class="code" href="classTiXmlPrinter.html">01730<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlPrinter.html" title="Print to memory functionality.">TiXmlPrinter<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlVisitor.html" title="Implements the interface to the &amp;quot;Visitor pattern&amp;quot; (see the Accept() method...">TiXmlVisitor<\/a>$/;"	c	class:TiXmlVisitor	file:	inherits:TiXmlVisitor	access:public
TiXmlVisitor::TiXmlPrinter::CStr	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01768"><\/a><a class="code" href="classTiXmlPrinter.html#a859eede9597d3e0355b77757be48735e">01768<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* <a class="code" href="classTiXmlPrinter.html#a859eede9597d3e0355b77757be48735e" title="Return the result.">CStr<\/a>()                              { <span class="keywordflow">return<\/span> buffer.c_str(); }$/;"	f	class:TiXmlVisitor::TiXmlPrinter	access:public	signature:()
TiXmlVisitor::TiXmlPrinter::DoIndent	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01778"><\/a>01778     <span class="keywordtype">void<\/span> DoIndent() {$/;"	f	class:TiXmlVisitor::TiXmlPrinter	file:	access:private	signature:()
TiXmlVisitor::TiXmlPrinter::DoLineBreak	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01782"><\/a>01782     <span class="keywordtype">void<\/span> DoLineBreak() {$/;"	f	class:TiXmlVisitor::TiXmlPrinter	file:	access:private	signature:()
TiXmlVisitor::TiXmlPrinter::Indent	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01752"><\/a><a class="code" href="classTiXmlPrinter.html#abb33ec7d4bad6aaeb57f4304394b133d">01752<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* <a class="code" href="classTiXmlPrinter.html#abb33ec7d4bad6aaeb57f4304394b133d" title="Query the indention string.">Indent<\/a>()                            { <span class="keywordflow">return<\/span> indent.c_str(); }$/;"	f	class:TiXmlVisitor::TiXmlPrinter	access:public	signature:()
TiXmlVisitor::TiXmlPrinter::LineBreak	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01759"><\/a><a class="code" href="classTiXmlPrinter.html#a11f1b4804a460b175ec244eb5724d96d">01759<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* <a class="code" href="classTiXmlPrinter.html#a11f1b4804a460b175ec244eb5724d96d" title="Query the current line breaking string.">LineBreak<\/a>()                         { <span class="keywordflow">return<\/span> lineBreak.c_str(); }$/;"	f	class:TiXmlVisitor::TiXmlPrinter	access:public	signature:()
TiXmlVisitor::TiXmlPrinter::SetIndent	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01750"><\/a><a class="code" href="classTiXmlPrinter.html#a213377a4070c7e625bae59716b089e5e">01750<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlPrinter.html#a213377a4070c7e625bae59716b089e5e" title="Set the indent characters for printing.">SetIndent<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _indent )           { indent = _indent ? _indent : <span class="stringliteral">&quot;&quot;<\/span> ; }$/;"	f	class:TiXmlVisitor::TiXmlPrinter	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* _indent )
TiXmlVisitor::TiXmlPrinter::SetLineBreak	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01757"><\/a><a class="code" href="classTiXmlPrinter.html#a4be1e37e69e3858c59635aa947174fe6">01757<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlPrinter.html#a4be1e37e69e3858c59635aa947174fe6" title="Set the line breaking string.">SetLineBreak<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _lineBreak )     { lineBreak = _lineBreak ? _lineBreak : <span class="stringliteral">&quot;&quot;<\/span>; }$/;"	f	class:TiXmlVisitor::TiXmlPrinter	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* _lineBreak )
TiXmlVisitor::TiXmlPrinter::SetStreamPrinting	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01764"><\/a><a class="code" href="classTiXmlPrinter.html#ab23a90629e374cb1cadca090468bbd19">01764<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlPrinter.html#ab23a90629e374cb1cadca090468bbd19" title="Switch over to &amp;quot;stream printing&amp;quot; which is the most dense formatting without...">SetStreamPrinting<\/a>()                        { indent = <span class="stringliteral">&quot;&quot;<\/span>;$/;"	f	class:TiXmlVisitor::TiXmlPrinter	access:public	signature:()
TiXmlVisitor::TiXmlPrinter::Size	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01770"><\/a><a class="code" href="classTiXmlPrinter.html#ad01375ae9199bd2f48252eaddce3039d">01770<\/a>     <span class="keywordtype">size_t<\/span> <a class="code" href="classTiXmlPrinter.html#ad01375ae9199bd2f48252eaddce3039d" title="Return the length of the result string.">Size<\/a>()                                   { <span class="keywordflow">return<\/span> buffer.size(); }$/;"	f	class:TiXmlVisitor::TiXmlPrinter	access:public	signature:()
TiXmlVisitor::TiXmlPrinter::Str	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01774"><\/a><a class="code" href="classTiXmlPrinter.html#a3bd4daf44309b41f5813a833caa0d1c9">01774<\/a> <span class="preprocessor">    const std::string&amp; Str()                        { return buffer; }<\/span>$/;"	f	class:TiXmlVisitor::TiXmlPrinter	access:public	signature:()
TiXmlVisitor::TiXmlPrinter::amp	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01774"><\/a><a class="code" href="classTiXmlPrinter.html#a3bd4daf44309b41f5813a833caa0d1c9">01774<\/a> <span class="preprocessor">    const std::string&amp; Str()                        { return buffer; }<\/span>$/;"	m	class:TiXmlVisitor::TiXmlPrinter	file:	access:public
TiXmlVisitor::TiXmlPrinter::buffer	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01734"><\/a>01734                      buffer(), indent( <span class="stringliteral">&quot;    &quot;<\/span> ), lineBreak( <span class="stringliteral">&quot;\\n&quot;<\/span> ) {}$/;"	p	class:TiXmlVisitor::TiXmlPrinter	file:	access:public	signature:()
TiXmlVisitor::TiXmlPrinter::buffer	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01788"><\/a>01788     TIXML_STRING buffer;$/;"	m	class:TiXmlVisitor::TiXmlPrinter	file:	access:private
TiXmlVisitor::TiXmlPrinter::depth	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01786"><\/a>01786     <span class="keywordtype">int<\/span> depth;$/;"	m	class:TiXmlVisitor::TiXmlPrinter	file:	access:private
TiXmlVisitor::TiXmlPrinter::indent	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01789"><\/a>01789     TIXML_STRING indent;$/;"	m	class:TiXmlVisitor::TiXmlPrinter	file:	access:private
TiXmlVisitor::TiXmlPrinter::lineBreak	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01790"><\/a>01790     TIXML_STRING lineBreak;$/;"	m	class:TiXmlVisitor::TiXmlPrinter	file:	access:private
TiXmlVisitor::TiXmlPrinter::simpleTextPrint	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01787"><\/a>01787     <span class="keywordtype">bool<\/span> simpleTextPrint;$/;"	m	class:TiXmlVisitor::TiXmlPrinter	file:	access:private
TiXmlVisitor::TiXmlText	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01205"><\/a><a class="code" href="classTiXmlText.html">01205<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlText.html" title="XML text.">TiXmlText<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>$/;"	c	class:TiXmlVisitor	file:	inherits:TiXmlNode	access:public
TiXmlVisitor::TiXmlText::StreamIn	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01257"><\/a>01257 <span class="preprocessor"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	p	class:TiXmlVisitor::TiXmlText	file:	access:protected	signature:( std::istream * in, TIXML_STRING * tag )
TiXmlVisitor::TiXmlText::cdata	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01261"><\/a>01261     <span class="keywordtype">bool<\/span> cdata;         <span class="comment">\/\/ true if this should be input and output as a CDATA style text element<\/span>$/;"	m	class:TiXmlVisitor::TiXmlText	file:	access:private
TiXmlVisitor::TiXmlText::name	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01214"><\/a>01214     {$/;"	m	class:TiXmlVisitor::TiXmlText	file:	access:public
TiXmlVisitor::TiXmlUnknown	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01347"><\/a><a class="code" href="classTiXmlUnknown.html">01347<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlUnknown.html" title="Any tag that tinyXml doesn&amp;#39;t recognize is saved as an unknown.">TiXmlUnknown<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>$/;"	c	class:TiXmlVisitor	file:	inherits:TiXmlNode	access:public
TiXmlVisitor::TiXmlUnknown::Parse	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01361"><\/a>01361     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* Parse( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	p	class:TiXmlVisitor::TiXmlUnknown	file:	access:public	signature:( <span class=”>const</span> <span class=”>char</span>* p, TiXmlParsingData* data, TiXmlEncoding encoding )
TiXmlVisitor::TiXmlUnknown::StreamIn	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01374"><\/a>01374 <span class="preprocessor"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	p	class:TiXmlVisitor::TiXmlUnknown	file:	access:protected	signature:( std::istream * in, TIXML_STRING * tag )
TiXmlVisitor::TiXmlUnknown::TiXmlNode	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01350"><\/a>01350     <a class="code" href="classTiXmlUnknown.html" title="Any tag that tinyXml doesn&amp;#39;t recognize is saved as an unknown.">TiXmlUnknown<\/a>() : <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>( TiXmlNode::TINYXML_UNKNOWN )    {}$/;"	f	class:TiXmlVisitor::TiXmlUnknown	access:public	signature:( TiXmlNode::TINYXML_UNKNOWN )
TiXmlVisitor::Visit	tinyxml/tinyxml.h	/^	virtual bool Visit( const TiXmlComment& \/*comment*\/ )			{ return true; }$/;"	f	class:TiXmlVisitor	access:public	signature:( const TiXmlComment& )
TiXmlVisitor::Visit	tinyxml/tinyxml.h	/^	virtual bool Visit( const TiXmlDeclaration& \/*declaration*\/ )	{ return true; }$/;"	f	class:TiXmlVisitor	access:public	signature:( const TiXmlDeclaration& )
TiXmlVisitor::Visit	tinyxml/tinyxml.h	/^	virtual bool Visit( const TiXmlText& \/*text*\/ )					{ return true; }$/;"	f	class:TiXmlVisitor	access:public	signature:( const TiXmlText& )
TiXmlVisitor::Visit	tinyxml/tinyxml.h	/^	virtual bool Visit( const TiXmlUnknown& \/*unknown*\/ )			{ return true; }$/;"	f	class:TiXmlVisitor	access:public	signature:( const TiXmlUnknown& )
TiXmlVisitor::VisitEnter	tinyxml/tinyxml.h	/^	virtual bool VisitEnter( const TiXmlDocument& \/*doc*\/ )			{ return true; }$/;"	f	class:TiXmlVisitor	access:public	signature:( const TiXmlDocument& )
TiXmlVisitor::VisitEnter	tinyxml/tinyxml.h	/^	virtual bool VisitEnter( const TiXmlElement& \/*element*\/, const TiXmlAttribute* \/*firstAttribute*\/ )	{ return true; }$/;"	f	class:TiXmlVisitor	access:public	signature:( const TiXmlElement& , const TiXmlAttribute* )
TiXmlVisitor::VisitExit	tinyxml/tinyxml.h	/^	virtual bool VisitExit( const TiXmlDocument& \/*doc*\/ )			{ return true; }$/;"	f	class:TiXmlVisitor	access:public	signature:( const TiXmlDocument& )
TiXmlVisitor::VisitExit	tinyxml/tinyxml.h	/^	virtual bool VisitExit( const TiXmlElement& \/*element*\/ )		{ return true; }$/;"	f	class:TiXmlVisitor	access:public	signature:( const TiXmlElement& )
TiXmlVisitor::nbsp	tinyxml/docs/tinyxml_8h_source.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	m	class:TiXmlVisitor	file:	access:public
TiXmlVisitor::~TiXmlVisitor	tinyxml/tinyxml.h	/^	virtual ~TiXmlVisitor() {}$/;"	f	class:TiXmlVisitor	access:public	signature:()
ToComment	tinyxml/tinyxml.h	/^	virtual TiXmlComment*           ToComment()     { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode	access:public	signature:()
ToComment	tinyxml/tinyxml.h	/^	virtual TiXmlComment*  ToComment() { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlComment	access:public	signature:()
ToComment	tinyxml/tinyxml.h	/^	virtual const TiXmlComment*     ToComment()     const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode	access:public	signature:() const
ToComment	tinyxml/tinyxml.h	/^	virtual const TiXmlComment*  ToComment() const { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlComment	access:public	signature:() const
ToDeclaration	tinyxml/tinyxml.h	/^	virtual TiXmlDeclaration*       ToDeclaration()       { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlDeclaration	access:public	signature:()
ToDeclaration	tinyxml/tinyxml.h	/^	virtual TiXmlDeclaration*       ToDeclaration() { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode	access:public	signature:()
ToDeclaration	tinyxml/tinyxml.h	/^	virtual const TiXmlDeclaration* ToDeclaration() const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode	access:public	signature:() const
ToDeclaration	tinyxml/tinyxml.h	/^	virtual const TiXmlDeclaration* ToDeclaration() const { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlDeclaration	access:public	signature:() const
ToDocument	tinyxml/tinyxml.h	/^	virtual TiXmlDocument*          ToDocument()          { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlDocument	access:public	signature:()
ToDocument	tinyxml/tinyxml.h	/^	virtual TiXmlDocument*          ToDocument()    { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode	access:public	signature:()
ToDocument	tinyxml/tinyxml.h	/^	virtual const TiXmlDocument*    ToDocument()    const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode	access:public	signature:() const
ToDocument	tinyxml/tinyxml.h	/^	virtual const TiXmlDocument*    ToDocument()    const { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlDocument	access:public	signature:() const
ToElement	tinyxml/tinyxml.h	/^	TiXmlElement* ToElement() const		{ return ( ( node && node->ToElement() ) ? node->ToElement() : 0 ); }$/;"	f	class:TiXmlHandle	access:public	signature:() const
ToElement	tinyxml/tinyxml.h	/^	virtual TiXmlElement*           ToElement()	          { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlElement	access:public	signature:()
ToElement	tinyxml/tinyxml.h	/^	virtual TiXmlElement*           ToElement()	    { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode	access:public	signature:()
ToElement	tinyxml/tinyxml.h	/^	virtual const TiXmlElement*     ToElement()     const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode	access:public	signature:() const
ToElement	tinyxml/tinyxml.h	/^	virtual const TiXmlElement*     ToElement()     const { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlElement	access:public	signature:() const
ToLower	tinyxml/tinyxml.h	/^	inline static int ToLower( int v, TiXmlEncoding encoding )$/;"	f	class:TiXmlBase	access:protected	signature:( int v, TiXmlEncoding encoding )
ToNode	tinyxml/tinyxml.h	/^	TiXmlNode* ToNode() const			{ return node; } $/;"	f	class:TiXmlHandle	access:public	signature:() const
ToText	tinyxml/tinyxml.h	/^	TiXmlText* ToText() const			{ return ( ( node && node->ToText() ) ? node->ToText() : 0 ); }$/;"	f	class:TiXmlHandle	access:public	signature:() const
ToText	tinyxml/tinyxml.h	/^	virtual TiXmlText*	            ToText()        { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode	access:public	signature:()
ToText	tinyxml/tinyxml.h	/^	virtual TiXmlText*       ToText()       { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlText	access:public	signature:()
ToText	tinyxml/tinyxml.h	/^	virtual const TiXmlText*        ToText()        const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode	access:public	signature:() const
ToText	tinyxml/tinyxml.h	/^	virtual const TiXmlText* ToText() const { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlText	access:public	signature:() const
ToUnknown	tinyxml/tinyxml.h	/^	TiXmlUnknown* ToUnknown() const		{ return ( ( node && node->ToUnknown() ) ? node->ToUnknown() : 0 ); }$/;"	f	class:TiXmlHandle	access:public	signature:() const
ToUnknown	tinyxml/tinyxml.h	/^	virtual TiXmlUnknown*           ToUnknown()	    { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode	access:public	signature:()
ToUnknown	tinyxml/tinyxml.h	/^	virtual TiXmlUnknown*           ToUnknown()	    { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlUnknown	access:public	signature:()
ToUnknown	tinyxml/tinyxml.h	/^	virtual const TiXmlUnknown*     ToUnknown()     const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode	access:public	signature:() const
ToUnknown	tinyxml/tinyxml.h	/^	virtual const TiXmlUnknown*     ToUnknown()     const { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlUnknown	access:public	signature:() const
Type	tinyxml/tinyxml.h	/^	int Type() const	{ return type; }$/;"	f	class:TiXmlNode	access:public	signature:() const
Unknown	tinyxml/tinyxml.h	/^	TiXmlUnknown* Unknown() const	{ return ToUnknown(); }$/;"	f	class:TiXmlHandle	access:public	signature:() const
Value	tinyxml/tinyxml.h	/^	const char *Value() const { return value.c_str (); }$/;"	f	class:TiXmlNode	access:public	signature:() const
Value	tinyxml/tinyxml.h	/^	const char*		Value() const		{ return value.c_str(); }		\/\/\/< Return the value of this attribute.$/;"	f	class:TiXmlAttribute	access:public	signature:() const
ValueStr	tinyxml/tinyxml.h	/^	const std::string& ValueStr() const	{ return value; }				\/\/\/< Return the value of this attribute.$/;"	f	class:TiXmlAttribute	access:public	signature:() const
ValueStr	tinyxml/tinyxml.h	/^	const std::string& ValueStr() const { return value; }$/;"	f	class:TiXmlNode	access:public	signature:() const
ValueTStr	tinyxml/tinyxml.h	/^	const TIXML_STRING& ValueTStr() const { return value; }$/;"	f	class:TiXmlNode	access:public	signature:() const
Version	tinyxml/tinyxml.h	/^	const char *Version() const			{ return version.c_str (); }$/;"	f	class:TiXmlDeclaration	access:public	signature:() const
Visit	tinyxml/tinyxml.cpp	/^bool TiXmlPrinter::Visit( const TiXmlComment& comment )$/;"	f	class:TiXmlPrinter	signature:( const TiXmlComment& comment )
Visit	tinyxml/tinyxml.cpp	/^bool TiXmlPrinter::Visit( const TiXmlDeclaration& declaration )$/;"	f	class:TiXmlPrinter	signature:( const TiXmlDeclaration& declaration )
Visit	tinyxml/tinyxml.cpp	/^bool TiXmlPrinter::Visit( const TiXmlText& text )$/;"	f	class:TiXmlPrinter	signature:( const TiXmlText& text )
Visit	tinyxml/tinyxml.cpp	/^bool TiXmlPrinter::Visit( const TiXmlUnknown& unknown )$/;"	f	class:TiXmlPrinter	signature:( const TiXmlUnknown& unknown )
Visit	tinyxml/tinyxml.h	/^	virtual bool Visit( const TiXmlComment& \/*comment*\/ )			{ return true; }$/;"	f	class:TiXmlVisitor	access:public	signature:( const TiXmlComment& )
Visit	tinyxml/tinyxml.h	/^	virtual bool Visit( const TiXmlComment& comment );$/;"	p	class:TiXmlPrinter	access:public	signature:( const TiXmlComment& comment )
Visit	tinyxml/tinyxml.h	/^	virtual bool Visit( const TiXmlDeclaration& \/*declaration*\/ )	{ return true; }$/;"	f	class:TiXmlVisitor	access:public	signature:( const TiXmlDeclaration& )
Visit	tinyxml/tinyxml.h	/^	virtual bool Visit( const TiXmlDeclaration& declaration );$/;"	p	class:TiXmlPrinter	access:public	signature:( const TiXmlDeclaration& declaration )
Visit	tinyxml/tinyxml.h	/^	virtual bool Visit( const TiXmlText& \/*text*\/ )					{ return true; }$/;"	f	class:TiXmlVisitor	access:public	signature:( const TiXmlText& )
Visit	tinyxml/tinyxml.h	/^	virtual bool Visit( const TiXmlText& text );$/;"	p	class:TiXmlPrinter	access:public	signature:( const TiXmlText& text )
Visit	tinyxml/tinyxml.h	/^	virtual bool Visit( const TiXmlUnknown& \/*unknown*\/ )			{ return true; }$/;"	f	class:TiXmlVisitor	access:public	signature:( const TiXmlUnknown& )
Visit	tinyxml/tinyxml.h	/^	virtual bool Visit( const TiXmlUnknown& unknown );$/;"	p	class:TiXmlPrinter	access:public	signature:( const TiXmlUnknown& unknown )
VisitEnter	tinyxml/tinyxml.cpp	/^bool TiXmlPrinter::VisitEnter( const TiXmlDocument& )$/;"	f	class:TiXmlPrinter	signature:( const TiXmlDocument& )
VisitEnter	tinyxml/tinyxml.cpp	/^bool TiXmlPrinter::VisitEnter( const TiXmlElement& element, const TiXmlAttribute* firstAttribute )$/;"	f	class:TiXmlPrinter	signature:( const TiXmlElement& element, const TiXmlAttribute* firstAttribute )
VisitEnter	tinyxml/tinyxml.h	/^	virtual bool VisitEnter( const TiXmlDocument& \/*doc*\/ )			{ return true; }$/;"	f	class:TiXmlVisitor	access:public	signature:( const TiXmlDocument& )
VisitEnter	tinyxml/tinyxml.h	/^	virtual bool VisitEnter( const TiXmlDocument& doc );$/;"	p	class:TiXmlPrinter	access:public	signature:( const TiXmlDocument& doc )
VisitEnter	tinyxml/tinyxml.h	/^	virtual bool VisitEnter( const TiXmlElement& \/*element*\/, const TiXmlAttribute* \/*firstAttribute*\/ )	{ return true; }$/;"	f	class:TiXmlVisitor	access:public	signature:( const TiXmlElement& , const TiXmlAttribute* )
VisitEnter	tinyxml/tinyxml.h	/^	virtual bool VisitEnter( const TiXmlElement& element, const TiXmlAttribute* firstAttribute );$/;"	p	class:TiXmlPrinter	access:public	signature:( const TiXmlElement& element, const TiXmlAttribute* firstAttribute )
VisitExit	tinyxml/tinyxml.cpp	/^bool TiXmlPrinter::VisitExit( const TiXmlDocument& )$/;"	f	class:TiXmlPrinter	signature:( const TiXmlDocument& )
VisitExit	tinyxml/tinyxml.cpp	/^bool TiXmlPrinter::VisitExit( const TiXmlElement& element )$/;"	f	class:TiXmlPrinter	signature:( const TiXmlElement& element )
VisitExit	tinyxml/tinyxml.h	/^	virtual bool VisitExit( const TiXmlDocument& \/*doc*\/ )			{ return true; }$/;"	f	class:TiXmlVisitor	access:public	signature:( const TiXmlDocument& )
VisitExit	tinyxml/tinyxml.h	/^	virtual bool VisitExit( const TiXmlDocument& doc );$/;"	p	class:TiXmlPrinter	access:public	signature:( const TiXmlDocument& doc )
VisitExit	tinyxml/tinyxml.h	/^	virtual bool VisitExit( const TiXmlElement& \/*element*\/ )		{ return true; }$/;"	f	class:TiXmlVisitor	access:public	signature:( const TiXmlElement& )
VisitExit	tinyxml/tinyxml.h	/^	virtual bool VisitExit( const TiXmlElement& element );$/;"	p	class:TiXmlPrinter	access:public	signature:( const TiXmlElement& element )
XML	tinyxml/docs/tutorial0.html	/^<\/pre><\/div><p>Both of these produce the same XML, namely:<\/p>$/;"	v
XmlTest	tinyxml/xmltest.cpp	/^bool XmlTest (const char* testString, const char* expected, const char* found, bool noEcho )$/;"	f	signature:(const char* testString, const char* expected, const char* found, bool noEcho )
XmlTest	tinyxml/xmltest.cpp	/^bool XmlTest (const char* testString, const char* expected, const char* found, bool noEcho = false);$/;"	p	file:	signature:(const char* testString, const char* expected, const char* found, bool noEcho = false)
XmlTest	tinyxml/xmltest.cpp	/^bool XmlTest( const char* testString, int expected, int found, bool noEcho )$/;"	f	signature:( const char* testString, int expected, int found, bool noEcho )
XmlTest	tinyxml/xmltest.cpp	/^bool XmlTest( const char* testString, int expected, int found, bool noEcho = false );$/;"	p	file:	signature:( const char* testString, int expected, int found, bool noEcho = false )
__CharacterInputListener_H__	CharacterInputListener.h	2;"	d
__CharacterInputListener_H__	CharacterInputListener.h~	2;"	d	file:
__CharacterState_h_	CharacterState.h	2;"	d
__CharacterState_h_	CharacterState.h~	2;"	d	file:
__Character_h_	Character.h	2;"	d
__Character_h_	Character.h~	2;"	d	file:
__GameBase_h_	GameBase.h	2;"	d
__GameMap_h_	GameMap.h	2;"	d
__GraphicCharacter_H__	GraphicCharacter.h	2;"	d
__KinematicCharacter_h_	KinematicCharacter.h	2;"	d
__MotionState_h_	MotionState.h	2;"	d
__PhysicsBase_h_	PhysicsBase.h	2;"	d
__PhysicsFrameListener_h_	PhysicsFrameListener.h	2;"	d
__SeekSeekSeek_h_	SeekSeekSeek.h	2;"	d
a	tinyxml/docs/tab_r.gif	/^H∞†¡ÉÚKÅ"ÉRHúH±¢≈ã3j‹»±£«è CäI≤§…ì(S™\\È≈Åu&@Ä ¡≤¶Õõ8sÍ‹…≥ßOˇñ(¬±ÄD–£Hì*] ¥©”ßP£JùJµ™’´X≥j› µ´◊ØS84± âh”™]À∂≠€∑p„ ùK∑Æ›ªxÛÍ›À∑ØﬂøÄ”} ‚DÃf(^Ã∏±„«ê#KûLπ≤ÂÀò3kﬁÃπ≥Áœ†CãmπCƒHúXÕ∫µÎ◊∞cÀûMª∂Ì€∏sÎﬁÕª∑Ôﬂ¿ÉN˜√Jî ¡ÆπÛÁ–£KüNΩ∫ıÎÿ≥kﬂŒΩª˜Ô‡√ãOæ<v1ë+_.≥Ω˚˜„ÀüOøæ˝˚¯ÛÎﬂœøøˇˇ/;"	v
addTime	GraphicCharacter.h	/^	void addTime( Real deltaTime );$/;"	p	class:GraphicCharacter	access:public	signature:( Real deltaTime )
amp	tinyxml/docs/classTiXmlComment-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#a52ef17e7080df2490cf87bde380685ab">operator&lt;&lt;<\/a>(std::string &amp;out, const TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
amp	tinyxml/docs/classTiXmlComment-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7">operator&lt;&lt;<\/a>(std::ostream &amp;out, const TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
amp	tinyxml/docs/classTiXmlComment-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#ab57bd426563c926844f65a78412e18b9">operator&gt;&gt;<\/a>(std::istream &amp;in, TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
amp	tinyxml/docs/classTiXmlDeclaration-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#a52ef17e7080df2490cf87bde380685ab">operator&lt;&lt;<\/a>(std::string &amp;out, const TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
amp	tinyxml/docs/classTiXmlDeclaration-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7">operator&lt;&lt;<\/a>(std::ostream &amp;out, const TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
amp	tinyxml/docs/classTiXmlDeclaration-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#ab57bd426563c926844f65a78412e18b9">operator&gt;&gt;<\/a>(std::istream &amp;in, TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
amp	tinyxml/docs/classTiXmlDocument-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#a52ef17e7080df2490cf87bde380685ab">operator&lt;&lt;<\/a>(std::string &amp;out, const TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
amp	tinyxml/docs/classTiXmlDocument-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7">operator&lt;&lt;<\/a>(std::ostream &amp;out, const TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
amp	tinyxml/docs/classTiXmlDocument-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#ab57bd426563c926844f65a78412e18b9">operator&gt;&gt;<\/a>(std::istream &amp;in, TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
amp	tinyxml/docs/classTiXmlElement-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#a52ef17e7080df2490cf87bde380685ab">operator&lt;&lt;<\/a>(std::string &amp;out, const TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
amp	tinyxml/docs/classTiXmlElement-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7">operator&lt;&lt;<\/a>(std::ostream &amp;out, const TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
amp	tinyxml/docs/classTiXmlElement-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#ab57bd426563c926844f65a78412e18b9">operator&gt;&gt;<\/a>(std::istream &amp;in, TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
amp	tinyxml/docs/classTiXmlNode-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#a52ef17e7080df2490cf87bde380685ab">operator&lt;&lt;<\/a>(std::string &amp;out, const TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
amp	tinyxml/docs/classTiXmlNode-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7">operator&lt;&lt;<\/a>(std::ostream &amp;out, const TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
amp	tinyxml/docs/classTiXmlNode-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#ab57bd426563c926844f65a78412e18b9">operator&gt;&gt;<\/a>(std::istream &amp;in, TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
amp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" align="right" valign="top">std::istream &amp;&nbsp;<\/td><td class="memItemRight" valign="bottom"><a class="el" href="classTiXmlNode.html#ab57bd426563c926844f65a78412e18b9">operator&gt;&gt;<\/a> (std::istream &amp;in, <a class="el" href="classTiXmlNode.html">TiXmlNode<\/a> &amp;base)<\/td><\/tr>$/;"	v
amp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&nbsp;<\/td><td class="memItemRight" valign="bottom"><a class="el" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7">operator&lt;&lt;<\/a> (std::ostream &amp;out, const <a class="el" href="classTiXmlNode.html">TiXmlNode<\/a> &amp;base)<\/td><\/tr>$/;"	v
amp	tinyxml/docs/classTiXmlNode.html	/^std::string &amp;&nbsp;<\/td><td class="memItemRight" valign="bottom"><a class="el" href="classTiXmlNode.html#a52ef17e7080df2490cf87bde380685ab">operator&lt;&lt;<\/a> (std::string &amp;out, const <a class="el" href="classTiXmlNode.html">TiXmlNode<\/a> &amp;base)<\/td><\/tr>$/;"	v
amp	tinyxml/docs/classTiXmlText-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#a52ef17e7080df2490cf87bde380685ab">operator&lt;&lt;<\/a>(std::string &amp;out, const TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
amp	tinyxml/docs/classTiXmlText-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7">operator&lt;&lt;<\/a>(std::ostream &amp;out, const TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
amp	tinyxml/docs/classTiXmlText-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#ab57bd426563c926844f65a78412e18b9">operator&gt;&gt;<\/a>(std::istream &amp;in, TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
amp	tinyxml/docs/classTiXmlUnknown-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#a52ef17e7080df2490cf87bde380685ab">operator&lt;&lt;<\/a>(std::string &amp;out, const TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
amp	tinyxml/docs/classTiXmlUnknown-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7">operator&lt;&lt;<\/a>(std::ostream &amp;out, const TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
amp	tinyxml/docs/classTiXmlUnknown-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#ab57bd426563c926844f65a78412e18b9">operator&gt;&gt;<\/a>(std::istream &amp;in, TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
amp	tinyxml/docs/tinystr_8h_source.html	/^<a name="l00274"><\/a>00274 <span class="keyword">inline<\/span> <span class="keywordtype">bool<\/span> operator &lt; (<span class="keyword">const<\/span> TiXmlString &amp; a, <span class="keyword">const<\/span> TiXmlString &amp; b)$/;"	v
amp	tinyxml/docs/tinystr_8h_source.html	/^<a name="l00280"><\/a>00280 <span class="keyword">inline<\/span> <span class="keywordtype">bool<\/span> operator &gt;  (<span class="keyword">const<\/span> TiXmlString &amp; a, <span class="keyword">const<\/span> TiXmlString &amp; b) { <span class="keywordflow">return<\/span> b &lt; a; }$/;"	v
amp	tinyxml/docs/tinystr_8h_source.html	/^<a name="l00303"><\/a>00303     TiXmlOutStream &amp; operator &lt;&lt; (<span class="keyword">const<\/span> TiXmlString &amp; in)$/;"	m	class:TiXmlOutStream	file:	access:public
amp	tinyxml/docs/tinystr_8h_source.html	/^<a name="l00310"><\/a>00310     TiXmlOutStream &amp; operator &lt;&lt; (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * in)$/;"	m	class:TiXmlOutStream	file:	access:public
amp	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00434"><\/a>00434         <span class="keyword">friend<\/span> std::istream&amp; <a class="code" href="classTiXmlNode.html#ab57bd426563c926844f65a78412e18b9" title="An input stream operator, for every class.">operator &gt;&gt; <\/a>(std::istream&amp; in, <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base);$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:public
amp	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00452"><\/a>00452         <span class="keyword">friend<\/span> std::ostream&amp; <a class="code" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7" title="An output stream operator, for every class.">operator&lt;&lt; <\/a>(std::ostream&amp; out, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base);$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:public
amp	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00455"><\/a>00455         <span class="keyword">friend<\/span> std::string&amp; <a class="code" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7" title="An output stream operator, for every class.">operator&lt;&lt; <\/a>(std::string&amp; out, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base );$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:public
amp	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00820"><\/a>00820     <span class="keyword">const<\/span> TIXML_STRING&amp; NameTStr()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> name; }$/;"	m	class:TiXmlVisitor::TiXmlAttribute	file:	access:public
amp	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00861"><\/a>00861     <span class="keywordtype">bool<\/span> operator&lt;( <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>&amp; rhs )<span class="keyword">  const <\/span>{ <span class="keywordflow">return<\/span> name &lt; rhs.name; }$/;"	m	class:TiXmlVisitor::TiXmlAttribute	file:	access:public
amp	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00862"><\/a>00862     <span class="keywordtype">bool<\/span> operator&gt;( <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>&amp; rhs )<span class="keyword">  const <\/span>{ <span class="keywordflow">return<\/span> name &gt; rhs.name; }$/;"	m	class:TiXmlVisitor::TiXmlAttribute	file:	access:public
amp	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01774"><\/a><a class="code" href="classTiXmlPrinter.html#a3bd4daf44309b41f5813a833caa0d1c9">01774<\/a> <span class="preprocessor">    const std::string&amp; Str()                        { return buffer; }<\/span>$/;"	m	class:TiXmlVisitor::TiXmlPrinter	file:	access:public
append	tinyxml/tinystr.cpp	/^TiXmlString& TiXmlString::append(const char* str, size_type len)$/;"	f	class:TiXmlString	signature:(const char* str, size_type len)
append	tinyxml/tinystr.h	/^	TiXmlString& append (const char* str, size_type len);$/;"	p	class:TiXmlString	access:public	signature:(const char* str, size_type len)
assign	tinyxml/tinystr.cpp	/^TiXmlString& TiXmlString::assign(const char* str, size_type len)$/;"	f	class:TiXmlString	signature:(const char* str, size_type len)
assign	tinyxml/tinystr.h	/^	TiXmlString& assign (const char* str, size_type len);$/;"	p	class:TiXmlString	access:public	signature:(const char* str, size_type len)
at	tinyxml/tinystr.h	/^	const char& at (size_type index) const$/;"	f	class:TiXmlString	access:public	signature:(size_type index) const
attribute	tinyxml/docs/classTiXmlAttribute.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Return the value of this attribute, converted to a double. <br\/><\/td><\/tr>$/;"	v
attribute	tinyxml/docs/classTiXmlAttribute.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Return the value of this attribute, converted to an integer. <br\/><\/td><\/tr>$/;"	v
attributeSet	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01149"><\/a>01149     TiXmlAttributeSet attributeSet;$/;"	m	class:TiXmlVisitor::TiXmlElement	file:	access:private
attributeSet	tinyxml/tinyxml.h	/^	TiXmlAttributeSet attributeSet;$/;"	m	class:TiXmlElement	access:private
b	tinyxml/utf8test.gif	/^Diòé˛/;"	v
base	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00434"><\/a>00434         <span class="keyword">friend<\/span> std::istream&amp; <a class="code" href="classTiXmlNode.html#ab57bd426563c926844f65a78412e18b9" title="An input stream operator, for every class.">operator &gt;&gt; <\/a>(std::istream&amp; in, <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base);$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:public
base	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00452"><\/a>00452         <span class="keyword">friend<\/span> std::ostream&amp; <a class="code" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7" title="An output stream operator, for every class.">operator&lt;&lt; <\/a>(std::ostream&amp; out, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base);$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:public
base	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00455"><\/a>00455         <span class="keyword">friend<\/span> std::string&amp; <a class="code" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7" title="An output stream operator, for every class.">operator&lt;&lt; <\/a>(std::string&amp; out, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base );$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:public
btKinematicCharacterController	btKinematicCharacterController.h	/^	btKinematicCharacterController( btPairCachingGhostObject* ghostObject,btConvexShape* convexShape,btScalar stepHeight, int upAxis = 1 );$/;"	p	class:btKinematicCharacterController	access:public	signature:( btPairCachingGhostObject* ghostObject,btConvexShape* convexShape,btScalar stepHeight, int upAxis = 1 )
btKinematicCharacterController	btKinematicCharacterController.h	/^class btKinematicCharacterController : public btCharacterControllerInterface$/;"	c	inherits:btCharacterControllerInterface
btKinematicCharacterController::btKinematicCharacterController	btKinematicCharacterController.h	/^	btKinematicCharacterController( btPairCachingGhostObject* ghostObject,btConvexShape* convexShape,btScalar stepHeight, int upAxis = 1 );$/;"	p	class:btKinematicCharacterController	access:public	signature:( btPairCachingGhostObject* ghostObject,btConvexShape* convexShape,btScalar stepHeight, int upAxis = 1 )
btKinematicCharacterController::canJump	btKinematicCharacterController.h	/^	bool canJump() const;$/;"	p	class:btKinematicCharacterController	access:public	signature:() const
btKinematicCharacterController::computeReflectionDirection	btKinematicCharacterController.h	/^	btVector3 computeReflectionDirection (const btVector3& direction, const btVector3& normal);$/;"	p	class:btKinematicCharacterController	access:protected	signature:(const btVector3& direction, const btVector3& normal)
btKinematicCharacterController::debugDraw	btKinematicCharacterController.h	/^	void debugDraw( btIDebugDraw * debugDrawer );$/;"	p	class:btKinematicCharacterController	access:public	signature:( btIDebugDraw * debugDrawer )
btKinematicCharacterController::getGhostObject	btKinematicCharacterController.h	/^	btPairCachingGhostObject * getGhostObject();$/;"	p	class:btKinematicCharacterController	access:public	signature:()
btKinematicCharacterController::getGravity	btKinematicCharacterController.h	/^	btScalar getGravity() const;$/;"	p	class:btKinematicCharacterController	access:public	signature:() const
btKinematicCharacterController::getMaxSlope	btKinematicCharacterController.h	/^	btScalar getMaxSlope() const;$/;"	p	class:btKinematicCharacterController	access:public	signature:() const
btKinematicCharacterController::getUpAxisDirections	btKinematicCharacterController.h	/^	static btVector3 * getUpAxisDirections();$/;"	p	class:btKinematicCharacterController	access:protected	signature:()
btKinematicCharacterController::jump	btKinematicCharacterController.h	/^	void jump();$/;"	p	class:btKinematicCharacterController	access:public	signature:()
btKinematicCharacterController::m_addedMargin	btKinematicCharacterController.h	/^	btScalar	m_addedMargin;\/\/@todo: remove this and fix the code$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::m_convexShape	btKinematicCharacterController.h	/^	btConvexShape			 * m_convexShape; \/\/is also in m_ghostObject, but it needs to be convex, so we store it here to avoid upcast$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::m_currentPosition	btKinematicCharacterController.h	/^	btVector3 m_currentPosition;$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::m_currentStepOffset	btKinematicCharacterController.h	/^	btScalar  m_currentStepOffset;$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::m_fallSpeed	btKinematicCharacterController.h	/^	btScalar m_fallSpeed;		 \/\/ µÙ¬‰ÀŸ∂»$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::m_ghostObject	btKinematicCharacterController.h	/^	btPairCachingGhostObject * m_ghostObject;$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::m_gravity	btKinematicCharacterController.h	/^	btScalar m_gravity;			 \/\/ ÷ÿ¡¶$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::m_halfHeight	btKinematicCharacterController.h	/^	btScalar m_halfHeight;$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::m_jumpSpeed	btKinematicCharacterController.h	/^	btScalar m_jumpSpeed;		 \/\/ Ã¯‘æÀŸ∂»$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::m_manifoldArray	btKinematicCharacterController.h	/^	btManifoldArray	m_manifoldArray;$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::m_maxJumpHeight	btKinematicCharacterController.h	/^	btScalar m_maxJumpHeight;	 \/\/ ◊Ó¥ÛÃ¯‘æ∏ﬂ∂»$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::m_maxSlopeCosine	btKinematicCharacterController.h	/^	btScalar m_maxSlopeCosine;   \/\/ ”‡œ“ | Cosine equivalent of m_maxSlopeRadians (calculated once when set, for optimization)$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::m_maxSlopeRadians	btKinematicCharacterController.h	/^	btScalar m_maxSlopeRadians;  \/\/ ◊Ó¥Ûø…≈ ‘Ω–±∆¬∂» ˝ | Slope angle that is set (used for returning the exact value)$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::m_normalizedDirection	btKinematicCharacterController.h	/^	btVector3	m_normalizedDirection;$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::m_stepHeight	btKinematicCharacterController.h	/^	btScalar m_stepHeight;$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::m_targetPosition	btKinematicCharacterController.h	/^	btVector3 m_targetPosition;$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::m_touchingContact	btKinematicCharacterController.h	/^	bool m_touchingContact;$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::m_touchingNormal	btKinematicCharacterController.h	/^	btVector3 m_touchingNormal;$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::m_turnAngle	btKinematicCharacterController.h	/^	btScalar m_turnAngle;$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::m_upAxis	btKinematicCharacterController.h	/^	int			m_upAxis;$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::m_useGhostObjectSweepTest	btKinematicCharacterController.h	/^	bool		m_useGhostObjectSweepTest;$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::m_useWalkDirection	btKinematicCharacterController.h	/^	bool		m_useWalkDirection;$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::m_velocityTimeInterval	btKinematicCharacterController.h	/^	btScalar	m_velocityTimeInterval;$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::m_verticalOffset	btKinematicCharacterController.h	/^	btScalar m_verticalOffset;	 \/\/ ¥π÷±∆´“∆¡ø$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::m_verticalVelocity	btKinematicCharacterController.h	/^	btScalar m_verticalVelocity; \/\/ ¥π÷±ÀŸ∂», jump  ±$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::m_walkDirection	btKinematicCharacterController.h	/^	btVector3	m_walkDirection;$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::m_wasJumping	btKinematicCharacterController.h	/^	bool		m_wasJumping;  \/\/  «∑ÒÃ¯‘æ◊¥Ã¨$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::m_wasOnGround	btKinematicCharacterController.h	/^	bool		m_wasOnGround; \/\/  «∑Ò‘⁄µÿ…œ$/;"	m	class:btKinematicCharacterController	access:protected
btKinematicCharacterController::onGround	btKinematicCharacterController.h	/^	bool onGround() const;$/;"	p	class:btKinematicCharacterController	access:public	signature:() const
btKinematicCharacterController::parallelComponent	btKinematicCharacterController.h	/^	btVector3 parallelComponent (const btVector3& direction, const btVector3& normal);$/;"	p	class:btKinematicCharacterController	access:protected	signature:(const btVector3& direction, const btVector3& normal)
btKinematicCharacterController::perpindicularComponent	btKinematicCharacterController.h	/^	btVector3 perpindicularComponent (const btVector3& direction, const btVector3& normal);$/;"	p	class:btKinematicCharacterController	access:protected	signature:(const btVector3& direction, const btVector3& normal)
btKinematicCharacterController::playerStep	btKinematicCharacterController.h	/^	void playerStep( btCollisionWorld* collisionWorld, btScalar dt );$/;"	p	class:btKinematicCharacterController	access:public	signature:( btCollisionWorld* collisionWorld, btScalar dt )
btKinematicCharacterController::preStep	btKinematicCharacterController.h	/^	void preStep( btCollisionWorld* collisionWorld );$/;"	p	class:btKinematicCharacterController	access:public	signature:( btCollisionWorld* collisionWorld )
btKinematicCharacterController::recoverFromPenetration	btKinematicCharacterController.h	/^	bool recoverFromPenetration ( btCollisionWorld* collisionWorld);$/;"	p	class:btKinematicCharacterController	access:protected	signature:( btCollisionWorld* collisionWorld)
btKinematicCharacterController::reset	btKinematicCharacterController.h	/^	void reset();$/;"	p	class:btKinematicCharacterController	access:public	signature:()
btKinematicCharacterController::setFallSpeed	btKinematicCharacterController.h	/^	void setFallSpeed( btScalar fallSpeed );$/;"	p	class:btKinematicCharacterController	access:public	signature:( btScalar fallSpeed )
btKinematicCharacterController::setGravity	btKinematicCharacterController.h	/^	void setGravity( btScalar gravity );$/;"	p	class:btKinematicCharacterController	access:public	signature:( btScalar gravity )
btKinematicCharacterController::setJumpSpeed	btKinematicCharacterController.h	/^	void setJumpSpeed( btScalar jumpSpeed );$/;"	p	class:btKinematicCharacterController	access:public	signature:( btScalar jumpSpeed )
btKinematicCharacterController::setMaxJumpHeight	btKinematicCharacterController.h	/^	void setMaxJumpHeight( btScalar maxJumpHeight );$/;"	p	class:btKinematicCharacterController	access:public	signature:( btScalar maxJumpHeight )
btKinematicCharacterController::setMaxSlope	btKinematicCharacterController.h	/^	void setMaxSlope( btScalar slopeRadians );$/;"	p	class:btKinematicCharacterController	access:public	signature:( btScalar slopeRadians )
btKinematicCharacterController::setUpAxis	btKinematicCharacterController.h	/^	void setUpAxis( int axis )$/;"	f	class:btKinematicCharacterController	access:public	signature:( int axis )
btKinematicCharacterController::setUseGhostSweepTest	btKinematicCharacterController.h	/^	void setUseGhostSweepTest( bool useGhostObjectSweepTest )$/;"	f	class:btKinematicCharacterController	access:public	signature:( bool useGhostObjectSweepTest )
btKinematicCharacterController::setVelocityForTimeInterval	btKinematicCharacterController.h	/^	virtual void setVelocityForTimeInterval( const btVector3& velocity, btScalar timeInterval );$/;"	p	class:btKinematicCharacterController	access:public	signature:( const btVector3& velocity, btScalar timeInterval )
btKinematicCharacterController::setWalkDirection	btKinematicCharacterController.h	/^	virtual void setWalkDirection( const btVector3& walkDirection );$/;"	p	class:btKinematicCharacterController	access:public	signature:( const btVector3& walkDirection )
btKinematicCharacterController::stepDown	btKinematicCharacterController.h	/^	void stepDown (btCollisionWorld* collisionWorld, btScalar dt);$/;"	p	class:btKinematicCharacterController	access:protected	signature:(btCollisionWorld* collisionWorld, btScalar dt)
btKinematicCharacterController::stepForwardAndStrafe	btKinematicCharacterController.h	/^	void stepForwardAndStrafe (btCollisionWorld* collisionWorld, const btVector3& walkMove);$/;"	p	class:btKinematicCharacterController	access:protected	signature:(btCollisionWorld* collisionWorld, const btVector3& walkMove)
btKinematicCharacterController::stepUp	btKinematicCharacterController.h	/^	void stepUp (btCollisionWorld* collisionWorld);$/;"	p	class:btKinematicCharacterController	access:protected	signature:(btCollisionWorld* collisionWorld)
btKinematicCharacterController::updateAction	btKinematicCharacterController.h	/^	virtual void updateAction( btCollisionWorld * collisionWorld, btScalar deltaTime )$/;"	f	class:btKinematicCharacterController	access:public	signature:( btCollisionWorld * collisionWorld, btScalar deltaTime )
btKinematicCharacterController::updateTargetPositionBasedOnCollision	btKinematicCharacterController.h	/^	void updateTargetPositionBasedOnCollision (const btVector3& hit_normal, btScalar tangentMag = btScalar(0.0), btScalar normalMag = btScalar(1.0));$/;"	p	class:btKinematicCharacterController	access:protected	signature:(const btVector3& hit_normal, btScalar tangentMag = btScalar(0.0), btScalar normalMag = btScalar(1.0))
btKinematicCharacterController::warp	btKinematicCharacterController.h	/^	void warp( const btVector3& origin );$/;"	p	class:btKinematicCharacterController	access:public	signature:( const btVector3& origin )
btKinematicCharacterController::~btKinematicCharacterController	btKinematicCharacterController.h	/^	~btKinematicCharacterController();$/;"	p	class:btKinematicCharacterController	access:public	signature:()
buffer	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01734"><\/a>01734                      buffer(), indent( <span class="stringliteral">&quot;    &quot;<\/span> ), lineBreak( <span class="stringliteral">&quot;\\n&quot;<\/span> ) {}$/;"	p	class:TiXmlVisitor::TiXmlPrinter	file:	access:public	signature:()
buffer	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01788"><\/a>01788     TIXML_STRING buffer;$/;"	m	class:TiXmlVisitor::TiXmlPrinter	file:	access:private
buffer	tinyxml/tinyxml.h	/^	TIXML_STRING buffer;$/;"	m	class:TiXmlPrinter	access:private
build_simple_doc	tinyxml/docs/tutorial0.html	/^void build_simple_doc( )$/;"	f	signature:( )
c_str	tinyxml/tinystr.h	/^	const char * c_str () const { return rep_->str; }$/;"	f	class:TiXmlString	access:public	signature:() const
called	tinyxml/docs/classTiXmlPrinter.html	/^<p>When constructed, the <a class="el" href="classTiXmlPrinter.html" title="Print to memory functionality.">TiXmlPrinter<\/a> is in its default "pretty printing" mode. Before calling Accept() you can call methods to control the printing of the XML document. After <a class="el" href="classTiXmlNode.html#acc0f88b7462c6cb73809d410a4f5bb86" title="Accept a hierchical visit the nodes in the TinyXML DOM.">TiXmlNode::Accept()<\/a> is called, the printed document can be accessed via the <a class="el" href="classTiXmlPrinter.html#a859eede9597d3e0355b77757be48735e" title="Return the result.">CStr()<\/a>, <a class="el" href="classTiXmlPrinter.html#a3bd4daf44309b41f5813a833caa0d1c9" title="Return the result.">Str()<\/a>, and <a class="el" href="classTiXmlPrinter.html#ad01375ae9199bd2f48252eaddce3039d" title="Return the length of the result string.">Size()<\/a> methods.<\/p>$/;"	v
canJump	DynamicCharacterController.h	/^	bool canJump () const;$/;"	p	class:DynamicCharacterController	access:public	signature:() const
canJump	btKinematicCharacterController.h	/^	bool canJump() const;$/;"	p	class:btKinematicCharacterController	access:public	signature:() const
capacity	tinyxml/tinystr.h	/^		size_type size, capacity;$/;"	m	struct:TiXmlString::Rep	access:public
capacity	tinyxml/tinystr.h	/^	size_type capacity () const { return rep_->capacity; }$/;"	f	class:TiXmlString	access:public	signature:() const
cdata	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01261"><\/a>01261     <span class="keywordtype">bool<\/span> cdata;         <span class="comment">\/\/ true if this should be input and output as a CDATA style text element<\/span>$/;"	m	class:TiXmlVisitor::TiXmlText	file:	access:private
cdata	tinyxml/tinyxml.h	/^	bool cdata;			\/\/ true if this should be input and output as a CDATA style text element$/;"	m	class:TiXmlText	access:private
characters	tinyxml/docs/classTiXmlPrinter.html	/^). Some operating systems prefer other characters, or can be set to the null\/empty string for no indenation. <\/p>$/;"	v
checks	tinyxml/docs/classTiXmlHandle.html	/^<p>A <a class="el" href="classTiXmlHandle.html" title="A TiXmlHandle is a class that wraps a node pointer with null checks; this is an incredibly...">TiXmlHandle<\/a> is a class that wraps a node pointer with null checks; this is an incredibly useful thing.  $/;"	v	typeref:class:null
checks	tinyxml/docs/classTiXmlHandle.html	/^<p>A <a class="el" href="classTiXmlHandle.html" title="A TiXmlHandle is a class that wraps a node pointer with null checks; this is an incredibly...">TiXmlHandle<\/a> is a class that wraps a node pointer with null checks; this is an incredibly useful thing. <\/p>$/;"	v	typeref:class:null
chooseSceneManager	GameBase.h	/^    virtual void chooseSceneManager(void);$/;"	p	class:GameBase	access:protected	signature:(void)
chr	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00404"><\/a>00404         <span class="keywordtype">char<\/span>            chr;$/;"	m	struct:TiXmlVisitor::TiXmlBase::Entity	file:	access:public
chr	tinyxml/tinyxml.h	/^		char		    chr;$/;"	m	struct:TiXmlBase::Entity	access:public
classes	tinyxml/docs/annotated.html	/^<h1>Class List<\/h1>Here are the classes, structs, unions and interfaces with brief descriptions:<table>$/;"	v
cleanMap	GameMap.h	/^    virtual void cleanMap(void);$/;"	p	class:GameMap	access:public	signature:(void)
clear	tinyxml/tinystr.h	/^	void clear ()$/;"	f	class:TiXmlString	access:public	signature:()
col	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00105"><\/a>00105     <span class="keywordtype">int<\/span> col;    <span class="comment">\/\/ 0 based.<\/span>$/;"	m	struct:TiXmlCursor	file:	access:public
col	tinyxml/tinyxml.h	/^	int col;	\/\/ 0 based.$/;"	m	struct:TiXmlCursor	access:public
completely	tinyxml/docs/hierarchy.html	/^<h1>Class Hierarchy<\/h1>This inheritance list is sorted roughly, but not completely, alphabetically:<ul>$/;"	v
computeReflectionDirection	btKinematicCharacterController.h	/^	btVector3 computeReflectionDirection (const btVector3& direction, const btVector3& normal);$/;"	p	class:btKinematicCharacterController	access:protected	signature:(const btVector3& direction, const btVector3& normal)
condenseWhiteSpace	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00413"><\/a>00413     <span class="keyword">static<\/span> <span class="keywordtype">bool<\/span> condenseWhiteSpace;$/;"	m	class:TiXmlVisitor::TiXmlBase	file:	access:private
condenseWhiteSpace	tinyxml/tinyxml.cpp	/^bool TiXmlBase::condenseWhiteSpace = true;$/;"	m	class:TiXmlBase	file:
condenseWhiteSpace	tinyxml/tinyxml.h	/^	static bool condenseWhiteSpace;$/;"	m	class:TiXmlBase	access:private
configure	GameBase.h	/^    virtual bool configure(void);$/;"	p	class:GameBase	access:protected	signature:(void)
configureTerrainDefaults	GameMap.h	/^    void configureTerrainDefaults( Ogre::SceneManager * pSceneMgr, Ogre::Light * pLight );$/;"	p	class:GameMap	access:private	signature:( Ogre::SceneManager * pSceneMgr, Ogre::Light * pLight )
constructed	tinyxml/docs/classTiXmlPrinter.html	/^<p>When constructed, the <a class="el" href="classTiXmlPrinter.html" title="Print to memory functionality.">TiXmlPrinter<\/a> is in its default "pretty printing" mode. Before calling Accept() you can call methods to control the printing of the XML document. After <a class="el" href="classTiXmlNode.html#acc0f88b7462c6cb73809d410a4f5bb86" title="Accept a hierchical visit the nodes in the TinyXML DOM.">TiXmlNode::Accept()<\/a> is called, the printed document can be accessed via the <a class="el" href="classTiXmlPrinter.html#a859eede9597d3e0355b77757be48735e" title="Return the result.">CStr()<\/a>, <a class="el" href="classTiXmlPrinter.html#a3bd4daf44309b41f5813a833caa0d1c9" title="Return the result.">Str()<\/a>, and <a class="el" href="classTiXmlPrinter.html#ad01375ae9199bd2f48252eaddce3039d" title="Return the length of the result string.">Size()<\/a> methods.<\/p>$/;"	v
correct	tinyxml/docs/index.html	/^<p>The best place for the complete, correct, and quite frankly hard to read spec is at <a href="http:\/\/www.w3.org\/TR\/2004\/REC-xml-20040204\/">http:\/\/www.w3.org\/TR\/2004\/REC-xml-20040204\/<\/a>. An intro to XML (that I really like) can be found at <a href="http:\/\/skew.org\/xml\/tutorial\/">http:\/\/skew.org\/xml\/tutorial<\/a>.<\/p>$/;"	v
createBox	PhysicsFrameListener.h	/^ 	void createBox( Ogre::SceneManager * pSceneMgr, Ogre::Camera * mCamera );					\/\/ Õ∂÷¿∫–◊”$/;"	p	class:PhysicsFrameListener	access:public	signature:( Ogre::SceneManager * pSceneMgr, Ogre::Camera * mCamera )
createBoxShape	PhysicsFrameListener.h	/^	void createBoxShape( Ogre::Entity * entity, Ogre::Vector3 position, bool bStatic = false ); \/\/ ¥¥Ω®∫–◊”$/;"	p	class:PhysicsFrameListener	access:public	signature:( Ogre::Entity * entity, Ogre::Vector3 position, bool bStatic = false )
createCamera	GameBase.h	/^	virtual void createCamera(void)		= 0;$/;"	p	class:GameBase	access:protected	signature:(void)
createCamera	SeekSeekSeek.h	/^    virtual void createCamera(void);    \/\/ Camera$/;"	p	class:SeekSeekSeek	access:protected	signature:(void)
createEnvir	SeekSeekSeek.h	/^    virtual void createEnvir(void);     \/\/ Environment: Light, Sky, etc.$/;"	p	class:SeekSeekSeek	access:protected	signature:(void)
createFrameListener	GameBase.h	/^    virtual void createFrameListener(void);$/;"	p	class:GameBase	access:protected	signature:(void)
createFrameListener	GameMap.h	/^    virtual void createFrameListener( OgreBites::SdkTrayManager * pTrayMgr );$/;"	p	class:GameMap	access:public	signature:( OgreBites::SdkTrayManager * pTrayMgr )
createFrameListener	SeekSeekSeek.h	/^    virtual void createFrameListener(void);$/;"	p	class:SeekSeekSeek	access:protected	signature:(void)
createGraphicCharacter	Character.h	/^	void createGraphicCharacter();			\/\/ ππΩ®Õº–Œ—ßΩ«…´$/;"	p	class:Character	access:public	signature:()
createGraphicCharacter	Character.h~	/^	void createGraphicCharacter();			\/\/ ππΩ®Õº–Œ—ßΩ«…´$/;"	p	class:Character	file:	access:public	signature:()
createKinematicCharacter	Character.h	/^	void createKinematicCharacter();		\/\/ ππΩ®‘À∂Ø—ßΩ«…´$/;"	p	class:Character	access:public	signature:()
createKinematicCharacter	Character.h~	/^	void createKinematicCharacter();		\/\/ ππΩ®‘À∂Ø—ßΩ«…´$/;"	p	class:Character	file:	access:public	signature:()
createPhysicsScene	PhysicsBase.h	/^	virtual void createPhysicsScene()   = 0;	\/\/ ‘⁄µÿ–Œª˘¥°…œππΩ®≥°æ∞$/;"	p	class:PhysicsBase	access:public	signature:()
createPhysicsScene	PhysicsFrameListener.h	/^	virtual void createPhysicsScene();		\/\/ ‘⁄µÿ–Œª˘¥°…œππΩ®≥°æ∞$/;"	p	class:PhysicsFrameListener	access:public	signature:()
createPhysicsTerrain	PhysicsBase.h	/^	virtual void createPhysicsTerrain() = 0;	\/\/ ππΩ®µÿ–Œ$/;"	p	class:PhysicsBase	access:public	signature:()
createPhysicsTerrain	PhysicsFrameListener.h	/^	virtual void createPhysicsTerrain();	\/\/ ππΩ®µÿ–Œ$/;"	p	class:PhysicsFrameListener	access:public	signature:()
createResourceListener	GameBase.h	/^    virtual void createResourceListener(void);$/;"	p	class:GameBase	access:protected	signature:(void)
createScene	GameBase.h	/^    virtual void createScene(void)		= 0;$/;"	p	class:GameBase	access:protected	signature:(void)
createScene	SeekSeekSeek.h	/^    virtual void createScene(void);$/;"	p	class:SeekSeekSeek	access:protected	signature:(void)
createViewports	GameBase.h	/^	virtual void createViewports(void)	= 0;$/;"	p	class:GameBase	access:protected	signature:(void)
createViewports	SeekSeekSeek.h	/^    virtual void createViewports(void); \/\/ Viewport$/;"	p	class:SeekSeekSeek	access:protected	signature:(void)
cursor	tinyxml/tinyxmlparser.cpp	/^	TiXmlCursor		cursor;$/;"	m	class:TiXmlParsingData	file:	access:private
data	tinyxml/tinystr.h	/^	const char * data () const { return rep_->str; }$/;"	f	class:TiXmlString	access:public	signature:() const
debugDraw	btKinematicCharacterController.h	/^	void debugDraw( btIDebugDraw * debugDrawer );$/;"	p	class:btKinematicCharacterController	access:public	signature:( btIDebugDraw * debugDrawer )
debugDrawer	PhysicsBase.h	/^ 	OgreBulletCollisions::DebugDrawer * debugDrawer; \/\/ ”√”⁄DeBug√ËªÊ¬Ãœﬂ$/;"	m	class:PhysicsBase	access:protected
defineTerrain	GameMap.h	/^    void defineTerrain( long x, long y );$/;"	p	class:GameMap	access:private	signature:( long x, long y )
depth	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01786"><\/a>01786     <span class="keywordtype">int<\/span> depth;$/;"	m	class:TiXmlVisitor::TiXmlPrinter	file:	access:private
depth	tinyxml/tinyxml.h	/^	int depth;$/;"	m	class:TiXmlPrinter	access:private
destroy	DynamicCharacterController.h	/^	void destroy ();$/;"	p	class:DynamicCharacterController	access:public	signature:()
destroyPhysicsWorld	PhysicsBase.h	/^	virtual void destroyPhysicsWorld();$/;"	p	class:PhysicsBase	access:public	signature:()
destroyPhysicsWorld	PhysicsFrameListener.h	/^	virtual void destroyPhysicsWorld();$/;"	p	class:PhysicsFrameListener	access:public	signature:()
destroyScene	GameBase.h	/^    virtual void destroyScene(void);$/;"	p	class:GameBase	access:protected	signature:(void)
destroyScene	SeekSeekSeek.h	/^    virtual void destroyScene(void);$/;"	p	class:SeekSeekSeek	access:protected	signature:(void)
doCharacterJump	KinematicCharacter.h	/^	void doCharacterJump();		\/\/ Ã¯‘æ$/;"	p	class:KinematicCharacter	access:public	signature:()
document	tinyxml/docs/classTiXmlDocument.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Create an empty document, that has no name. <br\/><\/td><\/tr>$/;"	v
document	tinyxml/docs/index.html	/^<p>In brief, TinyXML parses an XML document, and builds from that a Document Object Model (DOM) that can be read, modified, and saved.<\/p>$/;"	v
document	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00883"><\/a>00883     <a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a>*  document;   <span class="comment">\/\/ A pointer back to a document, for error reporting.<\/span>$/;"	m	class:TiXmlVisitor::TiXmlAttribute	file:	access:private
document	tinyxml/tinyxml.h	/^	TiXmlDocument*	document;	\/\/ A pointer back to a document, for error reporting.$/;"	m	class:TiXmlAttribute	access:private
dump_attribs_to_stdout	tinyxml/docs/tutorial0.html	/^int dump_attribs_to_stdout(TiXmlElement* pElement, unsigned int indent)$/;"	f	signature:(TiXmlElement* pElement, unsigned int indent)
dump_to_stdout	tinyxml/docs/tutorial0.html	/^void dump_to_stdout(const char* pFilename)$/;"	f	signature:(const char* pFilename)
dynamicObjects	DotSceneLoader.h	/^        std::vector<String> dynamicObjects;$/;"	m	class:Ogre::DotSceneLoader	access:public
element	tinyxml/docs/classTiXmlHandle.html	/^		TiXmlElement* element = root-&gt;FirstChildElement( "Element" );$/;"	m	class:example	file:	access:private
element	tinyxml/docs/tutorial0.html	/^<p>The following code shows one way (not the only way) to get all attributes of an element, print the name and string value, and if the value can be converted to an integer or double, print that value too:<\/p>$/;"	v
empty	tinyxml/tinystr.h	/^	bool empty () const { return rep_->size == 0; }$/;"	f	class:TiXmlString	access:public	signature:() const
encoding	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01335"><\/a>01335     TIXML_STRING encoding;$/;"	m	class:TiXmlVisitor::TiXmlDeclaration	file:	access:private
encoding	tinyxml/tinyxml.h	/^	TIXML_STRING encoding;$/;"	m	class:TiXmlDeclaration	access:private
endMemState	tinyxml/xmltest.cpp	/^	_CrtMemState endMemState;$/;"	v
entity	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00412"><\/a>00412     <span class="keyword">static<\/span> Entity entity[ NUM_ENTITY ];$/;"	m	class:TiXmlVisitor::TiXmlBase	file:	access:private
entity	tinyxml/tinyxml.h	/^	static Entity entity[ NUM_ENTITY ];$/;"	m	class:TiXmlBase	access:private
entity	tinyxml/tinyxmlparser.cpp	/^TiXmlBase::Entity TiXmlBase::entity[ NUM_ENTITY ] = $/;"	m	class:TiXmlBase	file:
error	tinyxml/docs/classTiXmlDocument.html	/^<p>If you have handled the error, it can be reset with this call. <\/p>$/;"	v
error	tinyxml/docs/classTiXmlDocument.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">If you have handled the error, it can be reset with this call.  <a href="#ac66b8c28db86363315712a3574e87c35"><\/a><br\/><\/td><\/tr>$/;"	v
error	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01542"><\/a>01542     <span class="keywordtype">bool<\/span> error;$/;"	m	class:TiXmlVisitor::TiXmlDocument	file:	access:private
error	tinyxml/tinyxml.h	/^	bool error;$/;"	m	class:TiXmlDocument	access:private
errorDesc	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01544"><\/a>01544     TIXML_STRING errorDesc;$/;"	m	class:TiXmlVisitor::TiXmlDocument	file:	access:private
errorDesc	tinyxml/tinyxml.h	/^	TIXML_STRING errorDesc;$/;"	m	class:TiXmlDocument	access:private
errorId	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01543"><\/a>01543     <span class="keywordtype">int<\/span>  errorId;$/;"	m	class:TiXmlVisitor::TiXmlDocument	file:	access:private
errorId	tinyxml/tinyxml.h	/^	int  errorId;$/;"	m	class:TiXmlDocument	access:private
errorLocation	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01546"><\/a>01546     TiXmlCursor errorLocation;$/;"	m	class:TiXmlVisitor::TiXmlDocument	file:	access:private
errorLocation	tinyxml/tinyxml.h	/^	TiXmlCursor errorLocation;$/;"	m	class:TiXmlDocument	access:private
errorString	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00371"><\/a>00371     <span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* errorString[ TIXML_ERROR_STRING_COUNT ];$/;"	m	class:TiXmlVisitor::TiXmlBase	file:	access:protected
errorString	tinyxml/tinyxml.h	/^	static const char* errorString[ TIXML_ERROR_STRING_COUNT ];$/;"	m	class:TiXmlBase	access:protected
errorString	tinyxml/tinyxmlerror.cpp	/^const char* TiXmlBase::errorString[ TIXML_ERROR_STRING_COUNT ] =$/;"	m	class:TiXmlBase	file:
example	tinyxml/docs/classTiXmlHandle.html	/^<p>Take an example: <\/p>$/;"	c	file:	inherits:lt,Document,gt,lt,ElementattributeA,gt,lt,ChildattributeB,gt,lt,ChildattributeB,gt,lt,Element,gt,lt,Document,gt,Assumingyouwantthevalueof,inthe,nd,element,it,TiXmlElement,root,document,FirstChildElement,root
example::element	tinyxml/docs/classTiXmlHandle.html	/^		TiXmlElement* element = root-&gt;FirstChildElement( "Element" );$/;"	m	class:example	file:	access:private
fadeAnimations	GraphicCharacter.h	/^	void fadeAnimations( Real deltaTime );$/;"	p	class:GraphicCharacter	access:private	signature:( Real deltaTime )
find	tinyxml/tinystr.h	/^	size_type find (char lookup) const$/;"	f	class:TiXmlString	access:public	signature:(char lookup) const
find	tinyxml/tinystr.h	/^	size_type find (char tofind, size_type offset) const$/;"	f	class:TiXmlString	access:public	signature:(char tofind, size_type offset) const
finish	LoadingBar.h	/^	virtual void finish(void)$/;"	f	class:LoadingBar	access:public	signature:(void)
finish	tinyxml/tinystr.h	/^	char* finish() const { return rep_->str + rep_->size; }$/;"	f	class:TiXmlString	access:private	signature:() const
firstChild	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00758"><\/a>00758     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>*      firstChild;$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:protected
firstChild	tinyxml/tinyxml.h	/^	TiXmlNode*		firstChild;$/;"	m	class:TiXmlNode	access:protected
format	tags	/^!_TAG_FILE_FORMAT	2	\/extended format; --format=1 will not append ;" to lines\/$/;"	v
frameRenderingQueued	GameBase.h	/^    virtual bool frameRenderingQueued(const Ogre::FrameEvent& evt);$/;"	p	class:GameBase	access:protected	signature:(const Ogre::FrameEvent& evt)
frameRenderingQueued	GameMap.h	/^    virtual void frameRenderingQueued( OgreBites::SdkTrayManager * pTrayMgr );$/;"	p	class:GameMap	access:public	signature:( OgreBites::SdkTrayManager * pTrayMgr )
frameRenderingQueued	SeekSeekSeek.h	/^    virtual bool frameRenderingQueued(const Ogre::FrameEvent& evt);$/;"	p	class:SeekSeekSeek	access:protected	signature:(const Ogre::FrameEvent& evt)
gFail	tinyxml/xmltest.cpp	/^static int gFail = 0;$/;"	v	file:
gPass	tinyxml/xmltest.cpp	/^static int gPass = 0;$/;"	v	file:
getAttrib	DotSceneLoader.h	/^        String getAttrib(TiXmlElement *XMLNode, const String &parameter, const String &defaultValue = "");$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, const String &parameter, const String &defaultValue = ”)
getAttribBool	DotSceneLoader.h	/^        bool getAttribBool(TiXmlElement *XMLNode, const String &parameter, bool defaultValue = false);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, const String &parameter, bool defaultValue = false)
getAttribReal	DotSceneLoader.h	/^        Real getAttribReal(TiXmlElement *XMLNode, const String &parameter, Real defaultValue = 0);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, const String &parameter, Real defaultValue = 0)
getBodyEnt	GraphicCharacter.h	/^	Ogre::Entity * getBodyEnt(){ return mBodyEnt; }		 \/\/ ªÒ»°Ω«…´ µÃÂ$/;"	f	class:GraphicCharacter	access:public	signature:()
getBodyNode	GraphicCharacter.h	/^	Ogre::SceneNode * getBodyNode(){ return mBodyNode; } \/\/ ªÒ»°Ω«…´Ω⁄µ„$/;"	f	class:GraphicCharacter	access:public	signature:()
getCharacterNode	KinematicCharacter.h	/^	SceneNode * getCharacterNode(){ return mNode; } \/\/ ªÒ»°Ω«…´Ω⁄µ„$/;"	f	class:KinematicCharacter	access:public	signature:()
getCollisionObject	DynamicCharacterController.h	/^	btCollisionObject* getCollisionObject ();$/;"	p	class:DynamicCharacterController	access:public	signature:()
getGhostObject	btKinematicCharacterController.h	/^	btPairCachingGhostObject * getGhostObject();$/;"	p	class:btKinematicCharacterController	access:public	signature:()
getGoalDirection	CharacterState.h	/^	Ogre::Vector3 getGoalDirection()$/;"	f	class:CharacterState	access:public	signature:()
getGoalDirection	CharacterState.h~	/^	Ogre::Vector3 getGoalDirection()$/;"	f	class:CharacterState	access:public	signature:()
getGraphicCharacter	Character.h	/^	GraphicCharacter	* getGraphicCharacter()		{ return mGraphicCharacter;	  }	\/\/ ªÒ»°Õº–Œ—ßΩ«…´$/;"	f	class:Character	access:public	signature:()
getGraphicCharacter	Character.h~	/^	GraphicCharacter	* getGraphicCharacter()		{ return mGraphicCharacter;	  }	\/\/ ªÒ»°Õº–Œ—ßΩ«…´$/;"	f	class:Character	access:public	signature:()
getGravity	btKinematicCharacterController.h	/^	btScalar getGravity() const;$/;"	p	class:btKinematicCharacterController	access:public	signature:() const
getJumpState	CharacterState.h	/^	bool getJumpState(){ return mJump; }$/;"	f	class:CharacterState	access:public	signature:()
getJumpState	CharacterState.h~	/^	bool getJumpState(){ return mJump; }$/;"	f	class:CharacterState	access:public	signature:()
getKeyDirection	CharacterState.h	/^	Ogre::Vector3 getKeyDirection(){ return mKeyDirection; }$/;"	f	class:CharacterState	access:public	signature:()
getKeyDirection	CharacterState.h~	/^	Ogre::Vector3 getKeyDirection(){ return mKeyDirection; }$/;"	f	class:CharacterState	access:public	signature:()
getKeyDirectionX	CharacterState.h	/^	Ogre::Real getKeyDirectionX(){ return mKeyDirection.x; }$/;"	f	class:CharacterState	access:public	signature:()
getKeyDirectionX	CharacterState.h~	/^	Ogre::Real getKeyDirectionX(){ return mKeyDirection.x; }$/;"	f	class:CharacterState	access:public	signature:()
getKeyDirectionY	CharacterState.h	/^	Ogre::Real getKeyDirectionY(){ return mKeyDirection.y; }$/;"	f	class:CharacterState	access:public	signature:()
getKeyDirectionY	CharacterState.h~	/^	Ogre::Real getKeyDirectionY(){ return mKeyDirection.y; }$/;"	f	class:CharacterState	access:public	signature:()
getKeyDirectionZ	CharacterState.h	/^	Ogre::Real getKeyDirectionZ(){ return mKeyDirection.z; }$/;"	f	class:CharacterState	access:public	signature:()
getKeyDirectionZ	CharacterState.h~	/^	Ogre::Real getKeyDirectionZ(){ return mKeyDirection.z; }$/;"	f	class:CharacterState	access:public	signature:()
getKinematicCharacter	Character.h	/^	KinematicCharacter	* getKinematicCharacter()	{ return mKinematicCharacter; } \/\/ ªÒ»°‘À∂Ø—ßΩ«…´$/;"	f	class:Character	access:public	signature:()
getKinematicCharacter	Character.h~	/^	KinematicCharacter	* getKinematicCharacter()	{ return mKinematicCharacter; } \/\/ ªÒ»°‘À∂Ø—ßΩ«…´$/;"	f	class:Character	access:public	signature:()
getLandedState	CharacterState.h	/^	bool getLandedState(){ return mLanded; }$/;"	f	class:CharacterState	access:public	signature:()
getLandedState	CharacterState.h~	/^	bool getLandedState(){ return mLanded; }$/;"	f	class:CharacterState	access:public	signature:()
getMapEnt	GameMap.h	/^	Ogre::Entity * getMapEnt() \/\/ >>> 4-16-2202$/;"	f	class:GameMap	access:public	signature:()
getMaxSlope	btKinematicCharacterController.h	/^	btScalar getMaxSlope() const;$/;"	p	class:btKinematicCharacterController	access:public	signature:() const
getPhysicsWorld	PhysicsBase.h	/^	OgreBulletDynamics::DynamicsWorld * getPhysicsWorld(){ return mWorld; }$/;"	f	class:PhysicsBase	access:public	signature:()
getProperty	DotSceneLoader.h	/^        String getProperty(const String &ndNm, const String &prop);$/;"	p	class:Ogre::DotSceneLoader	access:public	signature:(const String &ndNm, const String &prop)
getUpAxisDirections	btKinematicCharacterController.h	/^	static btVector3 * getUpAxisDirections();$/;"	p	class:btKinematicCharacterController	access:protected	signature:()
getWorldTransform	KinematicCharacter.h	/^	btTransform getWorldTransform() const;$/;"	p	class:KinematicCharacter	access:public	signature:() const
getWorldTransform	KinematicCharacter.h	/^	void getWorldTransform( btTransform & pWorldTrans ) const;$/;"	p	class:KinematicCharacter	access:public	signature:( btTransform & pWorldTrans ) const
getWorldTransform	MotionState.h	/^	virtual void getWorldTransform( btTransform & pWorldTrans ) const;$/;"	p	class:MotionState	access:public	signature:( btTransform & pWorldTrans ) const
go	GameBase.h	/^    virtual void go(void);$/;"	p	class:GameBase	access:public	signature:(void)
gt	tinyxml/docs/classTiXmlComment-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#ab57bd426563c926844f65a78412e18b9">operator&gt;&gt;<\/a>(std::istream &amp;in, TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
gt	tinyxml/docs/classTiXmlDeclaration-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#ab57bd426563c926844f65a78412e18b9">operator&gt;&gt;<\/a>(std::istream &amp;in, TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
gt	tinyxml/docs/classTiXmlDocument-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#ab57bd426563c926844f65a78412e18b9">operator&gt;&gt;<\/a>(std::istream &amp;in, TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
gt	tinyxml/docs/classTiXmlElement-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#ab57bd426563c926844f65a78412e18b9">operator&gt;&gt;<\/a>(std::istream &amp;in, TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
gt	tinyxml/docs/classTiXmlElement.html	/^<tr><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <\/td><\/tr>$/;"	v
gt	tinyxml/docs/classTiXmlNode-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#ab57bd426563c926844f65a78412e18b9">operator&gt;&gt;<\/a>(std::istream &amp;in, TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
gt	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" align="right" valign="top">std::istream &amp;&nbsp;<\/td><td class="memItemRight" valign="bottom"><a class="el" href="classTiXmlNode.html#ab57bd426563c926844f65a78412e18b9">operator&gt;&gt;<\/a> (std::istream &amp;in, <a class="el" href="classTiXmlNode.html">TiXmlNode<\/a> &amp;base)<\/td><\/tr>$/;"	v
gt	tinyxml/docs/classTiXmlText-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#ab57bd426563c926844f65a78412e18b9">operator&gt;&gt;<\/a>(std::istream &amp;in, TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
gt	tinyxml/docs/classTiXmlUnknown-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#ab57bd426563c926844f65a78412e18b9">operator&gt;&gt;<\/a>(std::istream &amp;in, TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
gt	tinyxml/docs/functions_rela.html	/^<li>operator&gt;&gt;$/;"	v
gt	tinyxml/docs/index.html	/^	]&gt;$/;"	v
gt	tinyxml/docs/tinystr_8h_source.html	/^<a name="l00049"><\/a>00049 <span class="preprocessor">#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200 )<\/span>$/;"	v
gt	tinyxml/docs/tinystr_8h_source.html	/^<a name="l00052"><\/a>00052 <span class="preprocessor"><\/span><span class="preprocessor">#elif defined(__GNUC__) &amp;&amp; (__GNUC__ &gt;= 3 )<\/span>$/;"	v
gt	tinyxml/docs/tinystr_8h_source.html	/^<a name="l00280"><\/a>00280 <span class="keyword">inline<\/span> <span class="keywordtype">bool<\/span> operator &gt;  (<span class="keyword">const<\/span> TiXmlString &amp; a, <span class="keyword">const<\/span> TiXmlString &amp; b) { <span class="keywordflow">return<\/span> b &lt; a; }$/;"	v
gt	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00047"><\/a>00047 <span class="preprocessor"><\/span><span class="preprocessor">    #include &lt;string&gt;<\/span>$/;"	v
gt	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00048"><\/a>00048 <span class="preprocessor">    #include &lt;iostream&gt;<\/span>$/;"	v
gt	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00049"><\/a>00049 <span class="preprocessor">    #include &lt;sstream&gt;<\/span>$/;"	v
gt	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00063"><\/a>00063 <span class="preprocessor"><\/span><span class="preprocessor">    #if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1400 )<\/span>$/;"	v
gt	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00067"><\/a>00067 <span class="preprocessor"><\/span><span class="preprocessor">    #elif defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200 )<\/span>$/;"	v
gt	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00072"><\/a>00072 <span class="preprocessor"><\/span><span class="preprocessor">    #elif defined(__GNUC__) &amp;&amp; (__GNUC__ &gt;= 3 )<\/span>$/;"	v
gt	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00434"><\/a>00434         <span class="keyword">friend<\/span> std::istream&amp; <a class="code" href="classTiXmlNode.html#ab57bd426563c926844f65a78412e18b9" title="An input stream operator, for every class.">operator &gt;&gt; <\/a>(std::istream&amp; in, <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base);$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:public
gt	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00862"><\/a>00862     <span class="keywordtype">bool<\/span> operator&gt;( <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>&amp; rhs )<span class="keyword">  const <\/span>{ <span class="keywordflow">return<\/span> name &gt; rhs.name; }$/;"	m	class:TiXmlVisitor::TiXmlAttribute	file:	access:public
gt	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01017"><\/a><a class="code" href="classTiXmlElement.html#ae3b9a03b0a56663a40801c7256683576">01017<\/a>     <span class="keyword">template<\/span>&lt; <span class="keyword">typename<\/span> T &gt; <span class="keywordtype">int<\/span> QueryValueAttribute( <span class="keyword">const<\/span> std::string&amp; name, T* outValue )<span class="keyword"> const<\/span>$/;"	m	class:TiXmlVisitor::TiXmlElement	file:	access:public
gt	tinyxml/docs/tutorial0.html	/^	&lt;\/verse&gt;$/;"	v
gt	tinyxml/docs/tutorial0.html	/^	&lt;verse&gt;$/;"	v
gt	tinyxml/docs/tutorial0.html	/^        &lt;Farewell&gt;Thank you for using MyApp&lt;\/Farewell&gt;$/;"	v
gt	tinyxml/docs/tutorial0.html	/^        &lt;Welcome&gt;Welcome to MyApp&lt;\/Welcome&gt;$/;"	v
gt	tinyxml/docs/tutorial0.html	/^    &lt;Messages&gt;$/;"	v
gt	tinyxml/docs/tutorial0.html	/^    &lt;Windows&gt;$/;"	v
gt	tinyxml/docs/tutorial0.html	/^    &lt;\/Messages&gt;$/;"	v
gt	tinyxml/docs/tutorial0.html	/^    &lt;\/Windows&gt;$/;"	v
gt	tinyxml/docs/tutorial0.html	/^&lt;Hello&gt;World&lt;\/Hello&gt;$/;"	v
gt	tinyxml/docs/tutorial0.html	/^&lt;MyApp&gt;$/;"	v
gt	tinyxml/docs/tutorial0.html	/^&lt;\/MyApp&gt;$/;"	v
gt	tinyxml/docs/tutorial0.html	/^&lt;\/poetry&gt;$/;"	v
gt	tinyxml/docs/tutorial0.html	/^&lt;\/shapes&gt;$/;"	v
gt	tinyxml/docs/tutorial0.html	/^&lt;poetry&gt;$/;"	v
gt	tinyxml/docs/tutorial0.html	/^&lt;shapes&gt;$/;"	v
improvement	tinyxml/docs/index.html	/^<p>There are some areas of improvement; please check sourceforge if you are interested in working on TinyXML.<\/p>$/;"	v
in	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00434"><\/a>00434         <span class="keyword">friend<\/span> std::istream&amp; <a class="code" href="classTiXmlNode.html#ab57bd426563c926844f65a78412e18b9" title="An input stream operator, for every class.">operator &gt;&gt; <\/a>(std::istream&amp; in, <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base);$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:public
indent	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01789"><\/a>01789     TIXML_STRING indent;$/;"	m	class:TiXmlVisitor::TiXmlPrinter	file:	access:private
indent	tinyxml/tinyxml.h	/^	TIXML_STRING indent;$/;"	m	class:TiXmlPrinter	access:private
init	tinyxml/tinystr.h	/^	void init(size_type sz) { init(sz, sz); }$/;"	f	class:TiXmlString	access:private	signature:(size_type sz)
init	tinyxml/tinystr.h	/^	void init(size_type sz, size_type cap)$/;"	f	class:TiXmlString	access:private	signature:(size_type sz, size_type cap)
initBlendMaps	GameMap.h	/^    void initBlendMaps( Ogre::Terrain * terrain );$/;"	p	class:GameMap	access:private	signature:( Ogre::Terrain * terrain )
initMap	GameMap.h	/^    virtual void initMap( Ogre::SceneManager * pSceneMgr, Ogre::Light * pLight );$/;"	p	class:GameMap	access:public	signature:( Ogre::SceneManager * pSceneMgr, Ogre::Light * pLight )
initPhysicsWorld	PhysicsBase.h	/^	virtual void initPhysicsWorld();			\/\/ ≥ı ºªØŒÔ¿Ì ¿ΩÁ$/;"	p	class:PhysicsBase	access:public	signature:()
initSound	SeekSeekSeek.h	/^	void initSound(void);				\/\/ ≥ı ºªØ±≥æ∞“Ù¿÷, “Ù–ß$/;"	p	class:SeekSeekSeek	access:protected	signature:(void)
injectKeyDown	GraphicCharacter.h	/^	void injectKeyDown( const OIS::KeyEvent & evt );$/;"	p	class:GraphicCharacter	access:public	signature:( const OIS::KeyEvent & evt )
injectKeyUp	GraphicCharacter.h	/^	void injectKeyUp( const OIS::KeyEvent & evt );$/;"	p	class:GraphicCharacter	access:public	signature:( const OIS::KeyEvent & evt )
injectMouseDown	GraphicCharacter.h	/^	void injectMouseDown( const OIS::MouseEvent & evt, OIS::MouseButtonID id );$/;"	p	class:GraphicCharacter	access:public	signature:( const OIS::MouseEvent & evt, OIS::MouseButtonID id )
ip	tinyxml/docs/tutorial0.html	/^    &lt;Connection ip="192.168.0.1" timeout="123.456000" \/&gt;$/;"	v
isLanded	KinematicCharacter.h	/^	bool isLanded();			\/\/ Ω«…´ «∑Ò‘⁄µÿ…œ$/;"	p	class:KinematicCharacter	access:public	signature:()
jump	DynamicCharacterController.h	/^	void jump ();$/;"	p	class:DynamicCharacterController	access:public	signature:()
jump	btKinematicCharacterController.h	/^	void jump();$/;"	p	class:btKinematicCharacterController	access:public	signature:()
keyDown	CharacterInputListener.h	/^	void keyDown( const KeyEvent & evt );$/;"	p	class:CharacterInputListener	access:public	signature:( const KeyEvent & evt )
keyDown	CharacterInputListener.h~	/^	void keyDown( const KeyEvent & evt );$/;"	p	class:CharacterInputListener	file:	access:public	signature:( const KeyEvent & evt )
keyPressed	GameBase.h	/^    virtual bool keyPressed( const OIS::KeyEvent &evt ); \/\/$/;"	p	class:GameBase	access:protected	signature:( const OIS::KeyEvent &evt )
keyPressed	SeekSeekSeek.h	/^    virtual bool keyPressed( const OIS::KeyEvent & evt );$/;"	p	class:SeekSeekSeek	access:protected	signature:( const OIS::KeyEvent & evt )
keyReleased	GameBase.h	/^    virtual bool keyReleased( const OIS::KeyEvent &evt ); \/\/$/;"	p	class:GameBase	access:protected	signature:( const OIS::KeyEvent &evt )
keyReleased	SeekSeekSeek.h	/^    virtual bool keyReleased( const OIS::KeyEvent & evt );$/;"	p	class:SeekSeekSeek	access:protected	signature:( const OIS::KeyEvent & evt )
keyUp	CharacterInputListener.h	/^	void keyUp( const KeyEvent & evt );$/;"	p	class:CharacterInputListener	access:public	signature:( const KeyEvent & evt )
keyUp	CharacterInputListener.h~	/^	void keyUp( const KeyEvent & evt );$/;"	p	class:CharacterInputListener	file:	access:public	signature:( const KeyEvent & evt )
lastChild	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00759"><\/a>00759     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>*      lastChild;$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:protected
lastChild	tinyxml/tinyxml.h	/^	TiXmlNode*		lastChild;$/;"	m	class:TiXmlNode	access:protected
length	tinyxml/tinystr.h	/^	size_type length () const { return rep_->size; }$/;"	f	class:TiXmlString	access:public	signature:() const
libraries	tinyxml/changes.txt	/^- Contributed by Ivica Aracic (bytelord) : 1 new VC++ project to compile versions as static libraries (tinyxml_lib.dsp), $/;"	p	file:	signature:(tinyxml_lib.dsp)
lineBreak	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01790"><\/a>01790     TIXML_STRING lineBreak;$/;"	m	class:TiXmlVisitor::TiXmlPrinter	file:	access:private
lineBreak	tinyxml/tinyxml.h	/^	TIXML_STRING lineBreak;$/;"	m	class:TiXmlPrinter	access:private
loadResources	GameBase.h	/^    virtual void loadResources(void);$/;"	p	class:GameBase	access:protected	signature:(void)
location	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00373"><\/a>00373     TiXmlCursor location;$/;"	m	class:TiXmlVisitor::TiXmlBase	file:	access:protected
location	tinyxml/tinyxml.h	/^	TiXmlCursor location;$/;"	m	class:TiXmlBase	access:protected
lt	tinyxml/docs/classTiXmlComment-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#a52ef17e7080df2490cf87bde380685ab">operator&lt;&lt;<\/a>(std::string &amp;out, const TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
lt	tinyxml/docs/classTiXmlComment-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7">operator&lt;&lt;<\/a>(std::ostream &amp;out, const TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v	typeref:enum:operator &
lt	tinyxml/docs/classTiXmlDeclaration-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#a52ef17e7080df2490cf87bde380685ab">operator&lt;&lt;<\/a>(std::string &amp;out, const TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
lt	tinyxml/docs/classTiXmlDeclaration-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7">operator&lt;&lt;<\/a>(std::ostream &amp;out, const TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v	typeref:enum:operator &
lt	tinyxml/docs/classTiXmlDocument-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#a52ef17e7080df2490cf87bde380685ab">operator&lt;&lt;<\/a>(std::string &amp;out, const TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
lt	tinyxml/docs/classTiXmlDocument-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7">operator&lt;&lt;<\/a>(std::ostream &amp;out, const TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v	typeref:enum:operator &
lt	tinyxml/docs/classTiXmlElement-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#a52ef17e7080df2490cf87bde380685ab">operator&lt;&lt;<\/a>(std::string &amp;out, const TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
lt	tinyxml/docs/classTiXmlElement-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7">operator&lt;&lt;<\/a>(std::ostream &amp;out, const TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v	typeref:enum:operator &
lt	tinyxml/docs/classTiXmlNode-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#a52ef17e7080df2490cf87bde380685ab">operator&lt;&lt;<\/a>(std::string &amp;out, const TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
lt	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&nbsp;<\/td><td class="memItemRight" valign="bottom"><a class="el" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7">operator&lt;&lt;<\/a> (std::ostream &amp;out, const <a class="el" href="classTiXmlNode.html">TiXmlNode<\/a> &amp;base)<\/td><\/tr>$/;"	v
lt	tinyxml/docs/classTiXmlNode.html	/^std::string &amp;&nbsp;<\/td><td class="memItemRight" valign="bottom"><a class="el" href="classTiXmlNode.html#a52ef17e7080df2490cf87bde380685ab">operator&lt;&lt;<\/a> (std::string &amp;out, const <a class="el" href="classTiXmlNode.html">TiXmlNode<\/a> &amp;base)<\/td><\/tr>$/;"	v
lt	tinyxml/docs/classTiXmlText-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#a52ef17e7080df2490cf87bde380685ab">operator&lt;&lt;<\/a>(std::string &amp;out, const TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
lt	tinyxml/docs/classTiXmlText-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7">operator&lt;&lt;<\/a>(std::ostream &amp;out, const TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v	typeref:enum:operator &
lt	tinyxml/docs/classTiXmlUnknown-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#a52ef17e7080df2490cf87bde380685ab">operator&lt;&lt;<\/a>(std::string &amp;out, const TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v
lt	tinyxml/docs/classTiXmlUnknown-members.html	/^  <tr class="memlist"><td><a class="el" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7">operator&lt;&lt;<\/a>(std::ostream &amp;out, const TiXmlNode &amp;base)<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a><\/td><td><code> [friend]<\/code><\/td><\/tr>$/;"	v	typeref:enum:operator &
lt	tinyxml/docs/functions_rela.html	/^<li>operator&lt;&lt;$/;"	v
lt	tinyxml/docs/tinystr_8h_source.html	/^<a name="l00043"><\/a>00043 <span class="preprocessor">#include &lt;string.h&gt;<\/span>$/;"	v
lt	tinyxml/docs/tinystr_8h_source.html	/^<a name="l00274"><\/a>00274 <span class="keyword">inline<\/span> <span class="keywordtype">bool<\/span> operator &lt; (<span class="keyword">const<\/span> TiXmlString &amp; a, <span class="keyword">const<\/span> TiXmlString &amp; b)$/;"	v
lt	tinyxml/docs/tinystr_8h_source.html	/^<a name="l00281"><\/a>00281 <span class="keyword">inline<\/span> <span class="keywordtype">bool<\/span> operator &lt;= (<span class="keyword">const<\/span> TiXmlString &amp; a, <span class="keyword">const<\/span> TiXmlString &amp; b) { <span class="keywordflow">return<\/span> !(b &lt; a); }$/;"	v
lt	tinyxml/docs/tinystr_8h_source.html	/^<a name="l00303"><\/a>00303     TiXmlOutStream &amp; operator &lt;&lt; (<span class="keyword">const<\/span> TiXmlString &amp; in)$/;"	m	class:TiXmlOutStream	file:	access:public
lt	tinyxml/docs/tinystr_8h_source.html	/^<a name="l00310"><\/a>00310     TiXmlOutStream &amp; operator &lt;&lt; (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * in)$/;"	m	class:TiXmlOutStream	file:	access:public
lt	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00035"><\/a>00035 <span class="preprocessor">#include &lt;ctype.h&gt;<\/span>$/;"	v
lt	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00036"><\/a>00036 <span class="preprocessor">#include &lt;stdio.h&gt;<\/span>$/;"	v
lt	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00037"><\/a>00037 <span class="preprocessor">#include &lt;stdlib.h&gt;<\/span>$/;"	v
lt	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00038"><\/a>00038 <span class="preprocessor">#include &lt;string.h&gt;<\/span>$/;"	v
lt	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00039"><\/a>00039 <span class="preprocessor">#include &lt;assert.h&gt;<\/span>$/;"	v
lt	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00047"><\/a>00047 <span class="preprocessor"><\/span><span class="preprocessor">    #include &lt;string&gt;<\/span>$/;"	v
lt	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00048"><\/a>00048 <span class="preprocessor">    #include &lt;iostream&gt;<\/span>$/;"	v
lt	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00049"><\/a>00049 <span class="preprocessor">    #include &lt;sstream&gt;<\/span>$/;"	v
lt	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00452"><\/a>00452         <span class="keyword">friend<\/span> std::ostream&amp; <a class="code" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7" title="An output stream operator, for every class.">operator&lt;&lt; <\/a>(std::ostream&amp; out, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base);$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:public
lt	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00455"><\/a>00455         <span class="keyword">friend<\/span> std::string&amp; <a class="code" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7" title="An output stream operator, for every class.">operator&lt;&lt; <\/a>(std::string&amp; out, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base );$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:public
lt	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00861"><\/a>00861     <span class="keywordtype">bool<\/span> operator&lt;( <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>&amp; rhs )<span class="keyword">  const <\/span>{ <span class="keywordflow">return<\/span> name &lt; rhs.name; }$/;"	m	class:TiXmlVisitor::TiXmlAttribute	file:	access:public
lt	tinyxml/docs/tutorial0.html	/^        &lt;Farewell&gt;Thank you for using MyApp&lt;\/Farewell&gt;$/;"	v
lt	tinyxml/docs/tutorial0.html	/^        &lt;Welcome&gt;Welcome to MyApp&lt;\/Welcome&gt;$/;"	v
lt	tinyxml/docs/tutorial0.html	/^&lt;?xml version="1.0" ?&gt;$/;"	v
lt	tinyxml/docs/tutorial0.html	/^&lt;Hello&gt;World&lt;\/Hello&gt;$/;"	v
lt	tinyxml/utf8test.xml	/^    <–†—É—Å—Å–∫–∏–π –Ω–∞–∑–≤–∞–Ω–∏–µ="name" —Ü–µ–Ω–Ω–æ—Å—Ç—å="value">&lt;–∏–º–µ–µ—Ç&gt;<\/–†—É—Å—Å–∫–∏–π>$/;"	v
lt	tinyxml/utf8testverify.xml	/^    <–†—É—Å—Å–∫–∏–π –Ω–∞–∑–≤–∞–Ω–∏–µ="name" —Ü–µ–Ω–Ω–æ—Å—Ç—å="value">&lt;–∏–º–µ–µ—Ç&gt;<\/–†—É—Å—Å–∫–∏–π>$/;"	v
mAnims	GraphicCharacter.h	/^	AnimationState * mAnims[ NUM_ANIMS ];    \/\/ master animation list$/;"	m	class:GraphicCharacter	access:private
mAttachNode	DotSceneLoader.h	/^        SceneNode *mAttachNode;$/;"	m	class:Ogre::DotSceneLoader	access:protected
mBaseAnimID	GraphicCharacter.h	/^	AnimID mBaseAnimID;                   \/\/ current base (full- or lower-body) animation$/;"	m	class:GraphicCharacter	access:private
mBgFog	SeekSeekSeek.h	/^	Ogre::Real				  mBgFog;					\/\/ ±≥æ∞ŒÌ: 0 Œﬁ£¨1 ∞◊ÃÏ ∞◊ŒÌ£¨2 “πÕÌ ¿∂ŒÌ$/;"	m	class:SeekSeekSeek	access:protected
mBgMusicID	SeekSeekSeek.h	/^	Ogre::Real				  mBgMusicID;				\/\/ µ±«∞≤•∑≈µƒ±≥æ∞“Ù¿÷$/;"	m	class:SeekSeekSeek	access:protected
mBodies	PhysicsBase.h	/^ 	std::deque< OgreBulletDynamics::RigidBody * >         mBodies; \/\/ ŒÔ¿ÌÃÂ∂”¡–$/;"	m	class:PhysicsBase	access:protected
mBodyEnt	GraphicCharacter.h	/^	Entity * mBodyEnt;$/;"	m	class:GraphicCharacter	access:private
mBodyNode	GraphicCharacter.h	/^	SceneNode * mBodyNode;$/;"	m	class:GraphicCharacter	access:private
mBounds	PhysicsBase.h	/^	Ogre::AxisAlignedBox				mBounds;$/;"	m	class:PhysicsBase	access:protected
mCamera	GameBase.h	/^    Ogre::Camera		* mCamera;$/;"	m	class:GameBase	access:protected
mCameraGoal	SeekSeekSeek.h	/^	SceneNode * mCameraGoal;	\/\/ œ‡ª˙ƒø±Í$/;"	m	class:SeekSeekSeek	access:protected
mCameraMan	GameBase.h	/^    OgreBites::SdkCameraMan		* mCameraMan;        \/\/ basic camera controller$/;"	m	class:GameBase	access:protected
mCameraNode	CharacterState.h	/^	Ogre::SceneNode * mCameraNode;		\/\/ ∏˙◊ŸΩ«…´ Camera Ω⁄µ„$/;"	m	class:CharacterState	access:private
mCameraNode	CharacterState.h~	/^	Ogre::SceneNode * mCameraNode;		\/\/ ∏˙◊ŸΩ«…´ Camera Ω⁄µ„$/;"	m	class:CharacterState	file:	access:private
mCameraNode	SeekSeekSeek.h	/^	SceneNode * mCameraNode;	\/\/  µº  Camera Ω⁄µ„$/;"	m	class:SeekSeekSeek	access:protected
mCameraPivot	SeekSeekSeek.h	/^	SceneNode * mCameraPivot;	\/\/ ¿ÎΩ«…´“ª∂®æ‡¿Î(ºÁ∞Ú∏ΩΩ¸)µƒµÿ∑Ω | ”√ªßŒª÷√$/;"	m	class:SeekSeekSeek	access:protected
mCharacter	SeekSeekSeek.h	/^	Character				* mCharacter;				\/\/ Ω«…´∂‘œÛ$/;"	m	class:SeekSeekSeek	access:protected
mCharacterInputListener	SeekSeekSeek.h	/^	CharacterInputListener	* mCharacterInputListener;	\/\/ Ω«…´∂Ø◊˜ ‰»Îº‡Ã˝$/;"	m	class:SeekSeekSeek	access:protected
mCharacterState	Character.h	/^	CharacterState					  * mCharacterState;	 \/\/ º«¬º ‰»Î◊¥Ã¨$/;"	m	class:Character	access:private
mCharacterState	Character.h~	/^	CharacterState					  * mCharacterState;	 \/\/ º«¬º ‰»Î◊¥Ã¨$/;"	m	class:Character	file:	access:private
mCharacterState	CharacterInputListener.h	/^	CharacterState	   * mCharacterState;$/;"	m	class:CharacterInputListener	access:private
mCharacterState	CharacterInputListener.h~	/^	CharacterState	   * mCharacterState;$/;"	m	class:CharacterInputListener	file:	access:private
mCharacterState	GraphicCharacter.h	/^	CharacterState * mCharacterState; \/\/ ‘À∂Ø◊¥Ã¨ºØ$/;"	m	class:GraphicCharacter	access:private
mCharacterState	SeekSeekSeek.h	/^	CharacterState			* mCharacterState;			\/\/ ‘À∂Ø◊¥Ã¨ºØ$/;"	m	class:SeekSeekSeek	access:protected
mCursorWasVisible	GameBase.h	/^    bool						  mCursorWasVisible; \/\/ was cursor visible before dialog appeared$/;"	m	class:GameBase	access:protected
mDebugMode	SeekSeekSeek.h	/^	bool mDebugMode;									\/\/ µ˜ ‘ƒ£ Ω«–ªª$/;"	m	class:SeekSeekSeek	access:protected
mDetailsPanel	GameBase.h	/^    OgreBites::ParamsPanel		* mDetailsPanel;     \/\/ sample details panel$/;"	m	class:GameBase	access:protected
mFadingIn	GraphicCharacter.h	/^	bool mFadingIn[ NUM_ANIMS ];            \/\/ which animations are fading in$/;"	m	class:GraphicCharacter	access:private
mFadingOut	GraphicCharacter.h	/^	bool mFadingOut[ NUM_ANIMS ];           \/\/ which animations are fading out$/;"	m	class:GraphicCharacter	access:private
mGoalDirection	CharacterState.h	/^	Ogre::Vector3	  mGoalDirection;	\/\/ Ω«…´“∆∂Ø µº ∑ΩœÚ$/;"	m	class:CharacterState	access:private
mGoalDirection	CharacterState.h~	/^	Ogre::Vector3	  mGoalDirection;	\/\/ Ω«…´“∆∂Ø µº ∑ΩœÚ$/;"	m	class:CharacterState	file:	access:private
mGoalDirection	KinematicCharacter.h	/^	Ogre::Vector3	  mGoalDirection; \/\/ Ω«…´«∞Ω¯∑ΩœÚ$/;"	m	class:KinematicCharacter	access:protected
mGraphicCharacter	Character.h	/^	GraphicCharacter				  * mGraphicCharacter;   \/\/ Õº–Œ—ßΩ«…´$/;"	m	class:Character	access:private
mGraphicCharacter	Character.h~	/^	GraphicCharacter				  * mGraphicCharacter;   \/\/ Õº–Œ—ßΩ«…´$/;"	m	class:Character	file:	access:private
mGravityVector	PhysicsBase.h	/^	Ogre::Vector3						mGravityVector;$/;"	m	class:PhysicsBase	access:protected
mInfoLabel	GameMap.h	/^    OgreBites::Label * mInfoLabel;$/;"	m	class:GameMap	access:private
mInitProportion	LoadingBar.h	/^	Real mInitProportion;$/;"	m	class:LoadingBar	access:protected
mInputManager	GameBase.h	/^    OIS::InputManager	* mInputManager;$/;"	m	class:GameBase	access:protected
mJump	CharacterState.h	/^	bool			  mJump;			\/\/ Ω«…´ «∑Ò¥¶”⁄Ã¯‘æ◊¥Ã¨$/;"	m	class:CharacterState	access:private
mJump	CharacterState.h~	/^	bool			  mJump;			\/\/ Ω«…´ «∑Ò¥¶”⁄Ã¯‘æ◊¥Ã¨$/;"	m	class:CharacterState	file:	access:private
mKeyDirection	CharacterState.h	/^	Ogre::Vector3	  mKeyDirection;	\/\/ º¸≈Ã∞¥º¸∑ΩœÚ$/;"	m	class:CharacterState	access:private
mKeyDirection	CharacterState.h~	/^	Ogre::Vector3	  mKeyDirection;	\/\/ º¸≈Ã∞¥º¸∑ΩœÚ$/;"	m	class:CharacterState	file:	access:private
mKeyboard	GameBase.h	/^    OIS::Keyboard		* mKeyboard;$/;"	m	class:GameBase	access:protected
mKinematicCharacter	Character.h	/^	KinematicCharacter				  * mKinematicCharacter; \/\/ ‘À∂Ø—ßΩ«…´$/;"	m	class:Character	access:private
mKinematicCharacter	Character.h~	/^	KinematicCharacter				  * mKinematicCharacter; \/\/ ‘À∂Ø—ßΩ«…´$/;"	m	class:Character	file:	access:private
mKinematicCharacter	CharacterInputListener.h	/^	KinematicCharacter * mKinematicCharacter;$/;"	m	class:CharacterInputListener	access:private
mKinematicCharacter	CharacterInputListener.h~	/^	KinematicCharacter * mKinematicCharacter;$/;"	m	class:CharacterInputListener	file:	access:private
mLanded	CharacterState.h	/^	bool			  mLanded;			\/\/ Ω«…´ «∑Ò◊≈¬‰$/;"	m	class:CharacterState	access:private
mLanded	CharacterState.h~	/^	bool			  mLanded;			\/\/ Ω«…´ «∑Ò◊≈¬‰$/;"	m	class:CharacterState	file:	access:private
mLight	GameBase.h	/^	Ogre::Light			* mLight;$/;"	m	class:GameBase	access:protected
mLoadOverlay	LoadingBar.h	/^	Overlay* mLoadOverlay;$/;"	m	class:LoadingBar	access:protected
mLoadingBar	GameBase.h	/^	LoadingBar			  mLoadingBar;	\/\/ Loging Bar$/;"	m	class:GameBase	access:protected
mLoadingBarElement	LoadingBar.h	/^	OverlayElement* mLoadingBarElement;$/;"	m	class:LoadingBar	access:protected
mLoadingCommentElement	LoadingBar.h	/^	OverlayElement* mLoadingCommentElement;$/;"	m	class:LoadingBar	access:protected
mLoadingDescriptionElement	LoadingBar.h	/^	OverlayElement* mLoadingDescriptionElement;$/;"	m	class:LoadingBar	access:protected
mMap	SeekSeekSeek.h	/^	GameMap					* mMap;						\/\/ ”Œœ∑µÿÕº$/;"	m	class:SeekSeekSeek	access:protected
mMouse	GameBase.h	/^    OIS::Mouse			* mMouse;$/;"	m	class:GameBase	access:protected
mNode	KinematicCharacter.h	/^	SceneNode		* mNode;		  \/\/ Ω«…´Ω⁄µ„$/;"	m	class:KinematicCharacter	access:protected
mNode	MotionState.h	/^	Ogre::SceneNode * mNode;$/;"	m	class:MotionState	access:protected
mNumEntitiesInstanced	PhysicsBase.h	/^ 	int									mNumEntitiesInstanced;	\/\/ how many shapes are created$/;"	m	class:PhysicsBase	access:protected
mNumGroupsInit	LoadingBar.h	/^	unsigned short mNumGroupsInit;$/;"	m	class:LoadingBar	access:protected
mNumGroupsLoad	LoadingBar.h	/^	unsigned short mNumGroupsLoad;$/;"	m	class:LoadingBar	access:protected
mPhysicsFrameListener	SeekSeekSeek.h	/^	PhysicsFrameListener	* mPhysicsFrameListener;	\/\/ ŒÔ¿Ì ¬º˛º‡Ã˝$/;"	m	class:SeekSeekSeek	access:protected
mPivotPitch	SeekSeekSeek.h	/^	Real mPivotPitch;		\/\/ …œœ¬œﬁ÷∆¿€º”∂» ˝$/;"	m	class:SeekSeekSeek	access:protected
mPluginsCfg	GameBase.h	/^    Ogre::String		  mPluginsCfg;$/;"	m	class:GameBase	access:protected
mPosition	MotionState.h	/^	btTransform		  mPosition;$/;"	m	class:MotionState	access:protected
mProgressBarInc	LoadingBar.h	/^	Real mProgressBarInc;$/;"	m	class:LoadingBar	access:protected
mProgressBarMaxSize	LoadingBar.h	/^	Real mProgressBarMaxSize;$/;"	m	class:LoadingBar	access:protected
mProgressBarScriptSize	LoadingBar.h	/^	Real mProgressBarScriptSize;$/;"	m	class:LoadingBar	access:protected
mResourcesCfg	GameBase.h	/^    Ogre::String		  mResourcesCfg;$/;"	m	class:GameBase	access:protected
mRoot	GameBase.h	/^    Ogre::Root			* mRoot;$/;"	m	class:GameBase	access:protected
mSceneMgr	Character.h	/^    Ogre::SceneManager				  * mSceneMgr;			 \/\/ Ogre≥°æ∞øÿ÷∆∆˜$/;"	m	class:Character	access:private
mSceneMgr	Character.h~	/^    Ogre::SceneManager				  * mSceneMgr;			 \/\/ Ogre≥°æ∞øÿ÷∆∆˜$/;"	m	class:Character	file:	access:private
mSceneMgr	DotSceneLoader.h	/^        SceneManager *mSceneMgr;$/;"	m	class:Ogre::DotSceneLoader	access:protected
mSceneMgr	GameBase.h	/^    Ogre::SceneManager	* mSceneMgr;$/;"	m	class:GameBase	access:protected
mSceneMgr	PhysicsBase.h	/^	Ogre::SceneManager				  * mSceneMgr;	 \/\/ ¥Ê¥¢¥”Ogre¥´µ›Ω¯¿¥µƒpSceneMgr$/;"	m	class:PhysicsBase	access:protected
mShapes	PhysicsBase.h	/^ 	std::deque< OgreBulletCollisions::CollisionShape * >  mShapes; \/\/ ŒÔ¿Ì–Œ◊¥∂”¡–$/;"	m	class:PhysicsBase	access:protected
mShutDown	GameBase.h	/^    bool						  mShutDown;$/;"	m	class:GameBase	access:protected
mSoundMgr	SeekSeekSeek.h	/^	OgreAL::SoundManager	* mSoundMgr;				\/\/ …˘“Ù$/;"	m	class:SeekSeekSeek	access:protected
mSword1	GraphicCharacter.h	/^	Entity * mSword1;$/;"	m	class:GraphicCharacter	access:private
mSword2	GraphicCharacter.h	/^	Entity * mSword2;$/;"	m	class:GraphicCharacter	access:private
mSwordTrail	GraphicCharacter.h	/^	RibbonTrail * mSwordTrail;$/;"	m	class:GraphicCharacter	access:private
mSwordsDrawn	GraphicCharacter.h	/^	bool mSwordsDrawn;$/;"	m	class:GraphicCharacter	access:private
mTerrain	GameMap.h	/^	Ogre::Entity * mTerrain;$/;"	m	class:GameMap	access:private
mTerrain	PhysicsBase.h	/^	GameMap								 * mTerrain; \/\/ µÿ–Œ$/;"	m	class:PhysicsBase	access:protected
mTerrainGlobals	GameMap.h	/^    Ogre::TerrainGlobalOptions * mTerrainGlobals;$/;"	m	class:GameMap	access:private
mTerrainGroup	GameMap.h	/^    Ogre::TerrainGroup * mTerrainGroup;$/;"	m	class:GameMap	access:private
mTerrainPhysicsBody	PhysicsBase.h	/^	OgreBulletDynamics::RigidBody		 * mTerrainPhysicsBody;$/;"	m	class:PhysicsBase	access:protected
mTerrainPhysicsShape	PhysicsBase.h	/^ 	OgreBulletCollisions::CollisionShape * mTerrainPhysicsShape;$/;"	m	class:PhysicsBase	access:protected
mTerrainsImported	GameMap.h	/^    bool mTerrainsImported;$/;"	m	class:GameMap	access:private
mTimer	GraphicCharacter.h	/^	Real mTimer;                \/\/ general timer to see how long animations have been playing$/;"	m	class:GraphicCharacter	access:private
mTopAnimID	GraphicCharacter.h	/^	AnimID mTopAnimID;                    \/\/ current top (upper-body) animation$/;"	m	class:GraphicCharacter	access:private
mTrayMgr	GameBase.h	/^    OgreBites::SdkTrayManager	* mTrayMgr;$/;"	m	class:GameBase	access:protected
mVerticalVelocity	GraphicCharacter.h	/^	Real mVerticalVelocity;     \/\/ for jumping$/;"	m	class:GraphicCharacter	access:private
mViewTurningDown	SeekSeekSeek.h	/^	bool mViewTurningDown;	\/\/ œÚœ¬$/;"	m	class:SeekSeekSeek	access:protected
mViewTurningLeft	SeekSeekSeek.h	/^	bool mViewTurningLeft;	\/\/ œÚ◊Û–˝◊™ ”Ω«$/;"	m	class:SeekSeekSeek	access:protected
mViewTurningRight	SeekSeekSeek.h	/^	bool mViewTurningRight;	\/\/ œÚ”“$/;"	m	class:SeekSeekSeek	access:protected
mViewTurningUp	SeekSeekSeek.h	/^	bool mViewTurningUp;	\/\/ œÚ…œ–˝◊™ ”Ω«$/;"	m	class:SeekSeekSeek	access:protected
mViewZoomingIn	SeekSeekSeek.h	/^	bool mViewZoomingIn;	\/\/ ÀıΩ¸Ω«…´ ”Ω«$/;"	m	class:SeekSeekSeek	access:protected
mViewZoomingOut	SeekSeekSeek.h	/^	bool mViewZoomingOut;	\/\/ ‘∂¿ÎΩ«…´ ”Ω«$/;"	m	class:SeekSeekSeek	access:protected
mViewport	GameBase.h	/^	Ogre::Viewport		* mViewport;$/;"	m	class:GameBase	access:protected
mWindow	GameBase.h	/^    Ogre::RenderWindow	* mWindow;$/;"	m	class:GameBase	access:protected
mWindow	LoadingBar.h	/^	RenderWindow* mWindow;$/;"	m	class:LoadingBar	access:protected
mWorld	Character.h	/^	OgreBulletDynamics::DynamicsWorld * mWorld;				 \/\/ ŒÔ¿Ì—ß ¿ΩÁ$/;"	m	class:Character	access:private
mWorld	Character.h~	/^	OgreBulletDynamics::DynamicsWorld * mWorld;				 \/\/ ŒÔ¿Ì—ß ¿ΩÁ$/;"	m	class:Character	file:	access:private
mWorld	PhysicsBase.h	/^	OgreBulletDynamics::DynamicsWorld * mWorld;		 \/\/ OgreBullet World	$/;"	m	class:PhysicsBase	access:protected
m_addedMargin	btKinematicCharacterController.h	/^	btScalar	m_addedMargin;\/\/@todo: remove this and fix the code$/;"	m	class:btKinematicCharacterController	access:protected
m_convexShape	btKinematicCharacterController.h	/^	btConvexShape			 * m_convexShape; \/\/is also in m_ghostObject, but it needs to be convex, so we store it here to avoid upcast$/;"	m	class:btKinematicCharacterController	access:protected
m_currentPosition	btKinematicCharacterController.h	/^	btVector3 m_currentPosition;$/;"	m	class:btKinematicCharacterController	access:protected
m_currentStepOffset	btKinematicCharacterController.h	/^	btScalar  m_currentStepOffset;$/;"	m	class:btKinematicCharacterController	access:protected
m_fallSpeed	btKinematicCharacterController.h	/^	btScalar m_fallSpeed;		 \/\/ µÙ¬‰ÀŸ∂»$/;"	m	class:btKinematicCharacterController	access:protected
m_ghostObject	btKinematicCharacterController.h	/^	btPairCachingGhostObject * m_ghostObject;$/;"	m	class:btKinematicCharacterController	access:protected
m_gravity	btKinematicCharacterController.h	/^	btScalar m_gravity;			 \/\/ ÷ÿ¡¶$/;"	m	class:btKinematicCharacterController	access:protected
m_halfHeight	DynamicCharacterController.h	/^	btScalar m_halfHeight;$/;"	m	class:DynamicCharacterController	access:protected
m_halfHeight	btKinematicCharacterController.h	/^	btScalar m_halfHeight;$/;"	m	class:btKinematicCharacterController	access:protected
m_jumpSpeed	btKinematicCharacterController.h	/^	btScalar m_jumpSpeed;		 \/\/ Ã¯‘æÀŸ∂»$/;"	m	class:btKinematicCharacterController	access:protected
m_manifoldArray	btKinematicCharacterController.h	/^	btManifoldArray	m_manifoldArray;$/;"	m	class:btKinematicCharacterController	access:protected
m_maxJumpHeight	btKinematicCharacterController.h	/^	btScalar m_maxJumpHeight;	 \/\/ ◊Ó¥ÛÃ¯‘æ∏ﬂ∂»$/;"	m	class:btKinematicCharacterController	access:protected
m_maxLinearVelocity	DynamicCharacterController.h	/^	btScalar m_maxLinearVelocity;$/;"	m	class:DynamicCharacterController	access:protected
m_maxSlopeCosine	btKinematicCharacterController.h	/^	btScalar m_maxSlopeCosine;   \/\/ ”‡œ“ | Cosine equivalent of m_maxSlopeRadians (calculated once when set, for optimization)$/;"	m	class:btKinematicCharacterController	access:protected
m_maxSlopeRadians	btKinematicCharacterController.h	/^	btScalar m_maxSlopeRadians;  \/\/ ◊Ó¥Ûø…≈ ‘Ω–±∆¬∂» ˝ | Slope angle that is set (used for returning the exact value)$/;"	m	class:btKinematicCharacterController	access:protected
m_normalizedDirection	btKinematicCharacterController.h	/^	btVector3	m_normalizedDirection;$/;"	m	class:btKinematicCharacterController	access:protected
m_rayLambda	DynamicCharacterController.h	/^	btScalar m_rayLambda[2];$/;"	m	class:DynamicCharacterController	access:protected
m_rayNormal	DynamicCharacterController.h	/^	btVector3 m_rayNormal[2];$/;"	m	class:DynamicCharacterController	access:protected
m_raySource	DynamicCharacterController.h	/^	btVector3 m_raySource[2];$/;"	m	class:DynamicCharacterController	access:protected
m_rayTarget	DynamicCharacterController.h	/^	btVector3 m_rayTarget[2];$/;"	m	class:DynamicCharacterController	access:protected
m_rigidBody	DynamicCharacterController.h	/^	btRigidBody* m_rigidBody;$/;"	m	class:DynamicCharacterController	access:protected
m_sGroupName	DotSceneLoader.h	/^        String m_sGroupName;$/;"	m	class:Ogre::DotSceneLoader	access:protected
m_sPrependNode	DotSceneLoader.h	/^        String m_sPrependNode;$/;"	m	class:Ogre::DotSceneLoader	access:protected
m_shape	DynamicCharacterController.h	/^	btCollisionShape* m_shape;$/;"	m	class:DynamicCharacterController	access:protected
m_stepHeight	btKinematicCharacterController.h	/^	btScalar m_stepHeight;$/;"	m	class:btKinematicCharacterController	access:protected
m_targetPosition	btKinematicCharacterController.h	/^	btVector3 m_targetPosition;$/;"	m	class:btKinematicCharacterController	access:protected
m_touchingContact	btKinematicCharacterController.h	/^	bool m_touchingContact;$/;"	m	class:btKinematicCharacterController	access:protected
m_touchingNormal	btKinematicCharacterController.h	/^	btVector3 m_touchingNormal;$/;"	m	class:btKinematicCharacterController	access:protected
m_turnAngle	DynamicCharacterController.h	/^	btScalar m_turnAngle;$/;"	m	class:DynamicCharacterController	access:protected
m_turnAngle	btKinematicCharacterController.h	/^	btScalar m_turnAngle;$/;"	m	class:btKinematicCharacterController	access:protected
m_turnVelocity	DynamicCharacterController.h	/^	btScalar m_turnVelocity;$/;"	m	class:DynamicCharacterController	access:protected
m_upAxis	btKinematicCharacterController.h	/^	int			m_upAxis;$/;"	m	class:btKinematicCharacterController	access:protected
m_useGhostObjectSweepTest	btKinematicCharacterController.h	/^	bool		m_useGhostObjectSweepTest;$/;"	m	class:btKinematicCharacterController	access:protected
m_useWalkDirection	btKinematicCharacterController.h	/^	bool		m_useWalkDirection;$/;"	m	class:btKinematicCharacterController	access:protected
m_velocityTimeInterval	btKinematicCharacterController.h	/^	btScalar	m_velocityTimeInterval;$/;"	m	class:btKinematicCharacterController	access:protected
m_verticalOffset	btKinematicCharacterController.h	/^	btScalar m_verticalOffset;	 \/\/ ¥π÷±∆´“∆¡ø$/;"	m	class:btKinematicCharacterController	access:protected
m_verticalVelocity	btKinematicCharacterController.h	/^	btScalar m_verticalVelocity; \/\/ ¥π÷±ÀŸ∂», jump  ±$/;"	m	class:btKinematicCharacterController	access:protected
m_walkDirection	btKinematicCharacterController.h	/^	btVector3	m_walkDirection;$/;"	m	class:btKinematicCharacterController	access:protected
m_walkVelocity	DynamicCharacterController.h	/^	btScalar m_walkVelocity;$/;"	m	class:DynamicCharacterController	access:protected
m_wasJumping	btKinematicCharacterController.h	/^	bool		m_wasJumping;  \/\/  «∑ÒÃ¯‘æ◊¥Ã¨$/;"	m	class:btKinematicCharacterController	access:protected
m_wasOnGround	btKinematicCharacterController.h	/^	bool		m_wasOnGround; \/\/  «∑Ò‘⁄µÿ…œ$/;"	m	class:btKinematicCharacterController	access:protected
macro	tinyxml/changes.txt	/^  the isblank macro, which was wiping out the TiXmlString::isblank() method.$/;"	v
main	tinyxml/docs/tutorial0.html	/^int main(void)$/;"	f	signature:(void)
main	tinyxml/xmltest.cpp	/^int main()$/;"	f	signature:()
manipulated	tinyxml/docs/index.html	/^<p>There are different ways to access and interact with XML data. TinyXML uses a Document Object Model (DOM), meaning the XML data is parsed into a C++ objects that can be browsed and manipulated, and then written to disk or another output stream. You can also construct an XML document from scratch with C++ objects and write this to disk or another output stream.<\/p>$/;"	v
markup	tinyxml/docs/index.html	/^<p>XML stands for "eXtensible Markup Language." It allows you to create your own document markups. Where HTML does a very good job of marking documents for browsers, XML allows you to define any kind of document markup, for example a document that describes a "to do" list for an organizer application. XML is a very structured and convenient format. All those random file formats created to store application data can all be replaced with XML. One parser for everything.<\/p>$/;"	v
modified	tinyxml/docs/index.html	/^<p>In brief, TinyXML parses an XML document, and builds from that a Document Object Model (DOM) that can be read, modified, and saved.<\/p>$/;"	v
mouseMoved	GameBase.h	/^    virtual bool mouseMoved( const OIS::MouseEvent &evt ); \/\/$/;"	p	class:GameBase	access:protected	signature:( const OIS::MouseEvent &evt )
mouseMoved	SeekSeekSeek.h	/^    virtual bool mouseMoved( const OIS::MouseEvent & evt );$/;"	p	class:SeekSeekSeek	access:protected	signature:( const OIS::MouseEvent & evt )
mousePressed	GameBase.h	/^    virtual bool mousePressed( const OIS::MouseEvent &evt, OIS::MouseButtonID id ); \/\/$/;"	p	class:GameBase	access:protected	signature:( const OIS::MouseEvent &evt, OIS::MouseButtonID id )
mousePressed	SeekSeekSeek.h	/^    virtual bool mousePressed( const OIS::MouseEvent & evt, OIS::MouseButtonID id );$/;"	p	class:SeekSeekSeek	access:protected	signature:( const OIS::MouseEvent & evt, OIS::MouseButtonID id )
mouseReleased	GameBase.h	/^    virtual bool mouseReleased( const OIS::MouseEvent &evt, OIS::MouseButtonID id ); \/\/$/;"	p	class:GameBase	access:protected	signature:( const OIS::MouseEvent &evt, OIS::MouseButtonID id )
mouseReleased	SeekSeekSeek.h	/^    virtual bool mouseReleased( const OIS::MouseEvent & evt, OIS::MouseButtonID id );$/;"	p	class:SeekSeekSeek	access:protected	signature:( const OIS::MouseEvent & evt, OIS::MouseButtonID id )
name	tinyxml/docs/classTiXmlElement.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Given an attribute name, <a class="el" href="classTiXmlElement.html#ae419a442a9701a62b0c3d8fd1cbdd12d" title="Given an attribute name, Attribute() returns the value for the attribute of that...">Attribute()<\/a> returns the value for the attribute of that name, or null if none exists.  <a href="#a0ed8348fdc56b72a6b4900ce5bac1849"><\/a><br\/><\/td><\/tr>$/;"	v
name	tinyxml/docs/classTiXmlElement.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Given an attribute name, <a class="el" href="classTiXmlElement.html#ae419a442a9701a62b0c3d8fd1cbdd12d" title="Given an attribute name, Attribute() returns the value for the attribute of that...">Attribute()<\/a> returns the value for the attribute of that name, or null if none exists.  <a href="#aeaff99d4f0ea5b34f7aee202aad457ba"><\/a><br\/><\/td><\/tr>$/;"	v
name	tinyxml/docs/classTiXmlElement.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Given an attribute name, <a class="el" href="classTiXmlElement.html#ae419a442a9701a62b0c3d8fd1cbdd12d" title="Given an attribute name, Attribute() returns the value for the attribute of that...">Attribute()<\/a> returns the value for the attribute of that name, or null if none exists. <br\/><\/td><\/tr>$/;"	v
name	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00291"><\/a>00291     { $/;"	m	class:TiXmlVisitor::TiXmlBase	file:	access:protected
name	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00328"><\/a>00328     {$/;"	m	class:TiXmlVisitor::TiXmlBase	file:	access:protected
name	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00383"><\/a>00383     {$/;"	m	class:TiXmlVisitor::TiXmlBase	file:	access:protected
name	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00786"><\/a>00786     {$/;"	m	class:TiXmlVisitor::TiXmlAttribute	file:	access:public
name	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00884"><\/a>00884     TIXML_STRING name;$/;"	m	class:TiXmlVisitor::TiXmlAttribute	file:	access:private
name	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01214"><\/a>01214     {$/;"	m	class:TiXmlVisitor::TiXmlText	file:	access:public
name	tinyxml/docs/tutorial0.html	/^	&lt;circle name="int-based" x="20" y="30" r="50" \/&gt;$/;"	v
name	tinyxml/docs/tutorial0.html	/^	&lt;point name="float-based" x="3.5" y="52.1" \/&gt;$/;"	v
name	tinyxml/docs/tutorial0.html	/^        &lt;Window name="MainFrame" x="5" y="15" w="400" h="250" \/&gt;$/;"	v
name	tinyxml/tinyxml.h	/^	TIXML_STRING name;$/;"	m	class:TiXmlAttribute	access:private
nbsp	tinyxml/docs/annotated.html	/^      <li class="current"><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/annotated.html	/^      <li><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/annotated.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/annotated.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/annotated.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/annotated.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/classTiXmlAttribute-members.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlAttribute-members.html	/^      <li><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlAttribute-members.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlAttribute-members.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlAttribute-members.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlAttribute-members.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/classTiXmlAttribute.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlAttribute.html	/^      <li><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlAttribute.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlAttribute.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlAttribute.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlAttribute.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">All TinyXml classes can print themselves to a filestream or the string class (TiXmlString in non-STL mode, std::string in STL mode.  <a href="#acc04956c1d5c4c31fe74f7a7528d109a"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlAttribute.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Construct an attribute with a name and value. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlAttribute.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Construct an empty attribute. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlAttribute.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Get the next sibling attribute in the DOM. Returns null at end. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlAttribute.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Get the previous sibling attribute in the DOM. Returns null at beginning. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlAttribute.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">QueryDoubleValue examines the value string. See <a class="el" href="classTiXmlAttribute.html#ad6c93088ee21af41a107931223339344" title="QueryIntValue examines the value string.">QueryIntValue()<\/a>. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlAttribute.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">QueryIntValue examines the value string.  <a href="#ad6c93088ee21af41a107931223339344"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlAttribute.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Return the name of this attribute. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlAttribute.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Return the value of this attribute, converted to a double. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlAttribute.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Return the value of this attribute, converted to an integer. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlAttribute.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Return the value of this attribute. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlAttribute.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Set the name of this attribute. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlAttribute.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Set the value from a double. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlAttribute.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Set the value from an integer. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlAttribute.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Set the value. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlBase-members.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlBase-members.html	/^      <li><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlBase-members.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlBase-members.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlBase-members.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlBase.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlBase.html	/^      <li><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlBase.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlBase.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlBase.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlComment-members.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlComment-members.html	/^      <li><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlComment-members.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlComment-members.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlComment-members.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlComment-members.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/classTiXmlComment.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlComment.html	/^      <li><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlComment.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlComment.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlComment.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlComment.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">All TinyXml classes can print themselves to a filestream or the string class (TiXmlString in non-STL mode, std::string in STL mode.  <a href="#a6b316527aaa8da0370cd68c22a5a0f5f"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlComment.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Construct a comment from text. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlComment.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Constructs an empty comment. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlComment.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Returns a copy of this Comment. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDeclaration-members.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlDeclaration-members.html	/^      <li><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlDeclaration-members.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlDeclaration-members.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlDeclaration-members.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlDeclaration-members.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/classTiXmlDeclaration.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlDeclaration.html	/^      <li><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlDeclaration.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlDeclaration.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlDeclaration.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlDeclaration.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">All TinyXml classes can print themselves to a filestream or the string class (TiXmlString in non-STL mode, std::string in STL mode.  <a href="#abf6303db4bd05b5be554036817ff1cb4"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDeclaration.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Construct an empty declaration. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDeclaration.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Construct. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDeclaration.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Creates a copy of this Declaration and returns it. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDeclaration.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Encoding. Will return an empty string if none was found. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDeclaration.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Is this a standalone document? <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDeclaration.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Version. Will return an empty string if none was found. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDeclaration.html	/^virtual <a class="el" href="classTiXmlNode.html">TiXmlNode<\/a> *&nbsp;<\/td><td class="memItemRight" valign="bottom"><a class="el" href="classTiXmlDeclaration.html#a7cf459186040141cda7a180a6585ce2e">Clone<\/a> () const <\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument-members.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument-members.html	/^      <li><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument-members.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument-members.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument-members.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument-members.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^          <td class="paramtype">TiXmlEncoding&nbsp;<\/td>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^      <li><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^    <tr><td valign="top"><\/td><td valign="top"><em>encoding<\/em>&nbsp;<\/td><td>STL std::string version. <\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">&lt; STL std::string version. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight"><a class="el" href="classTiXmlDocument.html#a51dac56316f89b35bdb7d0d433ba988e" title="SetTabSize() allows the error reporting functions (ErrorRow() and ErrorCol()) to...">SetTabSize()<\/a> allows the error reporting functions (<a class="el" href="classTiXmlDocument.html#af30efc75e804aa2e92fb8be3a8cb676e" title="Returns the location (if known) of the error.">ErrorRow()<\/a> and <a class="el" href="classTiXmlDocument.html#aa90bc630ee5203c6109ca5fad3323649" title="The column where the error occured. See ErrorRow().">ErrorCol()<\/a>) to report the correct values for row and column.  <a href="#a51dac56316f89b35bdb7d0d433ba988e"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Cast to a more defined type. Will return null not of the requested type. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Contains a textual (english) description of the error if one occurs. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Create a document with a name. The name of the document is also the filename of the xml. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Create an empty document, that has no name. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Create an exact duplicate of this node and return it.  <a href="#a4968661cab4a1f44a23329c6f8db1907"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Generally, you probably want the error string ( <a class="el" href="classTiXmlDocument.html#a9d0f689f6e09ea494ea547be8d79c25e" title="Contains a textual (english) description of the error if one occurs.">ErrorDesc()<\/a> ).  <a href="#af96fc2f3f9ec6422782bfe916c9e778f"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Get the root element -- the only top level element -- of the document.  <a href="#ad09d17927f908f40efb406af2fb873be"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">If an error occurs, Error will be set to true.  <a href="#a6dfc01a6e5d58e56acd537dfd3bdeb29"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">If you have handled the error, it can be reset with this call.  <a href="#ac66b8c28db86363315712a3574e87c35"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Load a file using the current document value.  <a href="#a4c852a889c02cf251117fd1d9fe1845f"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Load a file using the given FILE*.  <a href="#a41f6fe7200864d1dca663d230caf8db6"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Load a file using the given filename. Returns true if successful. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Parse the given null terminated block of xml data.  <a href="#a17ebabe36926ef398e78dec0d0ad0378"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Print this Document to a FILE stream. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Returns the location (if known) of the error.  <a href="#af30efc75e804aa2e92fb8be3a8cb676e"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Save a file using the current document value. Returns true if successful. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Save a file using the given FILE*. Returns true if successful. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Save a file using the given filename. Returns true if successful. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">The column where the error occured. See <a class="el" href="classTiXmlDocument.html#af30efc75e804aa2e92fb8be3a8cb676e" title="Returns the location (if known) of the error.">ErrorRow()<\/a>. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Walk the XML tree visiting this node and all of its children. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Write the document to standard out using formatted printing ("pretty print").  <a href="#af08389ec70ee9b2de7f800e206a18510"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlDocument.html	/^bool&nbsp;<\/td><td class="memItemRight" valign="bottom"><a class="el" href="classTiXmlDocument.html#a3d4fae0463f3f03679ba0b7cf6f2df52">SaveFile<\/a> (const std::string &amp;filename) const <\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement-members.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement-members.html	/^      <li><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement-members.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement-members.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement-members.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement-members.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/classTiXmlElement.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement.html	/^      <li><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Access the first attribute in this element. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Access the last attribute in this element. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">All TinyXml classes can print themselves to a filestream or the string class (TiXmlString in non-STL mode, std::string in STL mode.  <a href="#afbf52736e70fc91ec9d760721d6f4fd2"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Construct an element. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Convenience function for easy access to the text inside an element.  <a href="#af3282294986cdb216646ea1f67af2c87"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Creates a new Element and returns it - the returned element is a copy. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Deletes an attribute with the given name. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Given an attribute name, <a class="el" href="classTiXmlElement.html#ae419a442a9701a62b0c3d8fd1cbdd12d" title="Given an attribute name, Attribute() returns the value for the attribute of that...">Attribute()<\/a> returns the value for the attribute of that name, or null if none exists.  <a href="#a0ed8348fdc56b72a6b4900ce5bac1849"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Given an attribute name, <a class="el" href="classTiXmlElement.html#ae419a442a9701a62b0c3d8fd1cbdd12d" title="Given an attribute name, Attribute() returns the value for the attribute of that...">Attribute()<\/a> returns the value for the attribute of that name, or null if none exists.  <a href="#aeaff99d4f0ea5b34f7aee202aad457ba"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Given an attribute name, <a class="el" href="classTiXmlElement.html#ae419a442a9701a62b0c3d8fd1cbdd12d" title="Given an attribute name, Attribute() returns the value for the attribute of that...">Attribute()<\/a> returns the value for the attribute of that name, or null if none exists. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">QueryDoubleAttribute examines the attribute - see <a class="el" href="classTiXmlElement.html#aea0bfe471380f281c5945770ddbf52b9" title="QueryIntAttribute examines the attribute - it is an alternative to the Attribute()...">QueryIntAttribute()<\/a>. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">QueryFloatAttribute examines the attribute - see <a class="el" href="classTiXmlElement.html#aea0bfe471380f281c5945770ddbf52b9" title="QueryIntAttribute examines the attribute - it is an alternative to the Attribute()...">QueryIntAttribute()<\/a>. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">QueryIntAttribute examines the attribute - it is an alternative to the <a class="el" href="classTiXmlElement.html#ae419a442a9701a62b0c3d8fd1cbdd12d" title="Given an attribute name, Attribute() returns the value for the attribute of that...">Attribute()<\/a> method with richer error checking.  <a href="#aea0bfe471380f281c5945770ddbf52b9"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">QueryStringAttribute examines the attribute - see <a class="el" href="classTiXmlElement.html#aea0bfe471380f281c5945770ddbf52b9" title="QueryIntAttribute examines the attribute - it is an alternative to the Attribute()...">QueryIntAttribute()<\/a>. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Sets an attribute of name to a given value.  <a href="#a0d1dd975d75496778177e35abfe0ec0b"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Sets an attribute of name to a given value.  <a href="#abf0b3bd7f0e4c746a89ec6e7f101fc32"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Sets an attribute of name to a given value.  <a href="#ace6f4be75e373726d4774073d666d1a7"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Template form of the attribute query which will try to read the attribute into the specified type.  <a href="#ae3b9a03b0a56663a40801c7256683576"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement.html	/^<tr><td class="memTemplItemLeft" align="right" valign="top">int&nbsp;<\/td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classTiXmlElement.html#ae3b9a03b0a56663a40801c7256683576">QueryValueAttribute<\/a> (const std::string &amp;name, T *outValue) const <\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlElement.html	/^void&nbsp;<\/td><td class="memItemRight" valign="bottom"><a class="el" href="classTiXmlElement.html#a6f18d54fbe25bbc527936ee65363b3c5">SetAttribute<\/a> (const std::string &amp;name, int _value)<\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlHandle-members.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlHandle-members.html	/^      <li><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlHandle-members.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlHandle-members.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlHandle-members.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlHandle-members.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/classTiXmlHandle.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlHandle.html	/^      <li><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlHandle.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlHandle.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlHandle.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlHandle.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Create a handle from any node (at any depth of the tree.) This can be a null pointer. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlHandle.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Return a handle to the "index" child element with the given name.  <a href="#a979a3f850984a176ee884e394c7eed2d"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlHandle.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Return a handle to the "index" child element.  <a href="#a8786475b9d1f1518492e3a46704c7ef0"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlHandle.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Return a handle to the "index" child with the given name.  <a href="#a072492b4be1acdb0db2d03cd8f71ccc4"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlHandle.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Return a handle to the "index" child.  <a href="#af9cf6a7d08a5da94a8924425ad0cd5ac"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlHandle.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Return a handle to the first child element with the given name. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlHandle.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Return a handle to the first child element. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlHandle.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Return a handle to the first child node with the given name. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlHandle.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Return a handle to the first child node. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlHandle.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Return the handle as a <a class="el" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>.  <a href="#abc6e7ed383a5fe1e52b0c0004b457b9e"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlHandle.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Return the handle as a <a class="el" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>.  <a href="#af678e5088e83be67baf76f699756f2c3"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlHandle.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Return the handle as a <a class="el" href="classTiXmlText.html" title="XML text.">TiXmlText<\/a>.  <a href="#a4ac53a652296203a5b5e13854d923586"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlHandle.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Return the handle as a <a class="el" href="classTiXmlUnknown.html" title="Any tag that tinyXml doesn&#39;t recognize is saved as an unknown.">TiXmlUnknown<\/a>.  <a href="#a1381c17507a130767b1e23afc93b3674"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlHandle.html	/^<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classTiXmlElement.html">TiXmlElement<\/a> *&nbsp;<\/td><td class="memItemRight" valign="bottom"><a class="el" href="classTiXmlHandle.html#acb5fe8388a526289ea65e817a51e05e7">Element<\/a> () const <\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlHandle.html	/^<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classTiXmlText.html">TiXmlText<\/a> *&nbsp;<\/td><td class="memItemRight" valign="bottom"><a class="el" href="classTiXmlHandle.html#a9fc739c8a18d160006f82572fc143d13">Text<\/a> () const <\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlHandle.html	/^<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classTiXmlUnknown.html">TiXmlUnknown<\/a> *&nbsp;<\/td><td class="memItemRight" valign="bottom"><a class="el" href="classTiXmlHandle.html#a49675b74357ba2aae124657a9a1ef465">Unknown<\/a> () const <\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode-members.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode-members.html	/^      <li><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode-members.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode-members.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode-members.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^      <li><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight"><p>The types of XML nodes supported by TinyXml. <\/p>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Add a new node related to this.  <a href="#a0c146fa2fff0157b681594102f48cbc7"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Add a new node related to this.  <a href="#a5d29442ae46de6d0168429156197bfc6"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Add a new node related to this.  <a href="#ad9b75e54ec19301c8b4d5ff583d0b3d5"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">An alternate way to walk the children of a node.  <a href="#a8621196ba3705fa226bef4a761cc51b6"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">An input stream operator, for every class.  <a href="#ab57bd426563c926844f65a78412e18b9"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">An output stream operator, for every class.  <a href="#a86cd49cfb17a844c0010b3136ac966c7"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Appends the XML node or attribute to a std::string. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Cast to a more defined type. Will return null if not of the requested type. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Changes the value of the node.  <a href="#a2a38329ca5d3f28f98ce932b8299ae90"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Convenience function to get through elements.  <a href="#a071ba77fd7ab79402fa84b7e9b8607b3"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Convenience function to get through elements.  <a href="#a73acf929d49d10bd0e5fb3d31b0372d1"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Convenience function to get through elements. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Delete a child of this node. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Delete all the children of this node. Does not affect 'this'. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Navigate to a sibling node with the given 'value'. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Navigate to a sibling node. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">One step up the DOM. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Query the type (as an enumerated value, above) of this node.  <a href="#a57b99d5c97d67a42b9752f5210a1ba5e"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Replace a child of this node.  <a href="#a0c49e739a17b9938050c22cd89617fbd"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Return <a class="el" href="classTiXmlNode.html#a77943eb90d12c2892b1337a9f5918b41" title="The meaning of &#39;value&#39; changes for the specific type of TiXmlNode.">Value()<\/a> as a std::string.  <a href="#a6d9e505619d39bf50bfd9609c9169ea5"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Return a pointer to the Document this node lives in.  <a href="#a80e397fa973cf5323e33b07154b024f3"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Returns true if this node has no children. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">STL std::string form. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">The first child of this node with the matching 'value'.  <a href="#a1f05828d023150706eeb16d6fb3f6355"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">The first child of this node with the matching 'value'. Will be null if none found. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">The first child of this node. Will be null if there are no children. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">The last child of this node matching 'value'. Will be null if there are no children. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">The last child of this node. Will be null if there are no children. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">The meaning of 'value' changes for the specific type of <a class="el" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>.  <a href="#a77943eb90d12c2892b1337a9f5918b41"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlNode.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">This flavor of IterateChildren searches for children with a particular 'value'. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlPrinter-members.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlPrinter-members.html	/^      <li><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlPrinter-members.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlPrinter-members.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlPrinter-members.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlPrinter-members.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/classTiXmlPrinter.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlPrinter.html	/^      <li><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlPrinter.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlPrinter.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlPrinter.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlPrinter.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Query the current line breaking string. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlPrinter.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Query the indention string. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlPrinter.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Return the length of the result string. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlPrinter.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Return the result. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlPrinter.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Set the indent characters for printing.  <a href="#a213377a4070c7e625bae59716b089e5e"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlPrinter.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Set the line breaking string.  <a href="#a4be1e37e69e3858c59635aa947174fe6"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlPrinter.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Switch over to "stream printing" which is the most dense formatting without linebreaks.  <a href="#ab23a90629e374cb1cadca090468bbd19"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlText-members.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlText-members.html	/^      <li><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlText-members.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlText-members.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlText-members.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlText-members.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/classTiXmlText.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlText.html	/^      <li><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlText.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlText.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlText.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlText.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">All TinyXml classes can print themselves to a filestream or the string class (TiXmlString in non-STL mode, std::string in STL mode.  <a href="#a0cafbf6f236c7f02d12b2bffc2b7976b"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlText.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Constructor for text element.  <a href="#af659e77c6b87d684827f35a8f4895960"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlUnknown-members.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlUnknown-members.html	/^      <li><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlUnknown-members.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlUnknown-members.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlUnknown-members.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlUnknown-members.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/classTiXmlUnknown.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlUnknown.html	/^      <li><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlUnknown.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlUnknown.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlUnknown.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlUnknown.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">All TinyXml classes can print themselves to a filestream or the string class (TiXmlString in non-STL mode, std::string in STL mode.  <a href="#a31ba089a40fb5a1869750fce09b0bacb"><\/a><br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlUnknown.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">Creates a copy of this Unknown and returns it. <br\/><\/td><\/tr>$/;"	v
nbsp	tinyxml/docs/classTiXmlVisitor-members.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlVisitor-members.html	/^      <li><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlVisitor-members.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlVisitor-members.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlVisitor-members.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlVisitor-members.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/classTiXmlVisitor.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlVisitor.html	/^      <li><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlVisitor.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlVisitor.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classTiXmlVisitor.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classes.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classes.html	/^      <li><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classes.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classes.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classes.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/classes.html	/^<\/td><td><a class="el" href="classTiXmlComment.html">TiXmlComment<\/a>&nbsp;&nbsp;&nbsp;<\/td><td><a class="el" href="classTiXmlElement.html">TiXmlElement<\/a>&nbsp;&nbsp;&nbsp;<\/td><td><a class="el" href="classTiXmlPrinter.html">TiXmlPrinter<\/a>&nbsp;&nbsp;&nbsp;<\/td><td><a class="el" href="classTiXmlUnknown.html">TiXmlUnknown<\/a>&nbsp;&nbsp;&nbsp;<\/td><\/tr><tr><td><a class="el" href="classTiXmlAttribute.html">TiXmlAttribute<\/a>&nbsp;&nbsp;&nbsp;<\/td><td><a class="el" href="classTiXmlDeclaration.html">TiXmlDeclaration<\/a>&nbsp;&nbsp;&nbsp;<\/td><td><a class="el" href="classTiXmlHandle.html">TiXmlHandle<\/a>&nbsp;&nbsp;&nbsp;<\/td><td><a class="el" href="classTiXmlText.html">TiXmlText<\/a>&nbsp;&nbsp;&nbsp;<\/td><td><a class="el" href="classTiXmlVisitor.html">TiXmlVisitor<\/a>&nbsp;&nbsp;&nbsp;<\/td><\/tr><tr><td><a class="el" href="classTiXmlBase.html">TiXmlBase<\/a>&nbsp;&nbsp;&nbsp;<\/td><td><a class="el" href="classTiXmlDocument.html">TiXmlDocument<\/a>&nbsp;&nbsp;&nbsp;<\/td><td><a class="el" href="classTiXmlNode.html">TiXmlNode<\/a>&nbsp;&nbsp;&nbsp;<\/td><\/tr><\/table><div class="qindex"><a class="qindex" href="#letter_T">T<\/a><\/div>$/;"	v
nbsp	tinyxml/docs/classes.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/classes.html	/^<tr><td><a name="letter_T"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&nbsp;&nbsp;T&nbsp;&nbsp;<\/div><\/td><\/tr><\/table>$/;"	v
nbsp	tinyxml/docs/deprecated.html	/^      <li class="current"><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/deprecated.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/files.html	/^      <li class="current"><a href="files.html"><span>File&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/files.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/files.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x63.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x63.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x63.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x63.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x63.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x63.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x64.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x64.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x64.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x64.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x64.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x64.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x65.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x65.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x65.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x65.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x65.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x65.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x66.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x66.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x66.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x66.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x66.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x66.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x67.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x67.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x67.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x67.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x67.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x67.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x69.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x69.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x69.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x69.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x69.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x69.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x6c.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x6c.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x6c.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x6c.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x6c.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x6c.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x6e.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x6e.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x6e.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x6e.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x6e.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x6e.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x6f.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x6f.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x6f.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x6f.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x6f.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x6f.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x70.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x70.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x70.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x70.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x70.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x70.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x71.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x71.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x71.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x71.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x71.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x71.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x72.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x72.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x72.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x72.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x72.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x72.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x73.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x73.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x73.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x73.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x73.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x73.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x74.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x74.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x74.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x74.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x74.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x74.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x75.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x75.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x75.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x75.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x75.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x75.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x76.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x76.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x76.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x76.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x76.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_0x76.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_enum.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_enum.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_enum.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_enum.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_enum.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_enum.html	/^&nbsp;<ul>$/;"	v
nbsp	tinyxml/docs/functions_enum.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func.html	/^&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x63.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x63.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x63.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x63.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x63.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x63.html	/^&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x63.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x64.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x64.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x64.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x64.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x64.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x64.html	/^&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x64.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x65.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x65.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x65.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x65.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x65.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x65.html	/^&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x65.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x66.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x66.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x66.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x66.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x66.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x66.html	/^&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x66.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x67.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x67.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x67.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x67.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x67.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x67.html	/^&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x67.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x69.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x69.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x69.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x69.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x69.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x69.html	/^&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x69.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x6c.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x6c.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x6c.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x6c.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x6c.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x6c.html	/^&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x6c.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x6e.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x6e.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x6e.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x6e.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x6e.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x6e.html	/^&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x6e.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x70.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x70.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x70.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x70.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x70.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x70.html	/^&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x70.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x71.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x71.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x71.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x71.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x71.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x71.html	/^&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x71.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x72.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x72.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x72.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x72.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x72.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x72.html	/^&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x72.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x73.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x73.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x73.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x73.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x73.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x73.html	/^&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x73.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x74.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x74.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x74.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x74.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x74.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x74.html	/^&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x74.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x75.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x75.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x75.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x75.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x75.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x75.html	/^&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x75.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x76.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x76.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x76.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x76.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x76.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_func_0x76.html	/^&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_func_0x76.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_rela.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_rela.html	/^      <li class="current"><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_rela.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_rela.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_rela.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_rela.html	/^&nbsp;<ul>$/;"	v
nbsp	tinyxml/docs/functions_rela.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/functions_vars.html	/^      <li class="current"><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_vars.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_vars.html	/^      <li><a href="functions_rela.html"><span>Related&nbsp;Functions<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_vars.html	/^      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_vars.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/functions_vars.html	/^&nbsp;<ul>$/;"	v
nbsp	tinyxml/docs/functions_vars.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/hierarchy.html	/^      <li class="current"><a href="hierarchy.html"><span>Class&nbsp;Hierarchy<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/hierarchy.html	/^      <li><a href="annotated.html"><span>Class&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/hierarchy.html	/^      <li><a href="functions.html"><span>Class&nbsp;Members<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/hierarchy.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/hierarchy.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/hierarchy.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/index.html	/^      <li class="current"><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/index.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/pages.html	/^      <li class="current"><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/pages.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/pages.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/tinystr_8h_source.html	/^      <li><a href="files.html"><span>File&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/tinystr_8h_source.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/tinystr_8h_source.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	v
nbsp	tinyxml/docs/tinyxml_8h_source.html	/^      <li><a href="files.html"><span>File&nbsp;List<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/tinyxml_8h_source.html	/^      <li><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/tinyxml_8h_source.html	/^<hr size="1"\/><address style="text-align: right;"><small>Generated by&nbsp;$/;"	m	class:TiXmlVisitor	file:	access:public
nbsp	tinyxml/docs/tutorial0.html	/^      <li class="current"><a href="pages.html"><span>Related&nbsp;Pages<\/span><\/a><\/li>$/;"	v
nbsp	tinyxml/docs/tutorial0.html	/^      <li><a href="index.html"><span>Main&nbsp;Page<\/span><\/a><\/li>$/;"	v
next	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00764"><\/a>00764     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>*      next;$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:protected
next	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00887"><\/a>00887     <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* next;$/;"	m	class:TiXmlVisitor::TiXmlAttribute	file:	access:private
next	tinyxml/tinyxml.h	/^	TiXmlAttribute*	next;$/;"	m	class:TiXmlAttribute	access:private
next	tinyxml/tinyxml.h	/^	TiXmlNode*		next;$/;"	m	class:TiXmlNode	access:protected
node	tinyxml/docs/tutorial0.html	/^<p>Given an existing node, settings attributes is easy:<\/p>$/;"	v
node	tinyxml/tinyxml.h	/^	TiXmlNode* node;$/;"	m	class:TiXmlHandle	access:private
nodeName	DotSceneLoader.h	/^        String nodeName;$/;"	m	class:Ogre::nodeProperty	access:public
nodeProperties	DotSceneLoader.h	/^        std::vector<nodeProperty> nodeProperties;$/;"	m	class:Ogre::DotSceneLoader	access:public
nodeProperty	DotSceneLoader.h	/^        nodeProperty(const String &node, const String &propertyName, const String &value, const String &type)$/;"	f	class:Ogre::nodeProperty	access:public	signature:(const String &node, const String &propertyName, const String &value, const String &type)
nodeProperty	DotSceneLoader.h	/^    class nodeProperty$/;"	c	namespace:Ogre
npos	tinyxml/tinystr.cpp	/^const TiXmlString::size_type TiXmlString::npos = static_cast< TiXmlString::size_type >(-1);$/;"	m	class:TiXmlString	file:
npos	tinyxml/tinystr.h	/^	static const size_type npos; \/\/ = -1;$/;"	m	class:TiXmlString	access:public
nullrep_	tinyxml/tinystr.cpp	/^TiXmlString::Rep TiXmlString::nullrep_ = { 0, 0, { '\\0' } };$/;"	m	class:TiXmlString	file:
nullrep_	tinyxml/tinystr.h	/^	static Rep nullrep_;$/;"	m	class:TiXmlString	access:private
occurs	tinyxml/docs/classTiXmlDocument.html	/^<p>If an error occurs, Error will be set to true. <\/p>$/;"	v
occurs	tinyxml/docs/classTiXmlDocument.html	/^<tr><td class="mdescLeft">&nbsp;<\/td><td class="mdescRight">If an error occurs, Error will be set to true.  <a href="#a6dfc01a6e5d58e56acd537dfd3bdeb29"><\/a><br\/><\/td><\/tr>$/;"	v
onGround	DynamicCharacterController.h	/^	bool onGround () const;$/;"	p	class:DynamicCharacterController	access:public	signature:() const
onGround	btKinematicCharacterController.h	/^	bool onGround() const;$/;"	p	class:btKinematicCharacterController	access:public	signature:() const
operator !=	tinyxml/tinystr.h	/^inline bool operator != (const TiXmlString & a, const TiXmlString & b) { return !(a == b); }$/;"	f	signature:(const TiXmlString & a, const TiXmlString & b)
operator !=	tinyxml/tinystr.h	/^inline bool operator != (const TiXmlString & a, const char* b) { return !(a == b); }$/;"	f	signature:(const TiXmlString & a, const char* b)
operator !=	tinyxml/tinystr.h	/^inline bool operator != (const char* a, const TiXmlString & b) { return !(b == a); }$/;"	f	signature:(const char* a, const TiXmlString & b)
operator +	tinyxml/docs/tinystr_8h_source.html	/^<a name="l00291"><\/a>00291 TiXmlString operator + (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* a, <span class="keyword">const<\/span> TiXmlString &amp; b);$/;"	p	file:	signature:(<span class=”>const</span> <span class=”>char</span>* a, <span class=”>const</span> TiXmlString &amp; b)
operator +	tinyxml/tinystr.cpp	/^TiXmlString operator + (const TiXmlString & a, const TiXmlString & b)$/;"	f	signature:(const TiXmlString & a, const TiXmlString & b)
operator +	tinyxml/tinystr.cpp	/^TiXmlString operator + (const TiXmlString & a, const char* b)$/;"	f	signature:(const TiXmlString & a, const char* b)
operator +	tinyxml/tinystr.cpp	/^TiXmlString operator + (const char* a, const TiXmlString & b)$/;"	f	signature:(const char* a, const TiXmlString & b)
operator +	tinyxml/tinystr.h	/^TiXmlString operator + (const TiXmlString & a, const TiXmlString & b);$/;"	p	signature:(const TiXmlString & a, const TiXmlString & b)
operator +	tinyxml/tinystr.h	/^TiXmlString operator + (const TiXmlString & a, const char* b);$/;"	p	signature:(const TiXmlString & a, const char* b)
operator +	tinyxml/tinystr.h	/^TiXmlString operator + (const char* a, const TiXmlString & b);$/;"	p	signature:(const char* a, const TiXmlString & b)
operator +=	tinyxml/tinystr.h	/^	TiXmlString& operator += (char single)$/;"	f	class:TiXmlString	access:public	signature:(char single)
operator +=	tinyxml/tinystr.h	/^	TiXmlString& operator += (const TiXmlString & suffix)$/;"	f	class:TiXmlString	access:public	signature:(const TiXmlString & suffix)
operator +=	tinyxml/tinystr.h	/^	TiXmlString& operator += (const char * suffix)$/;"	f	class:TiXmlString	access:public	signature:(const char * suffix)
operator <	tinyxml/tinystr.h	/^inline bool operator < (const TiXmlString & a, const TiXmlString & b)$/;"	f	signature:(const TiXmlString & a, const TiXmlString & b)
operator <	tinyxml/tinyxml.h	/^	bool operator<( const TiXmlAttribute& rhs )	 const { return name < rhs.name; }$/;"	f	class:TiXmlAttribute	access:public	signature:( const TiXmlAttribute& rhs ) const
operator <<	tinyxml/tinystr.h	/^	TiXmlOutStream & operator << (const TiXmlString & in)$/;"	f	class:TiXmlOutStream	access:public	signature:(const TiXmlString & in)
operator <<	tinyxml/tinystr.h	/^	TiXmlOutStream & operator << (const char * in)$/;"	f	class:TiXmlOutStream	access:public	signature:(const char * in)
operator <<	tinyxml/tinyxml.cpp	/^std::ostream& operator<< (std::ostream & out, const TiXmlNode & base)$/;"	f	signature:(std::ostream & out, const TiXmlNode & base)
operator <<	tinyxml/tinyxml.cpp	/^std::string& operator<< (std::string& out, const TiXmlNode& base )$/;"	f	signature:(std::string& out, const TiXmlNode& base )
operator <<	tinyxml/tinyxml.h	/^		friend std::string& operator<< (std::string& out, const TiXmlNode& base );$/;"	p	class:TiXmlNode	access:friend	signature:(std::string& out, const TiXmlNode& base )
operator <<	tinyxml/tinyxml.h	/^	    friend std::ostream& operator<< (std::ostream& out, const TiXmlNode& base);$/;"	p	class:TiXmlNode	access:friend	signature:(std::ostream& out, const TiXmlNode& base)
operator <=	tinyxml/tinystr.h	/^inline bool operator <= (const TiXmlString & a, const TiXmlString & b) { return !(b < a); }$/;"	f	signature:(const TiXmlString & a, const TiXmlString & b)
operator =	tinyxml/tinystr.h	/^	TiXmlString& operator = (const TiXmlString & copy)$/;"	f	class:TiXmlString	access:public	signature:(const TiXmlString & copy)
operator =	tinyxml/tinystr.h	/^	TiXmlString& operator = (const char * copy)$/;"	f	class:TiXmlString	access:public	signature:(const char * copy)
operator =	tinyxml/tinyxml.cpp	/^void TiXmlComment::operator=( const TiXmlComment& base )$/;"	f	class:TiXmlComment	signature:( const TiXmlComment& base )
operator =	tinyxml/tinyxml.cpp	/^void TiXmlDeclaration::operator=( const TiXmlDeclaration& copy )$/;"	f	class:TiXmlDeclaration	signature:( const TiXmlDeclaration& copy )
operator =	tinyxml/tinyxml.cpp	/^void TiXmlDocument::operator=( const TiXmlDocument& copy )$/;"	f	class:TiXmlDocument	signature:( const TiXmlDocument& copy )
operator =	tinyxml/tinyxml.cpp	/^void TiXmlElement::operator=( const TiXmlElement& base )$/;"	f	class:TiXmlElement	signature:( const TiXmlElement& base )
operator =	tinyxml/tinyxml.h	/^	TiXmlHandle operator=( const TiXmlHandle& ref ) { this->node = ref.node; return *this; }$/;"	f	class:TiXmlHandle	access:public	signature:( const TiXmlHandle& ref )
operator =	tinyxml/tinyxml.h	/^	void operator=( const TiXmlAttribute& base );	\/\/ not allowed.$/;"	p	class:TiXmlAttribute	access:private	signature:( const TiXmlAttribute& base )
operator =	tinyxml/tinyxml.h	/^	void operator=( const TiXmlAttributeSet& );	\/\/ not allowed (as TiXmlAttribute)$/;"	p	class:TiXmlAttributeSet	access:private	signature:( const TiXmlAttributeSet& )
operator =	tinyxml/tinyxml.h	/^	void operator=( const TiXmlBase& base );	\/\/ not allowed.$/;"	p	class:TiXmlBase	access:private	signature:( const TiXmlBase& base )
operator =	tinyxml/tinyxml.h	/^	void operator=( const TiXmlComment& base );$/;"	p	class:TiXmlComment	access:public	signature:( const TiXmlComment& base )
operator =	tinyxml/tinyxml.h	/^	void operator=( const TiXmlDeclaration& copy );$/;"	p	class:TiXmlDeclaration	access:public	signature:( const TiXmlDeclaration& copy )
operator =	tinyxml/tinyxml.h	/^	void operator=( const TiXmlDocument& copy );$/;"	p	class:TiXmlDocument	access:public	signature:( const TiXmlDocument& copy )
operator =	tinyxml/tinyxml.h	/^	void operator=( const TiXmlElement& base );$/;"	p	class:TiXmlElement	access:public	signature:( const TiXmlElement& base )
operator =	tinyxml/tinyxml.h	/^	void operator=( const TiXmlNode& base );	\/\/ not allowed.$/;"	p	class:TiXmlNode	access:private	signature:( const TiXmlNode& base )
operator =	tinyxml/tinyxml.h	/^	void operator=( const TiXmlText& base )							 	{ base.CopyTo( this ); }$/;"	f	class:TiXmlText	access:public	signature:( const TiXmlText& base )
operator =	tinyxml/tinyxml.h	/^	void operator=( const TiXmlUnknown& copy )										{ copy.CopyTo( this ); }$/;"	f	class:TiXmlUnknown	access:public	signature:( const TiXmlUnknown& copy )
operator ==	tinyxml/tinystr.h	/^inline bool operator == (const TiXmlString & a, const TiXmlString & b)$/;"	f	signature:(const TiXmlString & a, const TiXmlString & b)
operator ==	tinyxml/tinystr.h	/^inline bool operator == (const TiXmlString & a, const char* b) { return strcmp(a.c_str(), b) == 0; }$/;"	f	signature:(const TiXmlString & a, const char* b)
operator ==	tinyxml/tinystr.h	/^inline bool operator == (const char* a, const TiXmlString & b) { return b == a; }$/;"	f	signature:(const char* a, const TiXmlString & b)
operator ==	tinyxml/tinyxml.h	/^	bool operator==( const TiXmlAttribute& rhs ) const { return rhs.name == name; }$/;"	f	class:TiXmlAttribute	access:public	signature:( const TiXmlAttribute& rhs ) const
operator >	tinyxml/tinystr.h	/^inline bool operator >  (const TiXmlString & a, const TiXmlString & b) { return b < a; }$/;"	f	signature:(const TiXmlString & a, const TiXmlString & b)
operator >	tinyxml/tinyxml.h	/^	bool operator>( const TiXmlAttribute& rhs )  const { return name > rhs.name; }$/;"	f	class:TiXmlAttribute	access:public	signature:( const TiXmlAttribute& rhs ) const
operator >=	tinyxml/tinystr.h	/^inline bool operator >= (const TiXmlString & a, const TiXmlString & b) { return !(a < b); }$/;"	f	signature:(const TiXmlString & a, const TiXmlString & b)
operator >>	tinyxml/tinyxml.cpp	/^std::istream& operator>> (std::istream & in, TiXmlNode & base)$/;"	f	signature:(std::istream & in, TiXmlNode & base)
operator >>	tinyxml/tinyxml.h	/^	    friend std::istream& operator >> (std::istream& in, TiXmlNode& base);$/;"	p	class:TiXmlNode	access:friend	signature:(std::istream& in, TiXmlNode& base)
operator []	tinyxml/tinystr.h	/^	char& operator [] (size_type index) const$/;"	f	class:TiXmlString	access:public	signature:(size_type index) const
out	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00452"><\/a>00452         <span class="keyword">friend<\/span> std::ostream&amp; <a class="code" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7" title="An output stream operator, for every class.">operator&lt;&lt; <\/a>(std::ostream&amp; out, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base);$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:public
out	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00455"><\/a>00455         <span class="keyword">friend<\/span> std::string&amp; <a class="code" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7" title="An output stream operator, for every class.">operator&lt;&lt; <\/a>(std::string&amp; out, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base );$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:public
pH	tinyxml/utf8test.gif	/^GIF89aÚ/;"	v
parallelComponent	btKinematicCharacterController.h	/^	btVector3 parallelComponent (const btVector3& direction, const btVector3& normal);$/;"	p	class:btKinematicCharacterController	access:protected	signature:(const btVector3& direction, const btVector3& normal)
parent	tinyxml/docs/classTiXmlNode.html	/^<p>(Except for attributes). Nodes have siblings, a parent, and children. A node can be in a document, or stand on its own. The type of a <a class="el" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a> can be queried, and it can be cast to its more defined type. <\/p>$/;"	v
parent	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00755"><\/a>00755     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>*      parent;$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:protected
parent	tinyxml/tinyxml.h	/^	TiXmlNode*		parent;$/;"	m	class:TiXmlNode	access:protected
parseColour	DotSceneLoader.h	/^        ColourValue parseColour(TiXmlElement *XMLNode);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode)
parseDotScene	DotSceneLoader.h	/^        void parseDotScene(const String &SceneName, const String &groupName, SceneManager *yourSceneMgr, SceneNode *pAttachNode = NULL, const String &sPrependNode = "");$/;"	p	class:Ogre::DotSceneLoader	access:public	signature:(const String &SceneName, const String &groupName, SceneManager *yourSceneMgr, SceneNode *pAttachNode = NULL, const String &sPrependNode = ”)
parseQuaternion	DotSceneLoader.h	/^        Quaternion parseQuaternion(TiXmlElement *XMLNode);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode)
parseVector3	DotSceneLoader.h	/^        Vector3 parseVector3(TiXmlElement *XMLNode);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode)
perpindicularComponent	btKinematicCharacterController.h	/^	btVector3 perpindicularComponent (const btVector3& direction, const btVector3& normal);$/;"	p	class:btKinematicCharacterController	access:protected	signature:(const btVector3& direction, const btVector3& normal)
playerStep	DynamicCharacterController.h	/^	void playerStep (const btCollisionWorld* collisionWorld,btScalar dt,$/;"	p	class:DynamicCharacterController	access:public	signature:(const btCollisionWorld* collisionWorld,btScalar dt, int forward, int backward, int left, int right, int jump)
playerStep	btKinematicCharacterController.h	/^	void playerStep( btCollisionWorld* collisionWorld, btScalar dt );$/;"	p	class:btKinematicCharacterController	access:public	signature:( btCollisionWorld* collisionWorld, btScalar dt )
preStep	DynamicCharacterController.h	/^	void preStep (const btCollisionWorld* collisionWorld);$/;"	p	class:DynamicCharacterController	access:public	signature:(const btCollisionWorld* collisionWorld)
preStep	btKinematicCharacterController.h	/^	void preStep( btCollisionWorld* collisionWorld );$/;"	p	class:btKinematicCharacterController	access:public	signature:( btCollisionWorld* collisionWorld )
prev	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00763"><\/a>00763     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>*      prev;$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:protected
prev	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00886"><\/a>00886     <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* prev;$/;"	m	class:TiXmlVisitor::TiXmlAttribute	file:	access:private
prev	tinyxml/tinyxml.h	/^	TiXmlAttribute*	prev;$/;"	m	class:TiXmlAttribute	access:private
prev	tinyxml/tinyxml.h	/^	TiXmlNode*		prev;$/;"	m	class:TiXmlNode	access:protected
processBillboardSet	DotSceneLoader.h	/^        void processBillboardSet(TiXmlElement *XMLNode, SceneNode *pParent);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, SceneNode *pParent)
processCamera	DotSceneLoader.h	/^        void processCamera(TiXmlElement *XMLNode, SceneNode *pParent = 0);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, SceneNode *pParent = 0)
processClipping	DotSceneLoader.h	/^        void processClipping(TiXmlElement *XMLNode);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode)
processEntity	DotSceneLoader.h	/^        void processEntity(TiXmlElement *XMLNode, SceneNode *pParent);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, SceneNode *pParent)
processEnvironment	DotSceneLoader.h	/^        void processEnvironment(TiXmlElement *XMLNode);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode)
processExternals	DotSceneLoader.h	/^        void processExternals(TiXmlElement *XMLNode);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode)
processFog	DotSceneLoader.h	/^        void processFog(TiXmlElement *XMLNode);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode)
processLight	DotSceneLoader.h	/^        void processLight(TiXmlElement *XMLNode, SceneNode *pParent = 0);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, SceneNode *pParent = 0)
processLightAttenuation	DotSceneLoader.h	/^        void processLightAttenuation(TiXmlElement *XMLNode, Light *pLight);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, Light *pLight)
processLightRange	DotSceneLoader.h	/^        void processLightRange(TiXmlElement *XMLNode, Light *pLight);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, Light *pLight)
processLookTarget	DotSceneLoader.h	/^        void processLookTarget(TiXmlElement *XMLNode, SceneNode *pParent);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, SceneNode *pParent)
processNode	DotSceneLoader.h	/^        void processNode(TiXmlElement *XMLNode, SceneNode *pParent = 0);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, SceneNode *pParent = 0)
processNodes	DotSceneLoader.h	/^        void processNodes(TiXmlElement *XMLNode);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode)
processOctree	DotSceneLoader.h	/^        void processOctree(TiXmlElement *XMLNode);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode)
processParticleSystem	DotSceneLoader.h	/^        void processParticleSystem(TiXmlElement *XMLNode, SceneNode *pParent);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, SceneNode *pParent)
processPlane	DotSceneLoader.h	/^        void processPlane(TiXmlElement *XMLNode, SceneNode *pParent);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, SceneNode *pParent)
processScene	DotSceneLoader.h	/^        void processScene(TiXmlElement *XMLRoot);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLRoot)
processSkyBox	DotSceneLoader.h	/^        void processSkyBox(TiXmlElement *XMLNode);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode)
processSkyDome	DotSceneLoader.h	/^        void processSkyDome(TiXmlElement *XMLNode);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode)
processSkyPlane	DotSceneLoader.h	/^        void processSkyPlane(TiXmlElement *XMLNode);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode)
processTerrain	DotSceneLoader.h	/^        void processTerrain(TiXmlElement *XMLNode);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode)
processTrackTarget	DotSceneLoader.h	/^        void processTrackTarget(TiXmlElement *XMLNode, SceneNode *pParent);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, SceneNode *pParent)
processUserDataReference	DotSceneLoader.h	/^        void processUserDataReference(TiXmlElement *XMLNode, Entity *pEntity);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, Entity *pEntity)
processUserDataReference	DotSceneLoader.h	/^        void processUserDataReference(TiXmlElement *XMLNode, SceneNode *pParent = 0);$/;"	p	class:Ogre::DotSceneLoader	access:protected	signature:(TiXmlElement *XMLNode, SceneNode *pParent = 0)
propertyNm	DotSceneLoader.h	/^        String propertyNm;$/;"	m	class:Ogre::nodeProperty	access:public
quit	tinyxml/tinystr.h	/^	void quit()$/;"	f	class:TiXmlString	access:private	signature:()
quot	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00052"><\/a>00052 <span class="preprocessor"><\/span><span class="preprocessor">    #include &quot;tinystr.h&quot;<\/span>$/;"	v
quot	tinyxml/utf8testverify.xml	/^    <Heavy>&quot;M√´t√¶l!&quot;<\/Heavy>$/;"	v
read	tinyxml/docs/index.html	/^<p>In brief, TinyXML parses an XML document, and builds from that a Document Object Model (DOM) that can be read, modified, and saved.<\/p>$/;"	v
recoverFromPenetration	btKinematicCharacterController.h	/^	bool recoverFromPenetration ( btCollisionWorld* collisionWorld);$/;"	p	class:btKinematicCharacterController	access:protected	signature:( btCollisionWorld* collisionWorld)
reference	tinyxml/changes.txt	/^- [ 979180 ] Missing ; in entity reference, fix from Rob Laveaux.$/;"	v
registerPairCacheAndDispatcher	DynamicCharacterController.h	/^	virtual void registerPairCacheAndDispatcher (btOverlappingPairCache* pairCache, btCollisionDispatcher* dispatcher);$/;"	p	class:DynamicCharacterController	access:public	signature:(btOverlappingPairCache* pairCache, btCollisionDispatcher* dispatcher)
rep_	tinyxml/tinystr.h	/^	Rep * rep_;$/;"	m	class:TiXmlString	access:private
reports	tinyxml/changes.txt	/^  including UTF-8 feedback, bug reports, and patches. Thanks!$/;"	v
reserve	tinyxml/tinystr.cpp	/^void TiXmlString::reserve (size_type cap)$/;"	f	class:TiXmlString	signature:(size_type cap)
reserve	tinyxml/tinystr.h	/^	void reserve (size_type cap);$/;"	p	class:TiXmlString	access:public	signature:(size_type cap)
reset	DynamicCharacterController.h	/^	virtual void reset ();$/;"	p	class:DynamicCharacterController	access:public	signature:()
reset	btKinematicCharacterController.h	/^	void reset();$/;"	p	class:btKinematicCharacterController	access:public	signature:()
resourceCollision	LoadingBar.h	/^	bool resourceCollision(ResourcePtr &resource, ResourceManager *resourceManager)$/;"	f	class:LoadingBar	access:public	signature:(ResourcePtr &resource, ResourceManager *resourceManager)
resourceGroupLoadEnded	LoadingBar.h	/^	void resourceGroupLoadEnded(const String& groupName)$/;"	f	class:LoadingBar	access:public	signature:(const String& groupName)
resourceGroupLoadStarted	LoadingBar.h	/^	void resourceGroupLoadStarted(const String& groupName, size_t resourceCount)$/;"	f	class:LoadingBar	access:public	signature:(const String& groupName, size_t resourceCount)
resourceGroupScriptingEnded	LoadingBar.h	/^	void resourceGroupScriptingEnded(const String& groupName)$/;"	f	class:LoadingBar	access:public	signature:(const String& groupName)
resourceGroupScriptingStarted	LoadingBar.h	/^	void resourceGroupScriptingStarted(const String& groupName, size_t scriptCount)$/;"	f	class:LoadingBar	access:public	signature:(const String& groupName, size_t scriptCount)
resourceLoadEnded	LoadingBar.h	/^	void resourceLoadEnded(void)$/;"	f	class:LoadingBar	access:public	signature:(void)
resourceLoadStarted	LoadingBar.h	/^	void resourceLoadStarted(const ResourcePtr& resource)$/;"	f	class:LoadingBar	access:public	signature:(const ResourcePtr& resource)
resourceLoading	LoadingBar.h	/^	Ogre::DataStreamPtr resourceLoading(const String &name, const String &group, Resource *resource)$/;"	f	class:LoadingBar	access:public	signature:(const String &name, const String &group, Resource *resource)
roughly	tinyxml/docs/hierarchy.html	/^<h1>Class Hierarchy<\/h1>This inheritance list is sorted roughly, but not completely, alphabetically:<ul>$/;"	v
row	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00104"><\/a>00104     <span class="keywordtype">int<\/span> row;    <span class="comment">\/\/ 0 based.<\/span>$/;"	m	struct:TiXmlCursor	file:	access:public
row	tinyxml/tinyxml.h	/^	int row;	\/\/ 0 based.$/;"	m	struct:TiXmlCursor	access:public
scriptParseEnded	LoadingBar.h	/^	void scriptParseEnded(const String& scriptName, bool skipped)$/;"	f	class:LoadingBar	access:public	signature:(const String& scriptName, bool skipped)
scriptParseStarted	LoadingBar.h	/^	void scriptParseStarted(const String& scriptName, bool &skipThisScript)$/;"	f	class:LoadingBar	access:public	signature:(const String& scriptName, bool &skipThisScript)
sentinel	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00932"><\/a>00932     <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a> sentinel;$/;"	m	class:TiXmlVisitor::TiXmlAttributeSet	file:	access:private
sentinel	tinyxml/tinyxml.h	/^	TiXmlAttribute sentinel;$/;"	m	class:TiXmlAttributeSet	access:private
setBaseAnimation	GraphicCharacter.h	/^	void setBaseAnimation( AnimID id, bool reset = false );$/;"	p	class:GraphicCharacter	access:private	signature:( AnimID id, bool reset = false )
setCharacterVelocityForTimeInterval	KinematicCharacter.h	/^	void setCharacterVelocityForTimeInterval( const btVector3 & pVelocity, btScalar pTimeInterval );$/;"	p	class:KinematicCharacter	access:public	signature:( const btVector3 & pVelocity, btScalar pTimeInterval )
setCharacterWalkDirection	KinematicCharacter.h	/^	void setCharacterWalkDirection( const Ogre::Vector3 & pGoalDirection );$/;"	p	class:KinematicCharacter	access:public	signature:( const Ogre::Vector3 & pGoalDirection )
setFallSpeed	btKinematicCharacterController.h	/^	void setFallSpeed( btScalar fallSpeed );$/;"	p	class:btKinematicCharacterController	access:public	signature:( btScalar fallSpeed )
setGravity	btKinematicCharacterController.h	/^	void setGravity( btScalar gravity );$/;"	p	class:btKinematicCharacterController	access:public	signature:( btScalar gravity )
setJumpSpeed	btKinematicCharacterController.h	/^	void setJumpSpeed( btScalar jumpSpeed );$/;"	p	class:btKinematicCharacterController	access:public	signature:( btScalar jumpSpeed )
setJumpState	CharacterState.h	/^	void setJumpState( bool pJump ){ mJump = pJump; }$/;"	f	class:CharacterState	access:public	signature:( bool pJump )
setJumpState	CharacterState.h~	/^	void setJumpState( bool pJump ){ mJump = pJump; }$/;"	f	class:CharacterState	access:public	signature:( bool pJump )
setKeyDirectionX	CharacterState.h	/^	void setKeyDirectionX( Ogre::Real pX ){ mKeyDirection.x = pX; }$/;"	f	class:CharacterState	access:public	signature:( Ogre::Real pX )
setKeyDirectionX	CharacterState.h~	/^	void setKeyDirectionX( Ogre::Real pX ){ mKeyDirection.x = pX; }$/;"	f	class:CharacterState	access:public	signature:( Ogre::Real pX )
setKeyDirectionY	CharacterState.h	/^	void setKeyDirectionY( Ogre::Real pY ){ mKeyDirection.y = pY; }$/;"	f	class:CharacterState	access:public	signature:( Ogre::Real pY )
setKeyDirectionY	CharacterState.h~	/^	void setKeyDirectionY( Ogre::Real pY ){ mKeyDirection.y = pY; }$/;"	f	class:CharacterState	access:public	signature:( Ogre::Real pY )
setKeyDirectionZ	CharacterState.h	/^	void setKeyDirectionZ( Ogre::Real pZ ){ mKeyDirection.z = pZ; }$/;"	f	class:CharacterState	access:public	signature:( Ogre::Real pZ )
setKeyDirectionZ	CharacterState.h~	/^	void setKeyDirectionZ( Ogre::Real pZ ){ mKeyDirection.z = pZ; }$/;"	f	class:CharacterState	access:public	signature:( Ogre::Real pZ )
setLandedState	CharacterState.h	/^	void setLandedState( bool pLanded ){ mLanded = pLanded; }$/;"	f	class:CharacterState	access:public	signature:( bool pLanded )
setLandedState	CharacterState.h~	/^	void setLandedState( bool pLanded ){ mLanded = pLanded; }$/;"	f	class:CharacterState	access:public	signature:( bool pLanded )
setMaxJumpHeight	btKinematicCharacterController.h	/^	void setMaxJumpHeight( btScalar maxJumpHeight );$/;"	p	class:btKinematicCharacterController	access:public	signature:( btScalar maxJumpHeight )
setMaxSlope	btKinematicCharacterController.h	/^	void setMaxSlope( btScalar slopeRadians );$/;"	p	class:btKinematicCharacterController	access:public	signature:( btScalar slopeRadians )
setNode	MotionState.h	/^	void setNode( Ogre::SceneNode * pNode );$/;"	p	class:MotionState	access:public	signature:( Ogre::SceneNode * pNode )
setPlayerPosition	MotionState.h	/^	void setPlayerPosition( btTransform & pCurrentPos );$/;"	p	class:MotionState	access:public	signature:( btTransform & pCurrentPos )
setTopAnimation	GraphicCharacter.h	/^	void setTopAnimation( AnimID id, bool reset = false );$/;"	p	class:GraphicCharacter	access:private	signature:( AnimID id, bool reset = false )
setUpAxis	btKinematicCharacterController.h	/^	void setUpAxis( int axis )$/;"	f	class:btKinematicCharacterController	access:public	signature:( int axis )
setUseGhostSweepTest	btKinematicCharacterController.h	/^	void setUseGhostSweepTest( bool useGhostObjectSweepTest )$/;"	f	class:btKinematicCharacterController	access:public	signature:( bool useGhostObjectSweepTest )
setVelocityForTimeInterval	btKinematicCharacterController.h	/^	virtual void setVelocityForTimeInterval( const btVector3& velocity, btScalar timeInterval );$/;"	p	class:btKinematicCharacterController	access:public	signature:( const btVector3& velocity, btScalar timeInterval )
setWalkDirection	btKinematicCharacterController.h	/^	virtual void setWalkDirection( const btVector3& walkDirection );$/;"	p	class:btKinematicCharacterController	access:public	signature:( const btVector3& walkDirection )
setWorldTransform	KinematicCharacter.h	/^	void setWorldTransform( const btTransform & pWorldTrans );$/;"	p	class:KinematicCharacter	access:public	signature:( const btTransform & pWorldTrans )
setWorldTransform	MotionState.h	/^	virtual void setWorldTransform( const btTransform & pWorldTrans );$/;"	p	class:MotionState	access:public	signature:( const btTransform & pWorldTrans )
set_size	tinyxml/tinystr.h	/^	void set_size(size_type sz) { rep_->str[ rep_->size = sz ] = '\\0'; }$/;"	f	class:TiXmlString	access:private	signature:(size_type sz)
setup	DynamicCharacterController.h	/^	void setup (btScalar height = 2.0, btScalar width = 0.25, btScalar stepHeight = 0.25);$/;"	p	class:DynamicCharacterController	access:public	signature:(btScalar height = 2.0, btScalar width = 0.25, btScalar stepHeight = 0.25)
setup	GameBase.h	/^    virtual bool setup();$/;"	p	class:GameBase	access:protected	signature:()
setupAnimations	GraphicCharacter.h	/^	void setupAnimations();$/;"	p	class:GraphicCharacter	access:private	signature:()
setupBody	GraphicCharacter.h	/^	void setupBody( SceneManager * pSceneMgr );$/;"	p	class:GraphicCharacter	access:private	signature:( SceneManager * pSceneMgr )
setupResources	GameBase.h	/^    virtual void setupResources(void);$/;"	p	class:GameBase	access:protected	signature:(void)
siblings	tinyxml/docs/classTiXmlNode.html	/^<p>(Except for attributes). Nodes have siblings, a parent, and children. A node can be in a document, or stand on its own. The type of a <a class="el" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a> can be queried, and it can be cast to its more defined type. <\/p>$/;"	v
simpleTextPrint	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01787"><\/a>01787     <span class="keywordtype">bool<\/span> simpleTextPrint;$/;"	m	class:TiXmlVisitor::TiXmlPrinter	file:	access:private
simpleTextPrint	tinyxml/tinyxml.h	/^	bool simpleTextPrint;$/;"	m	class:TiXmlPrinter	access:private
size	tinyxml/tinystr.h	/^		size_type size, capacity;$/;"	m	struct:TiXmlString::Rep	access:public
size	tinyxml/tinystr.h	/^	size_type size () const { return rep_->size; }$/;"	f	class:TiXmlString	access:public	signature:() const
size_type	tinyxml/tinystr.h	/^  	typedef size_t size_type;$/;"	t	class:TiXmlString	access:public
small	tinyxml/docs/index.html	/^<p>TinyXML is a simple, small, C++ XML parser that can be easily integrated into other programs.<\/p>$/;"	v
stamp	tinyxml/tinyxmlparser.cpp	/^	const char*		stamp;$/;"	m	class:TiXmlParsingData	file:	access:private
standalone	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01336"><\/a>01336     TIXML_STRING standalone;$/;"	m	class:TiXmlVisitor::TiXmlDeclaration	file:	access:private
standalone	tinyxml/tinyxml.h	/^	TIXML_STRING standalone;$/;"	m	class:TiXmlDeclaration	access:private
start	LoadingBar.h	/^	virtual void start(RenderWindow* window, $/;"	f	class:LoadingBar	access:public	signature:(RenderWindow* window, unsigned short numGroupsInit = 1, unsigned short numGroupsLoad = 1, Real initProportion = 0.70f)
start	tinyxml/tinystr.h	/^	char* start() const { return rep_->str; }$/;"	f	class:TiXmlString	access:private	signature:() const
staticObjects	DotSceneLoader.h	/^        std::vector<String> staticObjects;$/;"	m	class:Ogre::DotSceneLoader	access:public
stepDown	btKinematicCharacterController.h	/^	void stepDown (btCollisionWorld* collisionWorld, btScalar dt);$/;"	p	class:btKinematicCharacterController	access:protected	signature:(btCollisionWorld* collisionWorld, btScalar dt)
stepForwardAndStrafe	btKinematicCharacterController.h	/^	void stepForwardAndStrafe (btCollisionWorld* collisionWorld, const btVector3& walkMove);$/;"	p	class:btKinematicCharacterController	access:protected	signature:(btCollisionWorld* collisionWorld, const btVector3& walkMove)
stepUp	btKinematicCharacterController.h	/^	void stepUp (btCollisionWorld* collisionWorld);$/;"	p	class:btKinematicCharacterController	access:protected	signature:(btCollisionWorld* collisionWorld)
str	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00402"><\/a>00402         <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>*     str;$/;"	m	struct:TiXmlVisitor::TiXmlBase::Entity	file:	access:public
str	tinyxml/tinystr.h	/^		char str[1];$/;"	m	struct:TiXmlString::Rep	access:public
str	tinyxml/tinyxml.h	/^		const char*     str;$/;"	m	struct:TiXmlBase::Entity	access:public
strLength	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00403"><\/a>00403         <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span>    strLength;$/;"	m	struct:TiXmlVisitor::TiXmlBase::Entity	file:	access:public
strLength	tinyxml/tinyxml.h	/^		unsigned int	strLength;$/;"	m	struct:TiXmlBase::Entity	access:public
structs	tinyxml/docs/annotated.html	/^<h1>Class List<\/h1>Here are the classes, structs, unions and interfaces with brief descriptions:<table>$/;"	v
swap	tinyxml/tinystr.h	/^	void swap (TiXmlString& other)$/;"	f	class:TiXmlString	access:public	signature:(TiXmlString& other)
tabsize	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01545"><\/a>01545     <span class="keywordtype">int<\/span> tabsize;$/;"	m	class:TiXmlVisitor::TiXmlDocument	file:	access:private
tabsize	tinyxml/tinyxml.h	/^	int tabsize;$/;"	m	class:TiXmlDocument	access:private
tabsize	tinyxml/tinyxmlparser.cpp	/^	int				tabsize;$/;"	m	class:TiXmlParsingData	file:	access:private
type	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00756"><\/a>00756     <a class="code" href="classTiXmlNode.html#a836eded4920ab9e9ef28496f48cd95a2" title="The types of XML nodes supported by TinyXml.">NodeType<\/a>        type;$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:protected
type	tinyxml/tinyxml.h	/^	NodeType		type;$/;"	m	class:TiXmlNode	access:protected
typeName	DotSceneLoader.h	/^        String typeName;$/;"	m	class:Ogre::nodeProperty	access:public
update	Character.h	/^	void update( Ogre::Real deltaTime );	\/\/ ∏¸–¬À˘”–£¨∞¸¿®“∆∂Ø°¢Ã¯‘æ°¢◊≈¬‰◊¥Ã¨∏¸–¬µ»$/;"	p	class:Character	access:public	signature:( Ogre::Real deltaTime )
update	Character.h~	/^	void update( Ogre::Real deltaTime );	\/\/ ∏¸–¬À˘”–£¨∞¸¿®“∆∂Ø°¢Ã¯‘æ°¢◊≈¬‰◊¥Ã¨∏¸–¬µ»$/;"	p	class:Character	file:	access:public	signature:( Ogre::Real deltaTime )
updateAction	btKinematicCharacterController.h	/^	virtual void updateAction( btCollisionWorld * collisionWorld, btScalar deltaTime )$/;"	f	class:btKinematicCharacterController	access:public	signature:( btCollisionWorld * collisionWorld, btScalar deltaTime )
updateAnimations	GraphicCharacter.h	/^	void updateAnimations( Real deltaTime );$/;"	p	class:GraphicCharacter	access:private	signature:( Real deltaTime )
updateBody	GraphicCharacter.h	/^	void updateBody( Real deltaTime );$/;"	p	class:GraphicCharacter	access:private	signature:( Real deltaTime )
updateCamera	SeekSeekSeek.h	/^	void updateCamera( Real deltaTime );										\/\/ ∏¸–¬ Camera$/;"	p	class:SeekSeekSeek	access:protected	signature:( Real deltaTime )
updateCameraGoal	SeekSeekSeek.h	/^	void updateCameraGoal( Real deltaYaw, Real deltaPitch, Real deltaZoom );	\/\/ ∏¸–¬ Camera ƒø±Í∑ΩœÚ | ∏¸–¬ ”Ω«$/;"	p	class:SeekSeekSeek	access:protected	signature:( Real deltaYaw, Real deltaPitch, Real deltaZoom )
updateTargetPositionBasedOnCollision	btKinematicCharacterController.h	/^	void updateTargetPositionBasedOnCollision (const btVector3& hit_normal, btScalar tangentMag = btScalar(0.0), btScalar normalMag = btScalar(1.0));$/;"	p	class:btKinematicCharacterController	access:protected	signature:(const btVector3& hit_normal, btScalar tangentMag = btScalar(0.0), btScalar normalMag = btScalar(1.0))
useMicrosoftBOM	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01547"><\/a>01547     <span class="keywordtype">bool<\/span> useMicrosoftBOM;       <span class="comment">\/\/ the UTF-8 BOM were found when read. Note this, and try to write.<\/span>$/;"	m	class:TiXmlVisitor::TiXmlDocument	file:	access:private
useMicrosoftBOM	tinyxml/tinyxml.h	/^	bool useMicrosoftBOM;		\/\/ the UTF-8 BOM were found when read. Note this, and try to write.$/;"	m	class:TiXmlDocument	access:private
useful	tinyxml/docs/classTiXmlPrinter.html	/^<p>By default 4 spaces but tab () is also useful, or null\/empty string for no indentation. <\/p>$/;"	v
userData	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00376"><\/a><a class="code" href="classTiXmlBase.html#ab242c01590191f644569fa89a080d97c">00376<\/a>     <span class="keywordtype">void<\/span>*           <a class="code" href="classTiXmlBase.html#ab242c01590191f644569fa89a080d97c" title="Field containing a generic user pointer.">userData<\/a>;$/;"	m	class:TiXmlVisitor::TiXmlBase	file:	access:protected
userData	tinyxml/tinyxml.h	/^	void*			userData;$/;"	m	class:TiXmlBase	access:protected
utf8ByteTable	tinyxml/tinyxml.h	/^	static const int utf8ByteTable[256];$/;"	m	class:TiXmlBase	access:public
utf8ByteTable	tinyxml/tinyxmlparser.cpp	/^const int TiXmlBase::utf8ByteTable[256] = $/;"	m	class:TiXmlBase	file:
value	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00761"><\/a>00761     TIXML_STRING    value;$/;"	m	class:TiXmlVisitor::TiXmlNode	file:	access:protected
value	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00885"><\/a>00885     TIXML_STRING value;$/;"	m	class:TiXmlVisitor::TiXmlAttribute	file:	access:private
value	tinyxml/docs/tutorial0.html	/^      + name: value=[MainFrame]$/;"	v
value	tinyxml/docs/tutorial0.html	/^<p>The following code shows one way (not the only way) to get all attributes of an element, print the name and string value, and if the value can be converted to an integer or double, print that value too:<\/p>$/;"	v
value	tinyxml/tinyxml.h	/^	TIXML_STRING	value;$/;"	m	class:TiXmlNode	access:protected
value	tinyxml/tinyxml.h	/^	TIXML_STRING value;$/;"	m	class:TiXmlAttribute	access:private
valueName	DotSceneLoader.h	/^        String valueName;$/;"	m	class:Ogre::nodeProperty	access:public
version	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l01334"><\/a>01334     TIXML_STRING version;$/;"	m	class:TiXmlVisitor::TiXmlDeclaration	file:	access:private
version	tinyxml/docs/tutorial0.html	/^&lt;?xml version="1.0" ?&gt;$/;"	v
version	tinyxml/tinyxml.h	/^	TIXML_STRING version;$/;"	m	class:TiXmlDeclaration	access:private
warp	DynamicCharacterController.h	/^	virtual void warp (const btVector3& origin);$/;"	p	class:DynamicCharacterController	access:public	signature:(const btVector3& origin)
warp	btKinematicCharacterController.h	/^	void warp( const btVector3& origin );$/;"	p	class:btKinematicCharacterController	access:public	signature:( const btVector3& origin )
window	tinyxml/docs/tutorial0.html	/^window = new TiXmlElement( "Demo" );  $/;"	v
windowClosed	GameBase.h	/^    virtual void windowClosed(Ogre::RenderWindow* rw);$/;"	p	class:GameBase	access:protected	signature:(Ogre::RenderWindow* rw)
windowResized	GameBase.h	/^    virtual void windowResized(Ogre::RenderWindow* rw);$/;"	p	class:GameBase	access:protected	signature:(Ogre::RenderWindow* rw)
worldGeometryStageEnded	LoadingBar.h	/^	void worldGeometryStageEnded(void)$/;"	f	class:LoadingBar	access:public	signature:(void)
worldGeometryStageStarted	LoadingBar.h	/^	void worldGeometryStageStarted(const String& description)$/;"	f	class:LoadingBar	access:public	signature:(const String& description)
write_app_settings_doc	tinyxml/docs/tutorial0.html	/^void write_app_settings_doc( )  $/;"	f	signature:( )
write_simple_doc2	tinyxml/docs/tutorial0.html	/^void write_simple_doc2( )$/;"	f	signature:( )
zeroKeyDirection	CharacterState.h	/^	bool zeroKeyDirection()$/;"	f	class:CharacterState	access:public	signature:()
zeroKeyDirection	CharacterState.h~	/^	bool zeroKeyDirection()$/;"	f	class:CharacterState	access:public	signature:()
~Character	Character.h	/^	~Character();$/;"	p	class:Character	access:public	signature:()
~Character	Character.h~	/^	~Character();$/;"	p	class:Character	file:	access:public	signature:()
~CharacterInputListener	CharacterInputListener.h	/^	~CharacterInputListener();$/;"	p	class:CharacterInputListener	access:public	signature:()
~CharacterInputListener	CharacterInputListener.h~	/^	~CharacterInputListener();$/;"	p	class:CharacterInputListener	file:	access:public	signature:()
~CharacterState	CharacterState.h	/^	~CharacterState(){};$/;"	f	class:CharacterState	access:public	signature:()
~CharacterState	CharacterState.h~	/^	~CharacterState(){};$/;"	f	class:CharacterState	access:public	signature:()
~DotSceneLoader	DotSceneLoader.h	/^        virtual ~DotSceneLoader() {}$/;"	f	class:Ogre::DotSceneLoader	access:public	signature:()
~DynamicCharacterController	DynamicCharacterController.h	/^	~DynamicCharacterController ();$/;"	p	class:DynamicCharacterController	access:public	signature:()
~GameBase	GameBase.h	/^    virtual ~GameBase(void);$/;"	p	class:GameBase	access:public	signature:(void)
~GameMap	GameMap.h	/^    virtual ~GameMap(void);$/;"	p	class:GameMap	access:public	signature:(void)
~KinematicCharacter	KinematicCharacter.h	/^	~KinematicCharacter();$/;"	p	class:KinematicCharacter	access:public	signature:()
~LoadingBar	LoadingBar.h	/^	virtual ~LoadingBar(){}$/;"	f	class:LoadingBar	access:public	signature:()
~MotionState	MotionState.h	/^	virtual ~MotionState();$/;"	p	class:MotionState	access:public	signature:()
~PhysicsBase	PhysicsBase.h	/^ 	virtual ~PhysicsBase();$/;"	p	class:PhysicsBase	access:public	signature:()
~PhysicsFrameListener	PhysicsFrameListener.h	/^ 	~PhysicsFrameListener();$/;"	p	class:PhysicsFrameListener	access:public	signature:()
~SeekSeekSeek	SeekSeekSeek.h	/^    virtual ~SeekSeekSeek(void);$/;"	p	class:SeekSeekSeek	access:public	signature:(void)
~TiXmlAttributeSet	tinyxml/docs/tinyxml_8h_source.html	/^<a name="l00907"><\/a>00907     ~TiXmlAttributeSet();$/;"	p	class:TiXmlVisitor::TiXmlAttributeSet	file:	access:public	signature:()
~TiXmlAttributeSet	tinyxml/tinyxml.cpp	/^TiXmlAttributeSet::~TiXmlAttributeSet()$/;"	f	class:TiXmlAttributeSet	signature:()
~TiXmlAttributeSet	tinyxml/tinyxml.h	/^	~TiXmlAttributeSet();$/;"	p	class:TiXmlAttributeSet	access:public	signature:()
~TiXmlBase	tinyxml/tinyxml.h	/^	virtual ~TiXmlBase()			{}$/;"	f	class:TiXmlBase	access:public	signature:()
~TiXmlComment	tinyxml/tinyxml.h	/^	virtual ~TiXmlComment()	{}$/;"	f	class:TiXmlComment	access:public	signature:()
~TiXmlDeclaration	tinyxml/tinyxml.h	/^	virtual ~TiXmlDeclaration()	{}$/;"	f	class:TiXmlDeclaration	access:public	signature:()
~TiXmlDocument	tinyxml/tinyxml.h	/^	virtual ~TiXmlDocument() {}$/;"	f	class:TiXmlDocument	access:public	signature:()
~TiXmlElement	tinyxml/tinyxml.cpp	/^TiXmlElement::~TiXmlElement()$/;"	f	class:TiXmlElement	signature:()
~TiXmlElement	tinyxml/tinyxml.h	/^	virtual ~TiXmlElement();$/;"	p	class:TiXmlElement	access:public	signature:()
~TiXmlNode	tinyxml/tinyxml.cpp	/^TiXmlNode::~TiXmlNode()$/;"	f	class:TiXmlNode	signature:()
~TiXmlNode	tinyxml/tinyxml.h	/^	virtual ~TiXmlNode();$/;"	p	class:TiXmlNode	access:public	signature:()
~TiXmlString	tinyxml/tinystr.h	/^	~TiXmlString ()$/;"	f	class:TiXmlString	access:public	signature:()
~TiXmlText	tinyxml/tinyxml.h	/^	virtual ~TiXmlText() {}$/;"	f	class:TiXmlText	access:public	signature:()
~TiXmlUnknown	tinyxml/tinyxml.h	/^	virtual ~TiXmlUnknown() {}$/;"	f	class:TiXmlUnknown	access:public	signature:()
~TiXmlVisitor	tinyxml/tinyxml.h	/^	virtual ~TiXmlVisitor() {}$/;"	f	class:TiXmlVisitor	access:public	signature:()
~btKinematicCharacterController	btKinematicCharacterController.h	/^	~btKinematicCharacterController();$/;"	p	class:btKinematicCharacterController	access:public	signature:()
